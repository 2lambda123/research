{
  "addresses": {
    "AAR.ADDRPTR": [1073804560, 1, 4, 1, 4],
    "AAR.ENABLE": [1073804544, 1, 4, 1, 4],
    "AAR.EVENTS_END": [1073803520, 1, 4, 1, 4],
    "AAR.EVENTS_NOTRESOLVED": [1073803528, 1, 4, 1, 4],
    "AAR.EVENTS_RESOLVED": [1073803524, 1, 4, 1, 4],
    "AAR.INTENCLR": [1073804040, 1, 4, 1, 4],
    "AAR.INTENSET": [1073804036, 1, 4, 1, 4],
    "AAR.IRKPTR": [1073804552, 1, 4, 1, 4],
    "AAR.NIRK": [1073804548, 1, 4, 1, 4],
    "AAR.SCRATCHPTR": [1073804564, 1, 4, 1, 4],
    "AAR.STATUS": [1073804288, 1, 4, 1, 4],
    "AAR.TASKS_START": [1073803264, 1, 4, 1, 4],
    "AAR.TASKS_STOP": [1073803272, 1, 4, 1, 4],
    "BPROT.CONFIG0": [1073743360, 1, 4, 1, 4],
    "BPROT.CONFIG1": [1073743364, 1, 4, 1, 4],
    "BPROT.CONFIG2": [1073743376, 1, 4, 1, 4],
    "BPROT.CONFIG3": [1073743380, 1, 4, 1, 4],
    "BPROT.DISABLEINDEBUG": [1073743368, 1, 4, 1, 4],
    "BPROT.UNUSED0": [1073743372, 1, 4, 1, 4],
    "CCM.CNFPTR": [1073804552, 1, 4, 1, 4],
    "CCM.ENABLE": [1073804544, 1, 4, 1, 4],
    "CCM.EVENTS_ENDCRYPT": [1073803524, 1, 4, 1, 4],
    "CCM.EVENTS_ENDKSGEN": [1073803520, 1, 4, 1, 4],
    "CCM.EVENTS_ERROR": [1073803528, 1, 4, 1, 4],
    "CCM.INPTR": [1073804556, 1, 4, 1, 4],
    "CCM.INTENCLR": [1073804040, 1, 4, 1, 4],
    "CCM.INTENSET": [1073804036, 1, 4, 1, 4],
    "CCM.MICSTATUS": [1073804288, 1, 4, 1, 4],
    "CCM.MODE": [1073804548, 1, 4, 1, 4],
    "CCM.OUTPTR": [1073804560, 1, 4, 1, 4],
    "CCM.SCRATCHPTR": [1073804564, 1, 4, 1, 4],
    "CCM.SHORTS": [1073803776, 1, 4, 1, 4],
    "CCM.TASKS_CRYPT": [1073803268, 1, 4, 1, 4],
    "CCM.TASKS_KSGEN": [1073803264, 1, 4, 1, 4],
    "CCM.TASKS_STOP": [1073803272, 1, 4, 1, 4],
    "CLOCK.CTIV": [1073743160, 1, 4, 1, 4],
    "CLOCK.EVENTS_CTTO": [1073742096, 1, 4, 1, 4],
    "CLOCK.EVENTS_DONE": [1073742092, 1, 4, 1, 4],
    "CLOCK.EVENTS_HFCLKSTARTED": [1073742080, 1, 4, 1, 4],
    "CLOCK.EVENTS_LFCLKSTARTED": [1073742084, 1, 4, 1, 4],
    "CLOCK.HFCLKRUN": [1073742856, 1, 4, 1, 4],
    "CLOCK.HFCLKSTAT": [1073742860, 1, 4, 1, 4],
    "CLOCK.INTENCLR": [1073742600, 1, 4, 1, 4],
    "CLOCK.INTENSET": [1073742596, 1, 4, 1, 4],
    "CLOCK.LFCLKRUN": [1073742868, 1, 4, 1, 4],
    "CLOCK.LFCLKSRC": [1073743128, 1, 4, 1, 4],
    "CLOCK.LFCLKSRCCOPY": [1073742876, 1, 4, 1, 4],
    "CLOCK.LFCLKSTAT": [1073742872, 1, 4, 1, 4],
    "CLOCK.TASKS_CAL": [1073741840, 1, 4, 1, 4],
    "CLOCK.TASKS_CTSTART": [1073741844, 1, 4, 1, 4],
    "CLOCK.TASKS_CTSTOP": [1073741848, 1, 4, 1, 4],
    "CLOCK.TASKS_HFCLKSTART": [1073741824, 1, 4, 1, 4],
    "CLOCK.TASKS_HFCLKSTOP": [1073741828, 1, 4, 1, 4],
    "CLOCK.TASKS_LFCLKSTART": [1073741832, 1, 4, 1, 4],
    "CLOCK.TASKS_LFCLKSTOP": [1073741836, 1, 4, 1, 4],
    "CLOCK.TRACECONFIG": [1073743196, 1, 4, 1, 4],
    "CMO.BPIALL": [3758157688, 1, 4, 1, 4],
    "CMO.DCCIMVAC": [3758157680, 1, 4, 1, 4],
    "CMO.DCCISW": [3758157684, 1, 4, 1, 4],
    "CMO.DCCMVAC": [3758157672, 1, 4, 1, 4],
    "CMO.DCCMVAU": [3758157668, 1, 4, 1, 4],
    "CMO.DCCSW": [3758157676, 1, 4, 1, 4],
    "CMO.DCIMVAC": [3758157660, 1, 4, 1, 4],
    "CMO.DCISW": [3758157664, 1, 4, 1, 4],
    "CMO.ICIALLU": [3758157648, 1, 4, 1, 4],
    "CMO.ICIMVAU": [3758157656, 1, 4, 1, 4],
    "COMP.ENABLE": [1073820928, 1, 4, 1, 4],
    "COMP.EVENTS_CROSS": [1073819916, 1, 4, 1, 4],
    "COMP.EVENTS_DOWN": [1073819908, 1, 4, 1, 4],
    "COMP.EVENTS_READY": [1073819904, 1, 4, 1, 4],
    "COMP.EVENTS_UP": [1073819912, 1, 4, 1, 4],
    "COMP.EXTREFSEL": [1073820940, 1, 4, 1, 4],
    "COMP.HYST": [1073820984, 1, 4, 1, 4],
    "COMP.INTEN": [1073820416, 1, 4, 1, 4],
    "COMP.INTENCLR": [1073820424, 1, 4, 1, 4],
    "COMP.INTENSET": [1073820420, 1, 4, 1, 4],
    "COMP.ISOURCE": [1073820988, 1, 4, 1, 4],
    "COMP.MODE": [1073820980, 1, 4, 1, 4],
    "COMP.PSEL": [1073820932, 1, 4, 1, 4],
    "COMP.REFSEL": [1073820936, 1, 4, 1, 4],
    "COMP.RESULT": [1073820672, 1, 4, 1, 4],
    "COMP.SHORTS": [1073820160, 1, 4, 1, 4],
    "COMP.TASKS_SAMPLE": [1073819656, 1, 4, 1, 4],
    "COMP.TASKS_START": [1073819648, 1, 4, 1, 4],
    "COMP.TASKS_STOP": [1073819652, 1, 4, 1, 4],
    "COMP.TH": [1073820976, 1, 4, 1, 4],
    "DCB.DCRDR": [3758157304, 1, 4, 1, 4],
    "DCB.DCRSR": [3758157300, 1, 4, 1, 4],
    "DCB.DEMCR": [3758157308, 1, 4, 1, 4],
    "DCB.DHCSR": [3758157296, 1, 4, 1, 4],
    "DPB.FP_COMP_<n>": [3758104584, 8, 4, 1, 32],
    "DPB.FP_CTRL": [3758104576, 1, 4, 1, 4],
    "DPB.FP_REMAP": [3758104580, 1, 4, 1, 4],
    "DWT.DWT_COMP_<n>": [3758100512, 8, 4, 1, 32],
    "DWT.DWT_CPICNT": [3758100488, 1, 4, 1, 4],
    "DWT.DWT_CTRL": [3758100480, 1, 4, 1, 4],
    "DWT.DWT_CYCCNT": [3758100484, 1, 4, 1, 4],
    "DWT.DWT_EXCCNT": [3758100492, 1, 4, 1, 4],
    "DWT.DWT_FOLDCNT": [3758100504, 1, 4, 1, 4],
    "DWT.DWT_FUNCTION_<n>": [3758100520, 8, 4, 1, 32],
    "DWT.DWT_LSUCNT": [3758100500, 1, 4, 1, 4],
    "DWT.DWT_MASK_<n>": [3758100516, 8, 4, 1, 32],
    "DWT.DWT_PCSR": [3758100508, 1, 4, 1, 4],
    "DWT.DWT_SLEEPCNT": [3758100496, 1, 4, 1, 4],
    "ECB.ECBDATAPTR": [1073800452, 1, 4, 1, 4],
    "ECB.EVENTS_ENDECB": [1073799424, 1, 4, 1, 4],
    "ECB.EVENTS_ERRORECB": [1073799428, 1, 4, 1, 4],
    "ECB.INTENCLR": [1073799944, 1, 4, 1, 4],
    "ECB.INTENSET": [1073799940, 1, 4, 1, 4],
    "ECB.TASKS_STARTECB": [1073799168, 1, 4, 1, 4],
    "ECB.TASKS_STOPECB": [1073799172, 1, 4, 1, 4],
    "EGU0.EVENTS_TRIGGERED<n>": [1073824000, 16, 4, 1, 64],
    "EGU0.INTEN": [1073824512, 1, 4, 1, 4],
    "EGU0.INTENCLR": [1073824520, 1, 4, 1, 4],
    "EGU0.INTENSET": [1073824516, 1, 4, 1, 4],
    "EGU0.TASKS_TRIGGER<n>": [1073823744, 16, 4, 1, 64],
    "EGU1.EVENTS_TRIGGERED<n>": [1073828096, 16, 4, 1, 64],
    "EGU1.INTEN": [1073828608, 1, 4, 1, 4],
    "EGU1.INTENCLR": [1073828616, 1, 4, 1, 4],
    "EGU1.INTENSET": [1073828612, 1, 4, 1, 4],
    "EGU1.TASKS_TRIGGER<n>": [1073827840, 16, 4, 1, 64],
    "EGU2.EVENTS_TRIGGERED<n>": [1073832192, 16, 4, 1, 64],
    "EGU2.INTEN": [1073832704, 1, 4, 1, 4],
    "EGU2.INTENCLR": [1073832712, 1, 4, 1, 4],
    "EGU2.INTENSET": [1073832708, 1, 4, 1, 4],
    "EGU2.TASKS_TRIGGER<n>": [1073831936, 16, 4, 1, 64],
    "EGU3.EVENTS_TRIGGERED<n>": [1073836288, 16, 4, 1, 64],
    "EGU3.INTEN": [1073836800, 1, 4, 1, 4],
    "EGU3.INTENCLR": [1073836808, 1, 4, 1, 4],
    "EGU3.INTENSET": [1073836804, 1, 4, 1, 4],
    "EGU3.TASKS_TRIGGER<n>": [1073836032, 16, 4, 1, 64],
    "EGU4.EVENTS_TRIGGERED<n>": [1073840384, 16, 4, 1, 64],
    "EGU4.INTEN": [1073840896, 1, 4, 1, 4],
    "EGU4.INTENCLR": [1073840904, 1, 4, 1, 4],
    "EGU4.INTENSET": [1073840900, 1, 4, 1, 4],
    "EGU4.TASKS_TRIGGER<n>": [1073840128, 16, 4, 1, 64],
    "EGU5.EVENTS_TRIGGERED<n>": [1073844480, 16, 4, 1, 64],
    "EGU5.INTEN": [1073844992, 1, 4, 1, 4],
    "EGU5.INTENCLR": [1073845000, 1, 4, 1, 4],
    "EGU5.INTENSET": [1073844996, 1, 4, 1, 4],
    "EGU5.TASKS_TRIGGER<n>": [1073844224, 16, 4, 1, 64],
    "FICR.CODEPAGESIZE": [268435472, 1, 4, 1, 4],
    "FICR.CODESIZE": [268435476, 1, 4, 1, 4],
    "FICR.DEVICEADDR<n>": [268435620, 2, 4, 1, 8],
    "FICR.DEVICEADDRTYPE": [268435616, 1, 4, 1, 4],
    "FICR.DEVICEID<n>": [268435552, 2, 4, 1, 8],
    "FICR.ER<n>": [268435584, 4, 4, 1, 16],
    "FICR.INFO.FLASH": [268435728, 1, 4, 1, 4],
    "FICR.INFO.PACKAGE": [268435720, 1, 4, 1, 4],
    "FICR.INFO.PART": [268435712, 1, 4, 1, 4],
    "FICR.INFO.RAM": [268435724, 1, 4, 1, 4],
    "FICR.INFO.UNUSED0<n>": [268435732, 3, 4, 1, 12],
    "FICR.INFO.VARIANT": [268435716, 1, 4, 1, 4],
    "FICR.IR<n>": [268435600, 4, 4, 1, 16],
    "FICR.NFC.TAGHEADER0": [268436560, 1, 4, 1, 4],
    "FICR.NFC.TAGHEADER1": [268436564, 1, 4, 1, 4],
    "FICR.NFC.TAGHEADER2": [268436568, 1, 4, 1, 4],
    "FICR.NFC.TAGHEADER3": [268436572, 1, 4, 1, 4],
    "FICR.TEMP.A0": [268436484, 1, 4, 1, 4],
    "FICR.TEMP.A1": [268436488, 1, 4, 1, 4],
    "FICR.TEMP.A2": [268436492, 1, 4, 1, 4],
    "FICR.TEMP.A3": [268436496, 1, 4, 1, 4],
    "FICR.TEMP.A4": [268436500, 1, 4, 1, 4],
    "FICR.TEMP.A5": [268436504, 1, 4, 1, 4],
    "FICR.TEMP.B0": [268436508, 1, 4, 1, 4],
    "FICR.TEMP.B1": [268436512, 1, 4, 1, 4],
    "FICR.TEMP.B2": [268436516, 1, 4, 1, 4],
    "FICR.TEMP.B3": [268436520, 1, 4, 1, 4],
    "FICR.TEMP.B4": [268436524, 1, 4, 1, 4],
    "FICR.TEMP.B5": [268436528, 1, 4, 1, 4],
    "FICR.TEMP.T0": [268436532, 1, 4, 1, 4],
    "FICR.TEMP.T1": [268436536, 1, 4, 1, 4],
    "FICR.TEMP.T2": [268436540, 1, 4, 1, 4],
    "FICR.TEMP.T3": [268436544, 1, 4, 1, 4],
    "FICR.TEMP.T4": [268436548, 1, 4, 1, 4],
    "FP.FPCAR": [3758157624, 1, 4, 1, 4],
    "FP.FPCCR": [3758157620, 1, 4, 1, 4],
    "FP.FPDSCR": [3758157628, 1, 4, 1, 4],
    "FP.MVFR0": [3758157632, 1, 4, 1, 4],
    "FP.MVFR1": [3758157636, 1, 4, 1, 4],
    "FP.MVFR2": [3758157640, 1, 4, 1, 4],
    "FPU.UNUSED": [1073897472, 1, 4, 1, 4],
    "GPIOTE.CONFIG<n>": [1073767696, 8, 4, 1, 32],
    "GPIOTE.EVENTS_IN<n>": [1073766656, 8, 4, 1, 32],
    "GPIOTE.EVENTS_PORT": [1073766780, 1, 4, 1, 4],
    "GPIOTE.INTENCLR": [1073767176, 1, 4, 1, 4],
    "GPIOTE.INTENSET": [1073767172, 1, 4, 1, 4],
    "GPIOTE.TASKS_CLR<n>": [1073766496, 8, 4, 1, 32],
    "GPIOTE.TASKS_OUT<n>": [1073766400, 8, 4, 1, 32],
    "GPIOTE.TASKS_SET<n>": [1073766448, 8, 4, 1, 32],
    "I2S.CONFIG.ALIGN": [1073894688, 1, 4, 1, 4],
    "I2S.CONFIG.CHANNELS": [1073894696, 1, 4, 1, 4],
    "I2S.CONFIG.FORMAT": [1073894692, 1, 4, 1, 4],
    "I2S.CONFIG.MCKEN": [1073894672, 1, 4, 1, 4],
    "I2S.CONFIG.MCKFREQ": [1073894676, 1, 4, 1, 4],
    "I2S.CONFIG.MODE": [1073894660, 1, 4, 1, 4],
    "I2S.CONFIG.RATIO": [1073894680, 1, 4, 1, 4],
    "I2S.CONFIG.RXEN": [1073894664, 1, 4, 1, 4],
    "I2S.CONFIG.SWIDTH": [1073894684, 1, 4, 1, 4],
    "I2S.CONFIG.TXEN": [1073894668, 1, 4, 1, 4],
    "I2S.ENABLE": [1073894656, 1, 4, 1, 4],
    "I2S.EVENTS_RXPTRUPD": [1073893636, 1, 4, 1, 4],
    "I2S.EVENTS_STOPPED": [1073893640, 1, 4, 1, 4],
    "I2S.EVENTS_TXPTRUPD": [1073893652, 1, 4, 1, 4],
    "I2S.INTEN": [1073894144, 1, 4, 1, 4],
    "I2S.INTENCLR": [1073894152, 1, 4, 1, 4],
    "I2S.INTENSET": [1073894148, 1, 4, 1, 4],
    "I2S.PSEL.LRCK": [1073894760, 1, 4, 1, 4],
    "I2S.PSEL.MCK": [1073894752, 1, 4, 1, 4],
    "I2S.PSEL.SCK": [1073894756, 1, 4, 1, 4],
    "I2S.PSEL.SDIN": [1073894764, 1, 4, 1, 4],
    "I2S.PSEL.SDOUT": [1073894768, 1, 4, 1, 4],
    "I2S.RXD.PTR": [1073894712, 1, 4, 1, 4],
    "I2S.RXTXD.MAXCNT": [1073894736, 1, 4, 1, 4],
    "I2S.TASKS_START": [1073893376, 1, 4, 1, 4],
    "I2S.TASKS_STOP": [1073893380, 1, 4, 1, 4],
    "I2S.TXD.PTR": [1073894720, 1, 4, 1, 4],
    "ICB.ACTLR": [3758153736, 1, 4, 1, 4],
    "ICB.ICTR": [3758153732, 1, 4, 1, 4],
    "ITM.ITM_STIM_<n>": [3758096384, 256, 4, 1, 1024],
    "ITM.ITM_TCR": [3758100096, 1, 4, 1, 4],
    "ITM.ITM_TER_<n>": [3758099968, 8, 4, 1, 32],
    "ITM.ITM_TPR": [3758100032, 1, 4, 1, 4],
    "LPCOMP.ANADETECT": [1073820960, 1, 4, 1, 4],
    "LPCOMP.ENABLE": [1073820928, 1, 4, 1, 4],
    "LPCOMP.EVENTS_CROSS": [1073819916, 1, 4, 1, 4],
    "LPCOMP.EVENTS_DOWN": [1073819908, 1, 4, 1, 4],
    "LPCOMP.EVENTS_READY": [1073819904, 1, 4, 1, 4],
    "LPCOMP.EVENTS_UP": [1073819912, 1, 4, 1, 4],
    "LPCOMP.EXTREFSEL": [1073820940, 1, 4, 1, 4],
    "LPCOMP.HYST": [1073820984, 1, 4, 1, 4],
    "LPCOMP.INTENCLR": [1073820424, 1, 4, 1, 4],
    "LPCOMP.INTENSET": [1073820420, 1, 4, 1, 4],
    "LPCOMP.PSEL": [1073820932, 1, 4, 1, 4],
    "LPCOMP.REFSEL": [1073820936, 1, 4, 1, 4],
    "LPCOMP.RESULT": [1073820672, 1, 4, 1, 4],
    "LPCOMP.SHORTS": [1073820160, 1, 4, 1, 4],
    "LPCOMP.TASKS_SAMPLE": [1073819656, 1, 4, 1, 4],
    "LPCOMP.TASKS_START": [1073819648, 1, 4, 1, 4],
    "LPCOMP.TASKS_STOP": [1073819652, 1, 4, 1, 4],
    "MPU.MPU_CTRL": [3758157204, 1, 4, 1, 4],
    "MPU.MPU_RASR": [3758157216, 1, 4, 1, 4],
    "MPU.MPU_RBAR": [3758157212, 1, 4, 1, 4],
    "MPU.MPU_RNR": [3758157208, 1, 4, 1, 4],
    "MPU.MPU_TYPE": [3758157200, 1, 4, 1, 4],
    "MWU.EVENTS_PREGION<m>.RA": [1073873252, 1, 4, 2, 8],
    "MWU.EVENTS_PREGION<m>.WA": [1073873248, 1, 4, 2, 8],
    "MWU.EVENTS_REGION<m>.RA": [1073873156, 1, 4, 4, 8],
    "MWU.EVENTS_REGION<m>.WA": [1073873152, 1, 4, 4, 8],
    "MWU.INTEN": [1073873664, 1, 4, 1, 4],
    "MWU.INTENCLR": [1073873672, 1, 4, 1, 4],
    "MWU.INTENSET": [1073873668, 1, 4, 1, 4],
    "MWU.NMIEN": [1073873696, 1, 4, 1, 4],
    "MWU.NMIENCLR": [1073873704, 1, 4, 1, 4],
    "MWU.NMIENSET": [1073873700, 1, 4, 1, 4],
    "MWU.PERREGION<m>.SUBSTATRA": [1073873924, 1, 4, 2, 8],
    "MWU.PERREGION<m>.SUBSTATWA": [1073873920, 1, 4, 2, 8],
    "MWU.PREGION<m>.END": [1073874628, 1, 4, 2, 16],
    "MWU.PREGION<m>.START": [1073874624, 1, 4, 2, 16],
    "MWU.PREGION<m>.SUBS": [1073874632, 1, 4, 2, 16],
    "MWU.REGION<m>.END": [1073874436, 1, 4, 4, 16],
    "MWU.REGION<m>.START": [1073874432, 1, 4, 4, 16],
    "MWU.REGIONEN": [1073874192, 1, 4, 1, 4],
    "MWU.REGIONENCLR": [1073874200, 1, 4, 1, 4],
    "MWU.REGIONENSET": [1073874196, 1, 4, 1, 4],
    "NFCT.CURRENTLOADCTRL": [1073763376, 1, 4, 1, 4],
    "NFCT.ERRORSTATUS": [1073763332, 1, 4, 1, 4],
    "NFCT.EVENTS_AUTOCOLRESSTARTED": [1073762616, 1, 4, 1, 4],
    "NFCT.EVENTS_COLLISION": [1073762632, 1, 4, 1, 4],
    "NFCT.EVENTS_ENDRX": [1073762604, 1, 4, 1, 4],
    "NFCT.EVENTS_ENDTX": [1073762608, 1, 4, 1, 4],
    "NFCT.EVENTS_ERROR": [1073762588, 1, 4, 1, 4],
    "NFCT.EVENTS_FIELDDETECTED": [1073762564, 1, 4, 1, 4],
    "NFCT.EVENTS_FIELDLOST": [1073762568, 1, 4, 1, 4],
    "NFCT.EVENTS_READY": [1073762560, 1, 4, 1, 4],
    "NFCT.EVENTS_RXERROR": [1073762600, 1, 4, 1, 4],
    "NFCT.EVENTS_RXFRAMEEND": [1073762584, 1, 4, 1, 4],
    "NFCT.EVENTS_RXFRAMESTART": [1073762580, 1, 4, 1, 4],
    "NFCT.EVENTS_SELECTED": [1073762636, 1, 4, 1, 4],
    "NFCT.EVENTS_STARTED": [1073762640, 1, 4, 1, 4],
    "NFCT.EVENTS_TXFRAMEEND": [1073762576, 1, 4, 1, 4],
    "NFCT.EVENTS_TXFRAMESTART": [1073762572, 1, 4, 1, 4],
    "NFCT.FIELDPRESENT": [1073763388, 1, 4, 1, 4],
    "NFCT.FRAMEDELAYMAX": [1073763592, 1, 4, 1, 4],
    "NFCT.FRAMEDELAYMIN": [1073763588, 1, 4, 1, 4],
    "NFCT.FRAMEDELAYMODE": [1073763596, 1, 4, 1, 4],
    "NFCT.FRAMESTATUS.RX": [1073763340, 1, 4, 1, 4],
    "NFCT.INTEN": [1073763072, 1, 4, 1, 4],
    "NFCT.INTENCLR": [1073763080, 1, 4, 1, 4],
    "NFCT.INTENSET": [1073763076, 1, 4, 1, 4],
    "NFCT.MAXLEN": [1073763604, 1, 4, 1, 4],
    "NFCT.NFCID1_2ND_LAST": [1073763732, 1, 4, 1, 4],
    "NFCT.NFCID1_3RD_LAST": [1073763736, 1, 4, 1, 4],
    "NFCT.NFCID1_LAST": [1073763728, 1, 4, 1, 4],
    "NFCT.PACKETPTR": [1073763600, 1, 4, 1, 4],
    "NFCT.RXD.AMOUNT": [1073763620, 1, 4, 1, 4],
    "NFCT.RXD.FRAMECONFIG": [1073763616, 1, 4, 1, 4],
    "NFCT.SELRES": [1073763748, 1, 4, 1, 4],
    "NFCT.SENSRES": [1073763744, 1, 4, 1, 4],
    "NFCT.SHORTS": [1073762816, 1, 4, 1, 4],
    "NFCT.TASKS_ACTIVATE": [1073762304, 1, 4, 1, 4],
    "NFCT.TASKS_DISABLE": [1073762308, 1, 4, 1, 4],
    "NFCT.TASKS_ENABLERXDATA": [1073762332, 1, 4, 1, 4],
    "NFCT.TASKS_GOIDLE": [1073762340, 1, 4, 1, 4],
    "NFCT.TASKS_GOSLEEP": [1073762344, 1, 4, 1, 4],
    "NFCT.TASKS_SENSE": [1073762312, 1, 4, 1, 4],
    "NFCT.TASKS_STARTTX": [1073762316, 1, 4, 1, 4],
    "NFCT.TXD.AMOUNT": [1073763612, 1, 4, 1, 4],
    "NFCT.TXD.FRAMECONFIG": [1073763608, 1, 4, 1, 4],
    "NVIC.NVIC_IABR_<n>": [3758154496, 16, 4, 1, 64],
    "NVIC.NVIC_ICER_<n>": [3758154112, 16, 4, 1, 64],
    "NVIC.NVIC_ICPR_<n>": [3758154368, 16, 4, 1, 64],
    "NVIC.NVIC_IPR_<n>": [3758154752, 124, 4, 1, 496],
    "NVIC.NVIC_ISER_<n>": [3758153984, 16, 4, 1, 64],
    "NVIC.NVIC_ISPR_<n>": [3758154240, 16, 4, 1, 64],
    "NVMC.CONFIG": [1073865988, 1, 4, 1, 4],
    "NVMC.ERASEALL": [1073865996, 1, 4, 1, 4],
    "NVMC.ERASEPAGE": [1073865992, 1, 4, 1, 4],
    "NVMC.ERASEPCR0": [1073866000, 1, 4, 1, 4],
    "NVMC.ERASEPCR1": [1073865992, 1, 4, 1, 4],
    "NVMC.ERASEUICR": [1073866004, 1, 4, 1, 4],
    "NVMC.ICACHECNF": [1073866048, 1, 4, 1, 4],
    "NVMC.IHIT": [1073866056, 1, 4, 1, 4],
    "NVMC.IMISS": [1073866060, 1, 4, 1, 4],
    "NVMC.READY": [1073865728, 1, 4, 1, 4],
    "P0.DETECTMODE": [1342178596, 1, 4, 1, 4],
    "P0.DIR": [1342178580, 1, 4, 1, 4],
    "P0.DIRCLR": [1342178588, 1, 4, 1, 4],
    "P0.DIRSET": [1342178584, 1, 4, 1, 4],
    "P0.IN": [1342178576, 1, 4, 1, 4],
    "P0.LATCH": [1342178592, 1, 4, 1, 4],
    "P0.OUT": [1342178564, 1, 4, 1, 4],
    "P0.OUTCLR": [1342178572, 1, 4, 1, 4],
    "P0.OUTSET": [1342178568, 1, 4, 1, 4],
    "P0.PIN_CNF<n>": [1342179072, 32, 4, 1, 128],
    "PDM.ENABLE": [1073861888, 1, 4, 1, 4],
    "PDM.EVENTS_END": [1073860872, 1, 4, 1, 4],
    "PDM.EVENTS_STARTED": [1073860864, 1, 4, 1, 4],
    "PDM.EVENTS_STOPPED": [1073860868, 1, 4, 1, 4],
    "PDM.GAINL": [1073861912, 1, 4, 1, 4],
    "PDM.GAINR": [1073861916, 1, 4, 1, 4],
    "PDM.INTEN": [1073861376, 1, 4, 1, 4],
    "PDM.INTENCLR": [1073861384, 1, 4, 1, 4],
    "PDM.INTENSET": [1073861380, 1, 4, 1, 4],
    "PDM.MODE": [1073861896, 1, 4, 1, 4],
    "PDM.PDMCLKCTRL": [1073861892, 1, 4, 1, 4],
    "PDM.PSEL.CLK": [1073861952, 1, 4, 1, 4],
    "PDM.PSEL.DIN": [1073861956, 1, 4, 1, 4],
    "PDM.SAMPLE.MAXCNT": [1073861988, 1, 4, 1, 4],
    "PDM.SAMPLE.PTR": [1073861984, 1, 4, 1, 4],
    "PDM.TASKS_START": [1073860608, 1, 4, 1, 4],
    "PDM.TASKS_STOP": [1073860612, 1, 4, 1, 4],
    "POWER.DCDCEN": [1073743224, 1, 4, 1, 4],
    "POWER.EVENTS_POFWARN": [1073742088, 1, 4, 1, 4],
    "POWER.EVENTS_SLEEPENTER": [1073742100, 1, 4, 1, 4],
    "POWER.EVENTS_SLEEPEXIT": [1073742104, 1, 4, 1, 4],
    "POWER.GPREGRET": [1073743132, 1, 4, 1, 4],
    "POWER.GPREGRET2": [1073743136, 1, 4, 1, 4],
    "POWER.INTENCLR": [1073742600, 1, 4, 1, 4],
    "POWER.INTENSET": [1073742596, 1, 4, 1, 4],
    "POWER.POFCON": [1073743120, 1, 4, 1, 4],
    "POWER.RAM<m>.POWER": [1073744128, 1, 4, 8, 16],
    "POWER.RAM<m>.POWERCLR": [1073744136, 1, 4, 8, 16],
    "POWER.RAM<m>.POWERSET": [1073744132, 1, 4, 8, 16],
    "POWER.RAMON": [1073743140, 1, 4, 1, 4],
    "POWER.RAMONB": [1073743188, 1, 4, 1, 4],
    "POWER.RAMSTATUS": [1073742888, 1, 4, 1, 4],
    "POWER.RESETREAS": [1073742848, 1, 4, 1, 4],
    "POWER.SYSTEMOFF": [1073743104, 1, 4, 1, 4],
    "POWER.TASKS_CONSTLAT": [1073741944, 1, 4, 1, 4],
    "POWER.TASKS_LOWPWR": [1073741948, 1, 4, 1, 4],
    "PPI.CH<m>.EEP": [1073870096, 1, 4, 20, 8],
    "PPI.CH<m>.TEP": [1073870100, 1, 4, 20, 8],
    "PPI.CHEN": [1073870080, 1, 4, 1, 4],
    "PPI.CHENCLR": [1073870088, 1, 4, 1, 4],
    "PPI.CHENSET": [1073870084, 1, 4, 1, 4],
    "PPI.CHG<n>": [1073870848, 6, 4, 1, 24],
    "PPI.FORK<m>.TEP": [1073871120, 1, 4, 32, 4],
    "PPI.TASKS_CHG<m>.DIS": [1073868804, 1, 4, 6, 8],
    "PPI.TASKS_CHG<m>.EN": [1073868800, 1, 4, 6, 8],
    "PWM0.COUNTERTOP": [1073857800, 1, 4, 1, 4],
    "PWM0.DECODER": [1073857808, 1, 4, 1, 4],
    "PWM0.ENABLE": [1073857792, 1, 4, 1, 4],
    "PWM0.EVENTS_LOOPSDONE": [1073856796, 1, 4, 1, 4],
    "PWM0.EVENTS_PWMPERIODEND": [1073856792, 1, 4, 1, 4],
    "PWM0.EVENTS_SEQEND<n>": [1073856784, 2, 4, 1, 8],
    "PWM0.EVENTS_SEQSTARTED<n>": [1073856776, 2, 4, 1, 8],
    "PWM0.EVENTS_STOPPED": [1073856772, 1, 4, 1, 4],
    "PWM0.INTEN": [1073857280, 1, 4, 1, 4],
    "PWM0.INTENCLR": [1073857288, 1, 4, 1, 4],
    "PWM0.INTENSET": [1073857284, 1, 4, 1, 4],
    "PWM0.LOOP": [1073857812, 1, 4, 1, 4],
    "PWM0.MODE": [1073857796, 1, 4, 1, 4],
    "PWM0.PRESCALER": [1073857804, 1, 4, 1, 4],
    "PWM0.PSEL.OUT<n>": [1073857888, 4, 4, 1, 16],
    "PWM0.SEQ<m>.CNT": [1073857828, 1, 4, 2, 32],
    "PWM0.SEQ<m>.ENDDELAY": [1073857836, 1, 4, 2, 32],
    "PWM0.SEQ<m>.PTR": [1073857824, 1, 4, 2, 32],
    "PWM0.SEQ<m>.REFRESH": [1073857832, 1, 4, 2, 32],
    "PWM0.SHORTS": [1073857024, 1, 4, 1, 4],
    "PWM0.TASKS_NEXTSTEP": [1073856528, 1, 4, 1, 4],
    "PWM0.TASKS_SEQSTART<n>": [1073856520, 2, 4, 1, 8],
    "PWM0.TASKS_STOP": [1073856516, 1, 4, 1, 4],
    "PWM1.COUNTERTOP": [1073878280, 1, 4, 1, 4],
    "PWM1.DECODER": [1073878288, 1, 4, 1, 4],
    "PWM1.ENABLE": [1073878272, 1, 4, 1, 4],
    "PWM1.EVENTS_LOOPSDONE": [1073877276, 1, 4, 1, 4],
    "PWM1.EVENTS_PWMPERIODEND": [1073877272, 1, 4, 1, 4],
    "PWM1.EVENTS_SEQEND<n>": [1073877264, 2, 4, 1, 8],
    "PWM1.EVENTS_SEQSTARTED<n>": [1073877256, 2, 4, 1, 8],
    "PWM1.EVENTS_STOPPED": [1073877252, 1, 4, 1, 4],
    "PWM1.INTEN": [1073877760, 1, 4, 1, 4],
    "PWM1.INTENCLR": [1073877768, 1, 4, 1, 4],
    "PWM1.INTENSET": [1073877764, 1, 4, 1, 4],
    "PWM1.LOOP": [1073878292, 1, 4, 1, 4],
    "PWM1.MODE": [1073878276, 1, 4, 1, 4],
    "PWM1.PRESCALER": [1073878284, 1, 4, 1, 4],
    "PWM1.PSEL.OUT<n>": [1073878368, 4, 4, 1, 16],
    "PWM1.SEQ<m>.CNT": [1073878308, 1, 4, 2, 32],
    "PWM1.SEQ<m>.ENDDELAY": [1073878316, 1, 4, 2, 32],
    "PWM1.SEQ<m>.PTR": [1073878304, 1, 4, 2, 32],
    "PWM1.SEQ<m>.REFRESH": [1073878312, 1, 4, 2, 32],
    "PWM1.SHORTS": [1073877504, 1, 4, 1, 4],
    "PWM1.TASKS_NEXTSTEP": [1073877008, 1, 4, 1, 4],
    "PWM1.TASKS_SEQSTART<n>": [1073877000, 2, 4, 1, 8],
    "PWM1.TASKS_STOP": [1073876996, 1, 4, 1, 4],
    "PWM2.COUNTERTOP": [1073882376, 1, 4, 1, 4],
    "PWM2.DECODER": [1073882384, 1, 4, 1, 4],
    "PWM2.ENABLE": [1073882368, 1, 4, 1, 4],
    "PWM2.EVENTS_LOOPSDONE": [1073881372, 1, 4, 1, 4],
    "PWM2.EVENTS_PWMPERIODEND": [1073881368, 1, 4, 1, 4],
    "PWM2.EVENTS_SEQEND<n>": [1073881360, 2, 4, 1, 8],
    "PWM2.EVENTS_SEQSTARTED<n>": [1073881352, 2, 4, 1, 8],
    "PWM2.EVENTS_STOPPED": [1073881348, 1, 4, 1, 4],
    "PWM2.INTEN": [1073881856, 1, 4, 1, 4],
    "PWM2.INTENCLR": [1073881864, 1, 4, 1, 4],
    "PWM2.INTENSET": [1073881860, 1, 4, 1, 4],
    "PWM2.LOOP": [1073882388, 1, 4, 1, 4],
    "PWM2.MODE": [1073882372, 1, 4, 1, 4],
    "PWM2.PRESCALER": [1073882380, 1, 4, 1, 4],
    "PWM2.PSEL.OUT<n>": [1073882464, 4, 4, 1, 16],
    "PWM2.SEQ<m>.CNT": [1073882404, 1, 4, 2, 32],
    "PWM2.SEQ<m>.ENDDELAY": [1073882412, 1, 4, 2, 32],
    "PWM2.SEQ<m>.PTR": [1073882400, 1, 4, 2, 32],
    "PWM2.SEQ<m>.REFRESH": [1073882408, 1, 4, 2, 32],
    "PWM2.SHORTS": [1073881600, 1, 4, 1, 4],
    "PWM2.TASKS_NEXTSTEP": [1073881104, 1, 4, 1, 4],
    "PWM2.TASKS_SEQSTART<n>": [1073881096, 2, 4, 1, 8],
    "PWM2.TASKS_STOP": [1073881092, 1, 4, 1, 4],
    "QDEC.ACC": [1073816852, 1, 4, 1, 4],
    "QDEC.ACCDBL": [1073816900, 1, 4, 1, 4],
    "QDEC.ACCDBLREAD": [1073816904, 1, 4, 1, 4],
    "QDEC.ACCREAD": [1073816856, 1, 4, 1, 4],
    "QDEC.DBFEN": [1073816872, 1, 4, 1, 4],
    "QDEC.ENABLE": [1073816832, 1, 4, 1, 4],
    "QDEC.EVENTS_ACCOF": [1073815816, 1, 4, 1, 4],
    "QDEC.EVENTS_DBLRDY": [1073815820, 1, 4, 1, 4],
    "QDEC.EVENTS_REPORTRDY": [1073815812, 1, 4, 1, 4],
    "QDEC.EVENTS_SAMPLERDY": [1073815808, 1, 4, 1, 4],
    "QDEC.EVENTS_STOPPED": [1073815824, 1, 4, 1, 4],
    "QDEC.INTENCLR": [1073816328, 1, 4, 1, 4],
    "QDEC.INTENSET": [1073816324, 1, 4, 1, 4],
    "QDEC.LEDPOL": [1073816836, 1, 4, 1, 4],
    "QDEC.LEDPRE": [1073816896, 1, 4, 1, 4],
    "QDEC.PSEL.A": [1073816864, 1, 4, 1, 4],
    "QDEC.PSEL.B": [1073816868, 1, 4, 1, 4],
    "QDEC.PSEL.LED": [1073816860, 1, 4, 1, 4],
    "QDEC.REPORTPER": [1073816848, 1, 4, 1, 4],
    "QDEC.SAMPLE": [1073816844, 1, 4, 1, 4],
    "QDEC.SAMPLEPER": [1073816840, 1, 4, 1, 4],
    "QDEC.SHORTS": [1073816064, 1, 4, 1, 4],
    "QDEC.TASKS_RDCLRACC": [1073815564, 1, 4, 1, 4],
    "QDEC.TASKS_RDCLRDBL": [1073815568, 1, 4, 1, 4],
    "QDEC.TASKS_READCLRACC": [1073815560, 1, 4, 1, 4],
    "QDEC.TASKS_START": [1073815552, 1, 4, 1, 4],
    "QDEC.TASKS_STOP": [1073815556, 1, 4, 1, 4],
    "RADIO.BASE0": [1073747228, 1, 4, 1, 4],
    "RADIO.BASE1": [1073747232, 1, 4, 1, 4],
    "RADIO.BCC": [1073747296, 1, 4, 1, 4],
    "RADIO.CRCCNF": [1073747252, 1, 4, 1, 4],
    "RADIO.CRCINIT": [1073747260, 1, 4, 1, 4],
    "RADIO.CRCPOLY": [1073747256, 1, 4, 1, 4],
    "RADIO.CRCSTATUS": [1073746944, 1, 4, 1, 4],
    "RADIO.DAB<n>": [1073747456, 8, 4, 1, 32],
    "RADIO.DACNF": [1073747520, 1, 4, 1, 4],
    "RADIO.DAI": [1073746960, 1, 4, 1, 4],
    "RADIO.DAP<n>": [1073747488, 8, 4, 1, 32],
    "RADIO.DATAWHITEIV": [1073747284, 1, 4, 1, 4],
    "RADIO.EVENTS_ADDRESS": [1073746180, 1, 4, 1, 4],
    "RADIO.EVENTS_BCMATCH": [1073746216, 1, 4, 1, 4],
    "RADIO.EVENTS_CRCERROR": [1073746228, 1, 4, 1, 4],
    "RADIO.EVENTS_CRCOK": [1073746224, 1, 4, 1, 4],
    "RADIO.EVENTS_DEVMATCH": [1073746196, 1, 4, 1, 4],
    "RADIO.EVENTS_DEVMISS": [1073746200, 1, 4, 1, 4],
    "RADIO.EVENTS_DISABLED": [1073746192, 1, 4, 1, 4],
    "RADIO.EVENTS_END": [1073746188, 1, 4, 1, 4],
    "RADIO.EVENTS_PAYLOAD": [1073746184, 1, 4, 1, 4],
    "RADIO.EVENTS_READY": [1073746176, 1, 4, 1, 4],
    "RADIO.EVENTS_RSSIEND": [1073746204, 1, 4, 1, 4],
    "RADIO.FREQUENCY": [1073747208, 1, 4, 1, 4],
    "RADIO.INTENCLR": [1073746696, 1, 4, 1, 4],
    "RADIO.INTENSET": [1073746692, 1, 4, 1, 4],
    "RADIO.MODE": [1073747216, 1, 4, 1, 4],
    "RADIO.MODECNF0": [1073747536, 1, 4, 1, 4],
    "RADIO.PACKETPTR": [1073747204, 1, 4, 1, 4],
    "RADIO.PCNF0": [1073747220, 1, 4, 1, 4],
    "RADIO.PCNF1": [1073747224, 1, 4, 1, 4],
    "RADIO.POWER": [1073750012, 1, 4, 1, 4],
    "RADIO.PREFIX0": [1073747236, 1, 4, 1, 4],
    "RADIO.PREFIX1": [1073747240, 1, 4, 1, 4],
    "RADIO.RSSISAMPLE": [1073747272, 1, 4, 1, 4],
    "RADIO.RXADDRESSES": [1073747248, 1, 4, 1, 4],
    "RADIO.RXCRC": [1073746956, 1, 4, 1, 4],
    "RADIO.RXMATCH": [1073746952, 1, 4, 1, 4],
    "RADIO.SHORTS": [1073746432, 1, 4, 1, 4],
    "RADIO.STATE": [1073747280, 1, 4, 1, 4],
    "RADIO.TASKS_BCSTART": [1073745948, 1, 4, 1, 4],
    "RADIO.TASKS_BCSTOP": [1073745952, 1, 4, 1, 4],
    "RADIO.TASKS_DISABLE": [1073745936, 1, 4, 1, 4],
    "RADIO.TASKS_RSSISTART": [1073745940, 1, 4, 1, 4],
    "RADIO.TASKS_RSSISTOP": [1073745944, 1, 4, 1, 4],
    "RADIO.TASKS_RXEN": [1073745924, 1, 4, 1, 4],
    "RADIO.TASKS_START": [1073745928, 1, 4, 1, 4],
    "RADIO.TASKS_STOP": [1073745932, 1, 4, 1, 4],
    "RADIO.TASKS_TXEN": [1073745920, 1, 4, 1, 4],
    "RADIO.TIFS": [1073747268, 1, 4, 1, 4],
    "RADIO.TXADDRESS": [1073747244, 1, 4, 1, 4],
    "RADIO.TXPOWER": [1073747212, 1, 4, 1, 4],
    "RADIO.UNUSED0": [1073747264, 1, 4, 1, 4],
    "RNG.CONFIG": [1073796356, 1, 4, 1, 4],
    "RNG.EVENTS_VALRDY": [1073795328, 1, 4, 1, 4],
    "RNG.INTENCLR": [1073795848, 1, 4, 1, 4],
    "RNG.INTENSET": [1073795844, 1, 4, 1, 4],
    "RNG.SHORTS": [1073795584, 1, 4, 1, 4],
    "RNG.TASKS_START": [1073795072, 1, 4, 1, 4],
    "RNG.TASKS_STOP": [1073795076, 1, 4, 1, 4],
    "RNG.VALUE": [1073796360, 1, 4, 1, 4],
    "RTC0.CC<n>": [1073788224, 4, 4, 1, 16],
    "RTC0.COUNTER": [1073788164, 1, 4, 1, 4],
    "RTC0.EVENTS_COMPARE<n>": [1073787200, 4, 4, 1, 16],
    "RTC0.EVENTS_OVRFLW": [1073787140, 1, 4, 1, 4],
    "RTC0.EVENTS_TICK": [1073787136, 1, 4, 1, 4],
    "RTC0.EVTEN": [1073787712, 1, 4, 1, 4],
    "RTC0.EVTENCLR": [1073787720, 1, 4, 1, 4],
    "RTC0.EVTENSET": [1073787716, 1, 4, 1, 4],
    "RTC0.INTENCLR": [1073787656, 1, 4, 1, 4],
    "RTC0.INTENSET": [1073787652, 1, 4, 1, 4],
    "RTC0.PRESCALER": [1073788168, 1, 4, 1, 4],
    "RTC0.TASKS_CLEAR": [1073786888, 1, 4, 1, 4],
    "RTC0.TASKS_START": [1073786880, 1, 4, 1, 4],
    "RTC0.TASKS_STOP": [1073786884, 1, 4, 1, 4],
    "RTC0.TASKS_TRIGOVRFLW": [1073786892, 1, 4, 1, 4],
    "RTC1.CC<n>": [1073812800, 4, 4, 1, 16],
    "RTC1.COUNTER": [1073812740, 1, 4, 1, 4],
    "RTC1.EVENTS_COMPARE<n>": [1073811776, 4, 4, 1, 16],
    "RTC1.EVENTS_OVRFLW": [1073811716, 1, 4, 1, 4],
    "RTC1.EVENTS_TICK": [1073811712, 1, 4, 1, 4],
    "RTC1.EVTEN": [1073812288, 1, 4, 1, 4],
    "RTC1.EVTENCLR": [1073812296, 1, 4, 1, 4],
    "RTC1.EVTENSET": [1073812292, 1, 4, 1, 4],
    "RTC1.INTENCLR": [1073812232, 1, 4, 1, 4],
    "RTC1.INTENSET": [1073812228, 1, 4, 1, 4],
    "RTC1.PRESCALER": [1073812744, 1, 4, 1, 4],
    "RTC1.TASKS_CLEAR": [1073811464, 1, 4, 1, 4],
    "RTC1.TASKS_START": [1073811456, 1, 4, 1, 4],
    "RTC1.TASKS_STOP": [1073811460, 1, 4, 1, 4],
    "RTC1.TASKS_TRIGOVRFLW": [1073811468, 1, 4, 1, 4],
    "RTC2.CC<n>": [1073890624, 4, 4, 1, 16],
    "RTC2.COUNTER": [1073890564, 1, 4, 1, 4],
    "RTC2.EVENTS_COMPARE<n>": [1073889600, 4, 4, 1, 16],
    "RTC2.EVENTS_OVRFLW": [1073889540, 1, 4, 1, 4],
    "RTC2.EVENTS_TICK": [1073889536, 1, 4, 1, 4],
    "RTC2.EVTEN": [1073890112, 1, 4, 1, 4],
    "RTC2.EVTENCLR": [1073890120, 1, 4, 1, 4],
    "RTC2.EVTENSET": [1073890116, 1, 4, 1, 4],
    "RTC2.INTENCLR": [1073890056, 1, 4, 1, 4],
    "RTC2.INTENSET": [1073890052, 1, 4, 1, 4],
    "RTC2.PRESCALER": [1073890568, 1, 4, 1, 4],
    "RTC2.TASKS_CLEAR": [1073889288, 1, 4, 1, 4],
    "RTC2.TASKS_START": [1073889280, 1, 4, 1, 4],
    "RTC2.TASKS_STOP": [1073889284, 1, 4, 1, 4],
    "RTC2.TASKS_TRIGOVRFLW": [1073889292, 1, 4, 1, 4],
    "SAADC.CH<m>.CONFIG": [1073771800, 1, 4, 8, 16],
    "SAADC.CH<m>.LIMIT": [1073771804, 1, 4, 8, 16],
    "SAADC.CH<m>.PSELN": [1073771796, 1, 4, 8, 16],
    "SAADC.CH<m>.PSELP": [1073771792, 1, 4, 8, 16],
    "SAADC.ENABLE": [1073771776, 1, 4, 1, 4],
    "SAADC.EVENTS_CALIBRATEDONE": [1073770768, 1, 4, 1, 4],
    "SAADC.EVENTS_CH<m>.LIMITH": [1073770776, 1, 4, 8, 8],
    "SAADC.EVENTS_CH<m>.LIMITL": [1073770780, 1, 4, 8, 8],
    "SAADC.EVENTS_DONE": [1073770760, 1, 4, 1, 4],
    "SAADC.EVENTS_END": [1073770756, 1, 4, 1, 4],
    "SAADC.EVENTS_RESULTDONE": [1073770764, 1, 4, 1, 4],
    "SAADC.EVENTS_STARTED": [1073770752, 1, 4, 1, 4],
    "SAADC.EVENTS_STOPPED": [1073770772, 1, 4, 1, 4],
    "SAADC.INTEN": [1073771264, 1, 4, 1, 4],
    "SAADC.INTENCLR": [1073771272, 1, 4, 1, 4],
    "SAADC.INTENSET": [1073771268, 1, 4, 1, 4],
    "SAADC.OVERSAMPLE": [1073772020, 1, 4, 1, 4],
    "SAADC.RESOLUTION": [1073772016, 1, 4, 1, 4],
    "SAADC.RESULT.AMOUNT": [1073772084, 1, 4, 1, 4],
    "SAADC.RESULT.MAXCNT": [1073772080, 1, 4, 1, 4],
    "SAADC.RESULT.PTR": [1073772076, 1, 4, 1, 4],
    "SAADC.SAMPLERATE": [1073772024, 1, 4, 1, 4],
    "SAADC.STATUS": [1073771520, 1, 4, 1, 4],
    "SAADC.TASKS_CALIBRATEOFFSET": [1073770508, 1, 4, 1, 4],
    "SAADC.TASKS_SAMPLE": [1073770500, 1, 4, 1, 4],
    "SAADC.TASKS_START": [1073770496, 1, 4, 1, 4],
    "SAADC.TASKS_STOP": [1073770504, 1, 4, 1, 4],
    "SCB.AFSR": [3758157116, 1, 4, 1, 4],
    "SCB.AIRCR": [3758157068, 1, 4, 1, 4],
    "SCB.BFAR": [3758157112, 1, 4, 1, 4],
    "SCB.CCR": [3758157076, 1, 4, 1, 4],
    "SCB.CCSIDR": [3758157184, 1, 4, 1, 4],
    "SCB.CFSR": [3758157096, 1, 4, 1, 4],
    "SCB.CLIDR": [3758157176, 1, 4, 1, 4],
    "SCB.CPACR": [3758157192, 1, 4, 1, 4],
    "SCB.CPUID": [3758157056, 1, 4, 1, 4],
    "SCB.CSSELR": [3758157188, 1, 4, 1, 4],
    "SCB.CTR": [3758157180, 1, 4, 1, 4],
    "SCB.DFSR": [3758157104, 1, 4, 1, 4],
    "SCB.HFSR": [3758157100, 1, 4, 1, 4],
    "SCB.ICSR": [3758157060, 1, 4, 1, 4],
    "SCB.ID_AFR0": [3758157132, 1, 4, 1, 4],
    "SCB.ID_DFR0": [3758157128, 1, 4, 1, 4],
    "SCB.ID_ISAR0": [3758157152, 1, 4, 1, 4],
    "SCB.ID_ISAR1": [3758157156, 1, 4, 1, 4],
    "SCB.ID_ISAR2": [3758157160, 1, 4, 1, 4],
    "SCB.ID_ISAR3": [3758157164, 1, 4, 1, 4],
    "SCB.ID_ISAR4": [3758157168, 1, 4, 1, 4],
    "SCB.ID_MMFR0": [3758157136, 1, 4, 1, 4],
    "SCB.ID_MMFR1": [3758157140, 1, 4, 1, 4],
    "SCB.ID_MMFR2": [3758157144, 1, 4, 1, 4],
    "SCB.ID_MMFR3": [3758157148, 1, 4, 1, 4],
    "SCB.ID_PFR0": [3758157120, 1, 4, 1, 4],
    "SCB.ID_PFR1": [3758157124, 1, 4, 1, 4],
    "SCB.MMFAR": [3758157108, 1, 4, 1, 4],
    "SCB.SCR": [3758157072, 1, 4, 1, 4],
    "SCB.SHCSR": [3758157092, 1, 4, 1, 4],
    "SCB.SHPR1": [3758157080, 1, 4, 1, 4],
    "SCB.SHPR2": [3758157084, 1, 4, 1, 4],
    "SCB.SHPR3": [3758157088, 1, 4, 1, 4],
    "SCB.VTOR": [3758157064, 1, 4, 1, 4],
    "SIG.STIR": [3758157568, 1, 4, 1, 4],
    "SPI0.CONFIG": [1073755476, 1, 4, 1, 4],
    "SPI0.ENABLE": [1073755392, 1, 4, 1, 4],
    "SPI0.EVENTS_READY": [1073754376, 1, 4, 1, 4],
    "SPI0.FREQUENCY": [1073755428, 1, 4, 1, 4],
    "SPI0.INTENCLR": [1073754888, 1, 4, 1, 4],
    "SPI0.INTENSET": [1073754884, 1, 4, 1, 4],
    "SPI0.PSEL.MISO": [1073755408, 1, 4, 1, 4],
    "SPI0.PSEL.MOSI": [1073755404, 1, 4, 1, 4],
    "SPI0.PSEL.SCK": [1073755400, 1, 4, 1, 4],
    "SPI0.RXD": [1073755416, 1, 4, 1, 4],
    "SPI0.TXD": [1073755420, 1, 4, 1, 4],
    "SPI1.CONFIG": [1073759572, 1, 4, 1, 4],
    "SPI1.ENABLE": [1073759488, 1, 4, 1, 4],
    "SPI1.EVENTS_READY": [1073758472, 1, 4, 1, 4],
    "SPI1.FREQUENCY": [1073759524, 1, 4, 1, 4],
    "SPI1.INTENCLR": [1073758984, 1, 4, 1, 4],
    "SPI1.INTENSET": [1073758980, 1, 4, 1, 4],
    "SPI1.PSEL.MISO": [1073759504, 1, 4, 1, 4],
    "SPI1.PSEL.MOSI": [1073759500, 1, 4, 1, 4],
    "SPI1.PSEL.SCK": [1073759496, 1, 4, 1, 4],
    "SPI1.RXD": [1073759512, 1, 4, 1, 4],
    "SPI1.TXD": [1073759516, 1, 4, 1, 4],
    "SPI2.CONFIG": [1073886548, 1, 4, 1, 4],
    "SPI2.ENABLE": [1073886464, 1, 4, 1, 4],
    "SPI2.EVENTS_READY": [1073885448, 1, 4, 1, 4],
    "SPI2.FREQUENCY": [1073886500, 1, 4, 1, 4],
    "SPI2.INTENCLR": [1073885960, 1, 4, 1, 4],
    "SPI2.INTENSET": [1073885956, 1, 4, 1, 4],
    "SPI2.PSEL.MISO": [1073886480, 1, 4, 1, 4],
    "SPI2.PSEL.MOSI": [1073886476, 1, 4, 1, 4],
    "SPI2.PSEL.SCK": [1073886472, 1, 4, 1, 4],
    "SPI2.RXD": [1073886488, 1, 4, 1, 4],
    "SPI2.TXD": [1073886492, 1, 4, 1, 4],
    "SPIM0.CONFIG": [1073755476, 1, 4, 1, 4],
    "SPIM0.ENABLE": [1073755392, 1, 4, 1, 4],
    "SPIM0.EVENTS_END": [1073754392, 1, 4, 1, 4],
    "SPIM0.EVENTS_ENDRX": [1073754384, 1, 4, 1, 4],
    "SPIM0.EVENTS_ENDTX": [1073754400, 1, 4, 1, 4],
    "SPIM0.EVENTS_STARTED": [1073754444, 1, 4, 1, 4],
    "SPIM0.EVENTS_STOPPED": [1073754372, 1, 4, 1, 4],
    "SPIM0.FREQUENCY": [1073755428, 1, 4, 1, 4],
    "SPIM0.INTENCLR": [1073754888, 1, 4, 1, 4],
    "SPIM0.INTENSET": [1073754884, 1, 4, 1, 4],
    "SPIM0.ORC": [1073755584, 1, 4, 1, 4],
    "SPIM0.PSEL.MISO": [1073755408, 1, 4, 1, 4],
    "SPIM0.PSEL.MOSI": [1073755404, 1, 4, 1, 4],
    "SPIM0.PSEL.SCK": [1073755400, 1, 4, 1, 4],
    "SPIM0.RXD.AMOUNT": [1073755452, 1, 4, 1, 4],
    "SPIM0.RXD.LIST": [1073755456, 1, 4, 1, 4],
    "SPIM0.RXD.MAXCNT": [1073755448, 1, 4, 1, 4],
    "SPIM0.RXD.PTR": [1073755444, 1, 4, 1, 4],
    "SPIM0.SHORTS": [1073754624, 1, 4, 1, 4],
    "SPIM0.TASKS_RESUME": [1073754144, 1, 4, 1, 4],
    "SPIM0.TASKS_START": [1073754128, 1, 4, 1, 4],
    "SPIM0.TASKS_STOP": [1073754132, 1, 4, 1, 4],
    "SPIM0.TASKS_SUSPEND": [1073754140, 1, 4, 1, 4],
    "SPIM0.TXD.AMOUNT": [1073755468, 1, 4, 1, 4],
    "SPIM0.TXD.LIST": [1073755472, 1, 4, 1, 4],
    "SPIM0.TXD.MAXCNT": [1073755464, 1, 4, 1, 4],
    "SPIM0.TXD.PTR": [1073755460, 1, 4, 1, 4],
    "SPIM1.CONFIG": [1073759572, 1, 4, 1, 4],
    "SPIM1.ENABLE": [1073759488, 1, 4, 1, 4],
    "SPIM1.EVENTS_END": [1073758488, 1, 4, 1, 4],
    "SPIM1.EVENTS_ENDRX": [1073758480, 1, 4, 1, 4],
    "SPIM1.EVENTS_ENDTX": [1073758496, 1, 4, 1, 4],
    "SPIM1.EVENTS_STARTED": [1073758540, 1, 4, 1, 4],
    "SPIM1.EVENTS_STOPPED": [1073758468, 1, 4, 1, 4],
    "SPIM1.FREQUENCY": [1073759524, 1, 4, 1, 4],
    "SPIM1.INTENCLR": [1073758984, 1, 4, 1, 4],
    "SPIM1.INTENSET": [1073758980, 1, 4, 1, 4],
    "SPIM1.ORC": [1073759680, 1, 4, 1, 4],
    "SPIM1.PSEL.MISO": [1073759504, 1, 4, 1, 4],
    "SPIM1.PSEL.MOSI": [1073759500, 1, 4, 1, 4],
    "SPIM1.PSEL.SCK": [1073759496, 1, 4, 1, 4],
    "SPIM1.RXD.AMOUNT": [1073759548, 1, 4, 1, 4],
    "SPIM1.RXD.LIST": [1073759552, 1, 4, 1, 4],
    "SPIM1.RXD.MAXCNT": [1073759544, 1, 4, 1, 4],
    "SPIM1.RXD.PTR": [1073759540, 1, 4, 1, 4],
    "SPIM1.SHORTS": [1073758720, 1, 4, 1, 4],
    "SPIM1.TASKS_RESUME": [1073758240, 1, 4, 1, 4],
    "SPIM1.TASKS_START": [1073758224, 1, 4, 1, 4],
    "SPIM1.TASKS_STOP": [1073758228, 1, 4, 1, 4],
    "SPIM1.TASKS_SUSPEND": [1073758236, 1, 4, 1, 4],
    "SPIM1.TXD.AMOUNT": [1073759564, 1, 4, 1, 4],
    "SPIM1.TXD.LIST": [1073759568, 1, 4, 1, 4],
    "SPIM1.TXD.MAXCNT": [1073759560, 1, 4, 1, 4],
    "SPIM1.TXD.PTR": [1073759556, 1, 4, 1, 4],
    "SPIM2.CONFIG": [1073886548, 1, 4, 1, 4],
    "SPIM2.ENABLE": [1073886464, 1, 4, 1, 4],
    "SPIM2.EVENTS_END": [1073885464, 1, 4, 1, 4],
    "SPIM2.EVENTS_ENDRX": [1073885456, 1, 4, 1, 4],
    "SPIM2.EVENTS_ENDTX": [1073885472, 1, 4, 1, 4],
    "SPIM2.EVENTS_STARTED": [1073885516, 1, 4, 1, 4],
    "SPIM2.EVENTS_STOPPED": [1073885444, 1, 4, 1, 4],
    "SPIM2.FREQUENCY": [1073886500, 1, 4, 1, 4],
    "SPIM2.INTENCLR": [1073885960, 1, 4, 1, 4],
    "SPIM2.INTENSET": [1073885956, 1, 4, 1, 4],
    "SPIM2.ORC": [1073886656, 1, 4, 1, 4],
    "SPIM2.PSEL.MISO": [1073886480, 1, 4, 1, 4],
    "SPIM2.PSEL.MOSI": [1073886476, 1, 4, 1, 4],
    "SPIM2.PSEL.SCK": [1073886472, 1, 4, 1, 4],
    "SPIM2.RXD.AMOUNT": [1073886524, 1, 4, 1, 4],
    "SPIM2.RXD.LIST": [1073886528, 1, 4, 1, 4],
    "SPIM2.RXD.MAXCNT": [1073886520, 1, 4, 1, 4],
    "SPIM2.RXD.PTR": [1073886516, 1, 4, 1, 4],
    "SPIM2.SHORTS": [1073885696, 1, 4, 1, 4],
    "SPIM2.TASKS_RESUME": [1073885216, 1, 4, 1, 4],
    "SPIM2.TASKS_START": [1073885200, 1, 4, 1, 4],
    "SPIM2.TASKS_STOP": [1073885204, 1, 4, 1, 4],
    "SPIM2.TASKS_SUSPEND": [1073885212, 1, 4, 1, 4],
    "SPIM2.TXD.AMOUNT": [1073886540, 1, 4, 1, 4],
    "SPIM2.TXD.LIST": [1073886544, 1, 4, 1, 4],
    "SPIM2.TXD.MAXCNT": [1073886536, 1, 4, 1, 4],
    "SPIM2.TXD.PTR": [1073886532, 1, 4, 1, 4],
    "SPIS0.CONFIG": [1073755476, 1, 4, 1, 4],
    "SPIS0.DEF": [1073755484, 1, 4, 1, 4],
    "SPIS0.ENABLE": [1073755392, 1, 4, 1, 4],
    "SPIS0.EVENTS_ACQUIRED": [1073754408, 1, 4, 1, 4],
    "SPIS0.EVENTS_END": [1073754372, 1, 4, 1, 4],
    "SPIS0.EVENTS_ENDRX": [1073754384, 1, 4, 1, 4],
    "SPIS0.INTENCLR": [1073754888, 1, 4, 1, 4],
    "SPIS0.INTENSET": [1073754884, 1, 4, 1, 4],
    "SPIS0.ORC": [1073755584, 1, 4, 1, 4],
    "SPIS0.PSEL.CSN": [1073755412, 1, 4, 1, 4],
    "SPIS0.PSEL.MISO": [1073755404, 1, 4, 1, 4],
    "SPIS0.PSEL.MOSI": [1073755408, 1, 4, 1, 4],
    "SPIS0.PSEL.SCK": [1073755400, 1, 4, 1, 4],
    "SPIS0.RXD.AMOUNT": [1073755452, 1, 4, 1, 4],
    "SPIS0.RXD.MAXCNT": [1073755448, 1, 4, 1, 4],
    "SPIS0.RXD.PTR": [1073755444, 1, 4, 1, 4],
    "SPIS0.SEMSTAT": [1073755136, 1, 4, 1, 4],
    "SPIS0.SHORTS": [1073754624, 1, 4, 1, 4],
    "SPIS0.STATUS": [1073755200, 1, 4, 1, 4],
    "SPIS0.TASKS_ACQUIRE": [1073754148, 1, 4, 1, 4],
    "SPIS0.TASKS_RELEASE": [1073754152, 1, 4, 1, 4],
    "SPIS0.TXD.AMOUNT": [1073755468, 1, 4, 1, 4],
    "SPIS0.TXD.MAXCNT": [1073755464, 1, 4, 1, 4],
    "SPIS0.TXD.PTR": [1073755460, 1, 4, 1, 4],
    "SPIS1.CONFIG": [1073759572, 1, 4, 1, 4],
    "SPIS1.DEF": [1073759580, 1, 4, 1, 4],
    "SPIS1.ENABLE": [1073759488, 1, 4, 1, 4],
    "SPIS1.EVENTS_ACQUIRED": [1073758504, 1, 4, 1, 4],
    "SPIS1.EVENTS_END": [1073758468, 1, 4, 1, 4],
    "SPIS1.EVENTS_ENDRX": [1073758480, 1, 4, 1, 4],
    "SPIS1.INTENCLR": [1073758984, 1, 4, 1, 4],
    "SPIS1.INTENSET": [1073758980, 1, 4, 1, 4],
    "SPIS1.ORC": [1073759680, 1, 4, 1, 4],
    "SPIS1.PSEL.CSN": [1073759508, 1, 4, 1, 4],
    "SPIS1.PSEL.MISO": [1073759500, 1, 4, 1, 4],
    "SPIS1.PSEL.MOSI": [1073759504, 1, 4, 1, 4],
    "SPIS1.PSEL.SCK": [1073759496, 1, 4, 1, 4],
    "SPIS1.RXD.AMOUNT": [1073759548, 1, 4, 1, 4],
    "SPIS1.RXD.MAXCNT": [1073759544, 1, 4, 1, 4],
    "SPIS1.RXD.PTR": [1073759540, 1, 4, 1, 4],
    "SPIS1.SEMSTAT": [1073759232, 1, 4, 1, 4],
    "SPIS1.SHORTS": [1073758720, 1, 4, 1, 4],
    "SPIS1.STATUS": [1073759296, 1, 4, 1, 4],
    "SPIS1.TASKS_ACQUIRE": [1073758244, 1, 4, 1, 4],
    "SPIS1.TASKS_RELEASE": [1073758248, 1, 4, 1, 4],
    "SPIS1.TXD.AMOUNT": [1073759564, 1, 4, 1, 4],
    "SPIS1.TXD.MAXCNT": [1073759560, 1, 4, 1, 4],
    "SPIS1.TXD.PTR": [1073759556, 1, 4, 1, 4],
    "SPIS2.CONFIG": [1073886548, 1, 4, 1, 4],
    "SPIS2.DEF": [1073886556, 1, 4, 1, 4],
    "SPIS2.ENABLE": [1073886464, 1, 4, 1, 4],
    "SPIS2.EVENTS_ACQUIRED": [1073885480, 1, 4, 1, 4],
    "SPIS2.EVENTS_END": [1073885444, 1, 4, 1, 4],
    "SPIS2.EVENTS_ENDRX": [1073885456, 1, 4, 1, 4],
    "SPIS2.INTENCLR": [1073885960, 1, 4, 1, 4],
    "SPIS2.INTENSET": [1073885956, 1, 4, 1, 4],
    "SPIS2.ORC": [1073886656, 1, 4, 1, 4],
    "SPIS2.PSEL.CSN": [1073886484, 1, 4, 1, 4],
    "SPIS2.PSEL.MISO": [1073886476, 1, 4, 1, 4],
    "SPIS2.PSEL.MOSI": [1073886480, 1, 4, 1, 4],
    "SPIS2.PSEL.SCK": [1073886472, 1, 4, 1, 4],
    "SPIS2.RXD.AMOUNT": [1073886524, 1, 4, 1, 4],
    "SPIS2.RXD.MAXCNT": [1073886520, 1, 4, 1, 4],
    "SPIS2.RXD.PTR": [1073886516, 1, 4, 1, 4],
    "SPIS2.SEMSTAT": [1073886208, 1, 4, 1, 4],
    "SPIS2.SHORTS": [1073885696, 1, 4, 1, 4],
    "SPIS2.STATUS": [1073886272, 1, 4, 1, 4],
    "SPIS2.TASKS_ACQUIRE": [1073885220, 1, 4, 1, 4],
    "SPIS2.TASKS_RELEASE": [1073885224, 1, 4, 1, 4],
    "SPIS2.TXD.AMOUNT": [1073886540, 1, 4, 1, 4],
    "SPIS2.TXD.MAXCNT": [1073886536, 1, 4, 1, 4],
    "SPIS2.TXD.PTR": [1073886532, 1, 4, 1, 4],
    "SWI0.UNUSED": [1073823744, 1, 4, 1, 4],
    "SWI1.UNUSED": [1073827840, 1, 4, 1, 4],
    "SWI2.UNUSED": [1073831936, 1, 4, 1, 4],
    "SWI3.UNUSED": [1073836032, 1, 4, 1, 4],
    "SWI4.UNUSED": [1073840128, 1, 4, 1, 4],
    "SWI5.UNUSED": [1073844224, 1, 4, 1, 4],
    "SYSTICK.SYST_CALIB": [3758153756, 1, 4, 1, 4],
    "SYSTICK.SYST_CSR": [3758153744, 1, 4, 1, 4],
    "SYSTICK.SYST_CVR": [3758153752, 1, 4, 1, 4],
    "SYSTICK.SYST_RVR": [3758153748, 1, 4, 1, 4],
    "TEMP.A0": [1073792288, 1, 4, 1, 4],
    "TEMP.A1": [1073792292, 1, 4, 1, 4],
    "TEMP.A2": [1073792296, 1, 4, 1, 4],
    "TEMP.A3": [1073792300, 1, 4, 1, 4],
    "TEMP.A4": [1073792304, 1, 4, 1, 4],
    "TEMP.A5": [1073792308, 1, 4, 1, 4],
    "TEMP.B0": [1073792320, 1, 4, 1, 4],
    "TEMP.B1": [1073792324, 1, 4, 1, 4],
    "TEMP.B2": [1073792328, 1, 4, 1, 4],
    "TEMP.B3": [1073792332, 1, 4, 1, 4],
    "TEMP.B4": [1073792336, 1, 4, 1, 4],
    "TEMP.B5": [1073792340, 1, 4, 1, 4],
    "TEMP.EVENTS_DATARDY": [1073791232, 1, 4, 1, 4],
    "TEMP.INTENCLR": [1073791752, 1, 4, 1, 4],
    "TEMP.INTENSET": [1073791748, 1, 4, 1, 4],
    "TEMP.T0": [1073792352, 1, 4, 1, 4],
    "TEMP.T1": [1073792356, 1, 4, 1, 4],
    "TEMP.T2": [1073792360, 1, 4, 1, 4],
    "TEMP.T3": [1073792364, 1, 4, 1, 4],
    "TEMP.T4": [1073792368, 1, 4, 1, 4],
    "TEMP.TASKS_START": [1073790976, 1, 4, 1, 4],
    "TEMP.TASKS_STOP": [1073790980, 1, 4, 1, 4],
    "TEMP.TEMP": [1073792264, 1, 4, 1, 4],
    "TIMER0.BITMODE": [1073775880, 1, 4, 1, 4],
    "TIMER0.CC<n>": [1073775936, 6, 4, 1, 24],
    "TIMER0.EVENTS_COMPARE<n>": [1073774912, 6, 4, 1, 24],
    "TIMER0.INTENCLR": [1073775368, 1, 4, 1, 4],
    "TIMER0.INTENSET": [1073775364, 1, 4, 1, 4],
    "TIMER0.MODE": [1073775876, 1, 4, 1, 4],
    "TIMER0.PRESCALER": [1073775888, 1, 4, 1, 4],
    "TIMER0.SHORTS": [1073775104, 1, 4, 1, 4],
    "TIMER0.TASKS_CAPTURE<n>": [1073774656, 6, 4, 1, 24],
    "TIMER0.TASKS_CLEAR": [1073774604, 1, 4, 1, 4],
    "TIMER0.TASKS_COUNT": [1073774600, 1, 4, 1, 4],
    "TIMER0.TASKS_SHUTDOWN": [1073774608, 1, 4, 1, 4],
    "TIMER0.TASKS_START": [1073774592, 1, 4, 1, 4],
    "TIMER0.TASKS_STOP": [1073774596, 1, 4, 1, 4],
    "TIMER1.BITMODE": [1073779976, 1, 4, 1, 4],
    "TIMER1.CC<n>": [1073780032, 6, 4, 1, 24],
    "TIMER1.EVENTS_COMPARE<n>": [1073779008, 6, 4, 1, 24],
    "TIMER1.INTENCLR": [1073779464, 1, 4, 1, 4],
    "TIMER1.INTENSET": [1073779460, 1, 4, 1, 4],
    "TIMER1.MODE": [1073779972, 1, 4, 1, 4],
    "TIMER1.PRESCALER": [1073779984, 1, 4, 1, 4],
    "TIMER1.SHORTS": [1073779200, 1, 4, 1, 4],
    "TIMER1.TASKS_CAPTURE<n>": [1073778752, 6, 4, 1, 24],
    "TIMER1.TASKS_CLEAR": [1073778700, 1, 4, 1, 4],
    "TIMER1.TASKS_COUNT": [1073778696, 1, 4, 1, 4],
    "TIMER1.TASKS_SHUTDOWN": [1073778704, 1, 4, 1, 4],
    "TIMER1.TASKS_START": [1073778688, 1, 4, 1, 4],
    "TIMER1.TASKS_STOP": [1073778692, 1, 4, 1, 4],
    "TIMER2.BITMODE": [1073784072, 1, 4, 1, 4],
    "TIMER2.CC<n>": [1073784128, 6, 4, 1, 24],
    "TIMER2.EVENTS_COMPARE<n>": [1073783104, 6, 4, 1, 24],
    "TIMER2.INTENCLR": [1073783560, 1, 4, 1, 4],
    "TIMER2.INTENSET": [1073783556, 1, 4, 1, 4],
    "TIMER2.MODE": [1073784068, 1, 4, 1, 4],
    "TIMER2.PRESCALER": [1073784080, 1, 4, 1, 4],
    "TIMER2.SHORTS": [1073783296, 1, 4, 1, 4],
    "TIMER2.TASKS_CAPTURE<n>": [1073782848, 6, 4, 1, 24],
    "TIMER2.TASKS_CLEAR": [1073782796, 1, 4, 1, 4],
    "TIMER2.TASKS_COUNT": [1073782792, 1, 4, 1, 4],
    "TIMER2.TASKS_SHUTDOWN": [1073782800, 1, 4, 1, 4],
    "TIMER2.TASKS_START": [1073782784, 1, 4, 1, 4],
    "TIMER2.TASKS_STOP": [1073782788, 1, 4, 1, 4],
    "TIMER3.BITMODE": [1073849608, 1, 4, 1, 4],
    "TIMER3.CC<n>": [1073849664, 6, 4, 1, 24],
    "TIMER3.EVENTS_COMPARE<n>": [1073848640, 6, 4, 1, 24],
    "TIMER3.INTENCLR": [1073849096, 1, 4, 1, 4],
    "TIMER3.INTENSET": [1073849092, 1, 4, 1, 4],
    "TIMER3.MODE": [1073849604, 1, 4, 1, 4],
    "TIMER3.PRESCALER": [1073849616, 1, 4, 1, 4],
    "TIMER3.SHORTS": [1073848832, 1, 4, 1, 4],
    "TIMER3.TASKS_CAPTURE<n>": [1073848384, 6, 4, 1, 24],
    "TIMER3.TASKS_CLEAR": [1073848332, 1, 4, 1, 4],
    "TIMER3.TASKS_COUNT": [1073848328, 1, 4, 1, 4],
    "TIMER3.TASKS_SHUTDOWN": [1073848336, 1, 4, 1, 4],
    "TIMER3.TASKS_START": [1073848320, 1, 4, 1, 4],
    "TIMER3.TASKS_STOP": [1073848324, 1, 4, 1, 4],
    "TIMER4.BITMODE": [1073853704, 1, 4, 1, 4],
    "TIMER4.CC<n>": [1073853760, 6, 4, 1, 24],
    "TIMER4.EVENTS_COMPARE<n>": [1073852736, 6, 4, 1, 24],
    "TIMER4.INTENCLR": [1073853192, 1, 4, 1, 4],
    "TIMER4.INTENSET": [1073853188, 1, 4, 1, 4],
    "TIMER4.MODE": [1073853700, 1, 4, 1, 4],
    "TIMER4.PRESCALER": [1073853712, 1, 4, 1, 4],
    "TIMER4.SHORTS": [1073852928, 1, 4, 1, 4],
    "TIMER4.TASKS_CAPTURE<n>": [1073852480, 6, 4, 1, 24],
    "TIMER4.TASKS_CLEAR": [1073852428, 1, 4, 1, 4],
    "TIMER4.TASKS_COUNT": [1073852424, 1, 4, 1, 4],
    "TIMER4.TASKS_SHUTDOWN": [1073852432, 1, 4, 1, 4],
    "TIMER4.TASKS_START": [1073852416, 1, 4, 1, 4],
    "TIMER4.TASKS_STOP": [1073852420, 1, 4, 1, 4],
    "TPIU.TPIU_ACPR": [3758358544, 1, 4, 1, 4],
    "TPIU.TPIU_CSPSR": [3758358532, 1, 4, 1, 4],
    "TPIU.TPIU_SPPR": [3758358768, 1, 4, 1, 4],
    "TPIU.TPIU_SSPSR": [3758358528, 1, 4, 1, 4],
    "TPIU.TPIU_TYPE": [3758362368, 1, 4, 1, 4],
    "TWI0.ADDRESS": [1073755528, 1, 4, 1, 4],
    "TWI0.ENABLE": [1073755392, 1, 4, 1, 4],
    "TWI0.ERRORSRC": [1073755332, 1, 4, 1, 4],
    "TWI0.EVENTS_BB": [1073754424, 1, 4, 1, 4],
    "TWI0.EVENTS_ERROR": [1073754404, 1, 4, 1, 4],
    "TWI0.EVENTS_RXDREADY": [1073754376, 1, 4, 1, 4],
    "TWI0.EVENTS_STOPPED": [1073754372, 1, 4, 1, 4],
    "TWI0.EVENTS_SUSPENDED": [1073754440, 1, 4, 1, 4],
    "TWI0.EVENTS_TXDSENT": [1073754396, 1, 4, 1, 4],
    "TWI0.FREQUENCY": [1073755428, 1, 4, 1, 4],
    "TWI0.INTENCLR": [1073754888, 1, 4, 1, 4],
    "TWI0.INTENSET": [1073754884, 1, 4, 1, 4],
    "TWI0.PSELSCL": [1073755400, 1, 4, 1, 4],
    "TWI0.PSELSDA": [1073755404, 1, 4, 1, 4],
    "TWI0.RXD": [1073755416, 1, 4, 1, 4],
    "TWI0.SHORTS": [1073754624, 1, 4, 1, 4],
    "TWI0.TASKS_RESUME": [1073754144, 1, 4, 1, 4],
    "TWI0.TASKS_STARTRX": [1073754112, 1, 4, 1, 4],
    "TWI0.TASKS_STARTTX": [1073754120, 1, 4, 1, 4],
    "TWI0.TASKS_STOP": [1073754132, 1, 4, 1, 4],
    "TWI0.TASKS_SUSPEND": [1073754140, 1, 4, 1, 4],
    "TWI0.TXD": [1073755420, 1, 4, 1, 4],
    "TWI1.ADDRESS": [1073759624, 1, 4, 1, 4],
    "TWI1.ENABLE": [1073759488, 1, 4, 1, 4],
    "TWI1.ERRORSRC": [1073759428, 1, 4, 1, 4],
    "TWI1.EVENTS_BB": [1073758520, 1, 4, 1, 4],
    "TWI1.EVENTS_ERROR": [1073758500, 1, 4, 1, 4],
    "TWI1.EVENTS_RXDREADY": [1073758472, 1, 4, 1, 4],
    "TWI1.EVENTS_STOPPED": [1073758468, 1, 4, 1, 4],
    "TWI1.EVENTS_SUSPENDED": [1073758536, 1, 4, 1, 4],
    "TWI1.EVENTS_TXDSENT": [1073758492, 1, 4, 1, 4],
    "TWI1.FREQUENCY": [1073759524, 1, 4, 1, 4],
    "TWI1.INTENCLR": [1073758984, 1, 4, 1, 4],
    "TWI1.INTENSET": [1073758980, 1, 4, 1, 4],
    "TWI1.PSELSCL": [1073759496, 1, 4, 1, 4],
    "TWI1.PSELSDA": [1073759500, 1, 4, 1, 4],
    "TWI1.RXD": [1073759512, 1, 4, 1, 4],
    "TWI1.SHORTS": [1073758720, 1, 4, 1, 4],
    "TWI1.TASKS_RESUME": [1073758240, 1, 4, 1, 4],
    "TWI1.TASKS_STARTRX": [1073758208, 1, 4, 1, 4],
    "TWI1.TASKS_STARTTX": [1073758216, 1, 4, 1, 4],
    "TWI1.TASKS_STOP": [1073758228, 1, 4, 1, 4],
    "TWI1.TASKS_SUSPEND": [1073758236, 1, 4, 1, 4],
    "TWI1.TXD": [1073759516, 1, 4, 1, 4],
    "TWIM0.ADDRESS": [1073755528, 1, 4, 1, 4],
    "TWIM0.ENABLE": [1073755392, 1, 4, 1, 4],
    "TWIM0.ERRORSRC": [1073755332, 1, 4, 1, 4],
    "TWIM0.EVENTS_ERROR": [1073754404, 1, 4, 1, 4],
    "TWIM0.EVENTS_LASTRX": [1073754460, 1, 4, 1, 4],
    "TWIM0.EVENTS_LASTTX": [1073754464, 1, 4, 1, 4],
    "TWIM0.EVENTS_RXSTARTED": [1073754444, 1, 4, 1, 4],
    "TWIM0.EVENTS_STOPPED": [1073754372, 1, 4, 1, 4],
    "TWIM0.EVENTS_SUSPENDED": [1073754440, 1, 4, 1, 4],
    "TWIM0.EVENTS_TXSTARTED": [1073754448, 1, 4, 1, 4],
    "TWIM0.FREQUENCY": [1073755428, 1, 4, 1, 4],
    "TWIM0.INTEN": [1073754880, 1, 4, 1, 4],
    "TWIM0.INTENCLR": [1073754888, 1, 4, 1, 4],
    "TWIM0.INTENSET": [1073754884, 1, 4, 1, 4],
    "TWIM0.PSEL.SCL": [1073755400, 1, 4, 1, 4],
    "TWIM0.PSEL.SDA": [1073755404, 1, 4, 1, 4],
    "TWIM0.RXD.AMOUNT": [1073755452, 1, 4, 1, 4],
    "TWIM0.RXD.LIST": [1073755456, 1, 4, 1, 4],
    "TWIM0.RXD.MAXCNT": [1073755448, 1, 4, 1, 4],
    "TWIM0.RXD.PTR": [1073755444, 1, 4, 1, 4],
    "TWIM0.SHORTS": [1073754624, 1, 4, 1, 4],
    "TWIM0.TASKS_RESUME": [1073754144, 1, 4, 1, 4],
    "TWIM0.TASKS_STARTRX": [1073754112, 1, 4, 1, 4],
    "TWIM0.TASKS_STARTTX": [1073754120, 1, 4, 1, 4],
    "TWIM0.TASKS_STOP": [1073754132, 1, 4, 1, 4],
    "TWIM0.TASKS_SUSPEND": [1073754140, 1, 4, 1, 4],
    "TWIM0.TXD.AMOUNT": [1073755468, 1, 4, 1, 4],
    "TWIM0.TXD.LIST": [1073755472, 1, 4, 1, 4],
    "TWIM0.TXD.MAXCNT": [1073755464, 1, 4, 1, 4],
    "TWIM0.TXD.PTR": [1073755460, 1, 4, 1, 4],
    "TWIM1.ADDRESS": [1073759624, 1, 4, 1, 4],
    "TWIM1.ENABLE": [1073759488, 1, 4, 1, 4],
    "TWIM1.ERRORSRC": [1073759428, 1, 4, 1, 4],
    "TWIM1.EVENTS_ERROR": [1073758500, 1, 4, 1, 4],
    "TWIM1.EVENTS_LASTRX": [1073758556, 1, 4, 1, 4],
    "TWIM1.EVENTS_LASTTX": [1073758560, 1, 4, 1, 4],
    "TWIM1.EVENTS_RXSTARTED": [1073758540, 1, 4, 1, 4],
    "TWIM1.EVENTS_STOPPED": [1073758468, 1, 4, 1, 4],
    "TWIM1.EVENTS_SUSPENDED": [1073758536, 1, 4, 1, 4],
    "TWIM1.EVENTS_TXSTARTED": [1073758544, 1, 4, 1, 4],
    "TWIM1.FREQUENCY": [1073759524, 1, 4, 1, 4],
    "TWIM1.INTEN": [1073758976, 1, 4, 1, 4],
    "TWIM1.INTENCLR": [1073758984, 1, 4, 1, 4],
    "TWIM1.INTENSET": [1073758980, 1, 4, 1, 4],
    "TWIM1.PSEL.SCL": [1073759496, 1, 4, 1, 4],
    "TWIM1.PSEL.SDA": [1073759500, 1, 4, 1, 4],
    "TWIM1.RXD.AMOUNT": [1073759548, 1, 4, 1, 4],
    "TWIM1.RXD.LIST": [1073759552, 1, 4, 1, 4],
    "TWIM1.RXD.MAXCNT": [1073759544, 1, 4, 1, 4],
    "TWIM1.RXD.PTR": [1073759540, 1, 4, 1, 4],
    "TWIM1.SHORTS": [1073758720, 1, 4, 1, 4],
    "TWIM1.TASKS_RESUME": [1073758240, 1, 4, 1, 4],
    "TWIM1.TASKS_STARTRX": [1073758208, 1, 4, 1, 4],
    "TWIM1.TASKS_STARTTX": [1073758216, 1, 4, 1, 4],
    "TWIM1.TASKS_STOP": [1073758228, 1, 4, 1, 4],
    "TWIM1.TASKS_SUSPEND": [1073758236, 1, 4, 1, 4],
    "TWIM1.TXD.AMOUNT": [1073759564, 1, 4, 1, 4],
    "TWIM1.TXD.LIST": [1073759568, 1, 4, 1, 4],
    "TWIM1.TXD.MAXCNT": [1073759560, 1, 4, 1, 4],
    "TWIM1.TXD.PTR": [1073759556, 1, 4, 1, 4],
    "TWIS0.ADDRESS<n>": [1073755528, 2, 4, 1, 8],
    "TWIS0.CONFIG": [1073755540, 1, 4, 1, 4],
    "TWIS0.ENABLE": [1073755392, 1, 4, 1, 4],
    "TWIS0.ERRORSRC": [1073755344, 1, 4, 1, 4],
    "TWIS0.EVENTS_ERROR": [1073754404, 1, 4, 1, 4],
    "TWIS0.EVENTS_READ": [1073754472, 1, 4, 1, 4],
    "TWIS0.EVENTS_RXSTARTED": [1073754444, 1, 4, 1, 4],
    "TWIS0.EVENTS_STOPPED": [1073754372, 1, 4, 1, 4],
    "TWIS0.EVENTS_TXSTARTED": [1073754448, 1, 4, 1, 4],
    "TWIS0.EVENTS_WRITE": [1073754468, 1, 4, 1, 4],
    "TWIS0.INTEN": [1073754880, 1, 4, 1, 4],
    "TWIS0.INTENCLR": [1073754888, 1, 4, 1, 4],
    "TWIS0.INTENSET": [1073754884, 1, 4, 1, 4],
    "TWIS0.MATCH": [1073755348, 1, 4, 1, 4],
    "TWIS0.ORC": [1073755584, 1, 4, 1, 4],
    "TWIS0.PSEL.SCL": [1073755400, 1, 4, 1, 4],
    "TWIS0.PSEL.SDA": [1073755404, 1, 4, 1, 4],
    "TWIS0.RXD.AMOUNT": [1073755452, 1, 4, 1, 4],
    "TWIS0.RXD.MAXCNT": [1073755448, 1, 4, 1, 4],
    "TWIS0.RXD.PTR": [1073755444, 1, 4, 1, 4],
    "TWIS0.SHORTS": [1073754624, 1, 4, 1, 4],
    "TWIS0.TASKS_PREPARERX": [1073754160, 1, 4, 1, 4],
    "TWIS0.TASKS_PREPARETX": [1073754164, 1, 4, 1, 4],
    "TWIS0.TASKS_RESUME": [1073754144, 1, 4, 1, 4],
    "TWIS0.TASKS_STOP": [1073754132, 1, 4, 1, 4],
    "TWIS0.TASKS_SUSPEND": [1073754140, 1, 4, 1, 4],
    "TWIS0.TXD.AMOUNT": [1073755468, 1, 4, 1, 4],
    "TWIS0.TXD.MAXCNT": [1073755464, 1, 4, 1, 4],
    "TWIS0.TXD.PTR": [1073755460, 1, 4, 1, 4],
    "TWIS1.ADDRESS<n>": [1073759624, 2, 4, 1, 8],
    "TWIS1.CONFIG": [1073759636, 1, 4, 1, 4],
    "TWIS1.ENABLE": [1073759488, 1, 4, 1, 4],
    "TWIS1.ERRORSRC": [1073759440, 1, 4, 1, 4],
    "TWIS1.EVENTS_ERROR": [1073758500, 1, 4, 1, 4],
    "TWIS1.EVENTS_READ": [1073758568, 1, 4, 1, 4],
    "TWIS1.EVENTS_RXSTARTED": [1073758540, 1, 4, 1, 4],
    "TWIS1.EVENTS_STOPPED": [1073758468, 1, 4, 1, 4],
    "TWIS1.EVENTS_TXSTARTED": [1073758544, 1, 4, 1, 4],
    "TWIS1.EVENTS_WRITE": [1073758564, 1, 4, 1, 4],
    "TWIS1.INTEN": [1073758976, 1, 4, 1, 4],
    "TWIS1.INTENCLR": [1073758984, 1, 4, 1, 4],
    "TWIS1.INTENSET": [1073758980, 1, 4, 1, 4],
    "TWIS1.MATCH": [1073759444, 1, 4, 1, 4],
    "TWIS1.ORC": [1073759680, 1, 4, 1, 4],
    "TWIS1.PSEL.SCL": [1073759496, 1, 4, 1, 4],
    "TWIS1.PSEL.SDA": [1073759500, 1, 4, 1, 4],
    "TWIS1.RXD.AMOUNT": [1073759548, 1, 4, 1, 4],
    "TWIS1.RXD.MAXCNT": [1073759544, 1, 4, 1, 4],
    "TWIS1.RXD.PTR": [1073759540, 1, 4, 1, 4],
    "TWIS1.SHORTS": [1073758720, 1, 4, 1, 4],
    "TWIS1.TASKS_PREPARERX": [1073758256, 1, 4, 1, 4],
    "TWIS1.TASKS_PREPARETX": [1073758260, 1, 4, 1, 4],
    "TWIS1.TASKS_RESUME": [1073758240, 1, 4, 1, 4],
    "TWIS1.TASKS_STOP": [1073758228, 1, 4, 1, 4],
    "TWIS1.TASKS_SUSPEND": [1073758236, 1, 4, 1, 4],
    "TWIS1.TXD.AMOUNT": [1073759564, 1, 4, 1, 4],
    "TWIS1.TXD.MAXCNT": [1073759560, 1, 4, 1, 4],
    "TWIS1.TXD.PTR": [1073759556, 1, 4, 1, 4],
    "UART0.BAUDRATE": [1073751332, 1, 4, 1, 4],
    "UART0.CONFIG": [1073751404, 1, 4, 1, 4],
    "UART0.ENABLE": [1073751296, 1, 4, 1, 4],
    "UART0.ERRORSRC": [1073751168, 1, 4, 1, 4],
    "UART0.EVENTS_CTS": [1073750272, 1, 4, 1, 4],
    "UART0.EVENTS_ERROR": [1073750308, 1, 4, 1, 4],
    "UART0.EVENTS_NCTS": [1073750276, 1, 4, 1, 4],
    "UART0.EVENTS_RXDRDY": [1073750280, 1, 4, 1, 4],
    "UART0.EVENTS_RXTO": [1073750340, 1, 4, 1, 4],
    "UART0.EVENTS_TXDRDY": [1073750300, 1, 4, 1, 4],
    "UART0.INTENCLR": [1073750792, 1, 4, 1, 4],
    "UART0.INTENSET": [1073750788, 1, 4, 1, 4],
    "UART0.PSELCTS": [1073751312, 1, 4, 1, 4],
    "UART0.PSELRTS": [1073751304, 1, 4, 1, 4],
    "UART0.PSELRXD": [1073751316, 1, 4, 1, 4],
    "UART0.PSELTXD": [1073751308, 1, 4, 1, 4],
    "UART0.RXD": [1073751320, 1, 4, 1, 4],
    "UART0.SHORTS": [1073750528, 1, 4, 1, 4],
    "UART0.TASKS_STARTRX": [1073750016, 1, 4, 1, 4],
    "UART0.TASKS_STARTTX": [1073750024, 1, 4, 1, 4],
    "UART0.TASKS_STOPRX": [1073750020, 1, 4, 1, 4],
    "UART0.TASKS_STOPTX": [1073750028, 1, 4, 1, 4],
    "UART0.TASKS_SUSPEND": [1073750044, 1, 4, 1, 4],
    "UART0.TXD": [1073751324, 1, 4, 1, 4],
    "UARTE0.BAUDRATE": [1073751332, 1, 4, 1, 4],
    "UARTE0.CONFIG": [1073751404, 1, 4, 1, 4],
    "UARTE0.ENABLE": [1073751296, 1, 4, 1, 4],
    "UARTE0.ERRORSRC": [1073751168, 1, 4, 1, 4],
    "UARTE0.EVENTS_CTS": [1073750272, 1, 4, 1, 4],
    "UARTE0.EVENTS_ENDRX": [1073750288, 1, 4, 1, 4],
    "UARTE0.EVENTS_ENDTX": [1073750304, 1, 4, 1, 4],
    "UARTE0.EVENTS_ERROR": [1073750308, 1, 4, 1, 4],
    "UARTE0.EVENTS_NCTS": [1073750276, 1, 4, 1, 4],
    "UARTE0.EVENTS_RXDRDY": [1073750280, 1, 4, 1, 4],
    "UARTE0.EVENTS_RXSTARTED": [1073750348, 1, 4, 1, 4],
    "UARTE0.EVENTS_RXTO": [1073750340, 1, 4, 1, 4],
    "UARTE0.EVENTS_TXDRDY": [1073750300, 1, 4, 1, 4],
    "UARTE0.EVENTS_TXSTARTED": [1073750352, 1, 4, 1, 4],
    "UARTE0.EVENTS_TXSTOPPED": [1073750360, 1, 4, 1, 4],
    "UARTE0.INTEN": [1073750784, 1, 4, 1, 4],
    "UARTE0.INTENCLR": [1073750792, 1, 4, 1, 4],
    "UARTE0.INTENSET": [1073750788, 1, 4, 1, 4],
    "UARTE0.PSEL.CTS": [1073751312, 1, 4, 1, 4],
    "UARTE0.PSEL.RTS": [1073751304, 1, 4, 1, 4],
    "UARTE0.PSEL.RXD": [1073751316, 1, 4, 1, 4],
    "UARTE0.PSEL.TXD": [1073751308, 1, 4, 1, 4],
    "UARTE0.RXD.AMOUNT": [1073751356, 1, 4, 1, 4],
    "UARTE0.RXD.MAXCNT": [1073751352, 1, 4, 1, 4],
    "UARTE0.RXD.PTR": [1073751348, 1, 4, 1, 4],
    "UARTE0.SHORTS": [1073750528, 1, 4, 1, 4],
    "UARTE0.TASKS_FLUSHRX": [1073750060, 1, 4, 1, 4],
    "UARTE0.TASKS_STARTRX": [1073750016, 1, 4, 1, 4],
    "UARTE0.TASKS_STARTTX": [1073750024, 1, 4, 1, 4],
    "UARTE0.TASKS_STOPRX": [1073750020, 1, 4, 1, 4],
    "UARTE0.TASKS_STOPTX": [1073750028, 1, 4, 1, 4],
    "UARTE0.TXD.AMOUNT": [1073751372, 1, 4, 1, 4],
    "UARTE0.TXD.MAXCNT": [1073751368, 1, 4, 1, 4],
    "UARTE0.TXD.PTR": [1073751364, 1, 4, 1, 4],
    "UICR.APPROTECT": [268440072, 1, 4, 1, 4],
    "UICR.CUSTOMER<n>": [268439680, 32, 4, 1, 128],
    "UICR.NFCPINS": [268440076, 1, 4, 1, 4],
    "UICR.NRFFW<n>": [268439572, 15, 4, 1, 60],
    "UICR.NRFHW<n>": [268439632, 12, 4, 1, 48],
    "UICR.PSELRESET<n>": [268440064, 2, 4, 1, 8],
    "UICR.UNUSED0": [268439552, 1, 4, 1, 4],
    "UICR.UNUSED1": [268439556, 1, 4, 1, 4],
    "UICR.UNUSED2": [268439560, 1, 4, 1, 4],
    "UICR.UNUSED3": [268439568, 1, 4, 1, 4],
    "WDT.CONFIG": [1073808652, 1, 4, 1, 4],
    "WDT.CRV": [1073808644, 1, 4, 1, 4],
    "WDT.EVENTS_TIMEOUT": [1073807616, 1, 4, 1, 4],
    "WDT.INTENCLR": [1073808136, 1, 4, 1, 4],
    "WDT.INTENSET": [1073808132, 1, 4, 1, 4],
    "WDT.REQSTATUS": [1073808388, 1, 4, 1, 4],
    "WDT.RR<n>": [1073808896, 8, 4, 1, 32],
    "WDT.RREN": [1073808648, 1, 4, 1, 4],
    "WDT.RUNSTATUS": [1073808384, 1, 4, 1, 4],
    "WDT.TASKS_START": [1073807360, 1, 4, 1, 4]
  },
  "interrupts": {
    "BUS_FAULT": -11,
    "CCM_AAR": 15,
    "COMP_LPCOMP": 19,
    "DEBUG_MONITOR": -4,
    "ECB": 14,
    "FPU": 38,
    "GPIOTE": 6,
    "HARD_FAULT": -13,
    "I2S": 37,
    "INITIAL_SP": -16,
    "MEMORY_MANAGEMENT_FAULT": -12,
    "MWU": 32,
    "NFCT": 5,
    "NON_MASKABLE_INT": -14,
    "PDM": 29,
    "PENDSV": -2,
    "POWER_CLOCK": 0,
    "PWM0": 28,
    "PWM1": 33,
    "PWM2": 34,
    "QDEC": 18,
    "RADIO": 1,
    "RESET": -15,
    "RNG": 13,
    "RTC0": 11,
    "RTC1": 17,
    "RTC2": 36,
    "SAADC": 7,
    "SPIM0_SPIS0_TWIM0_TWIS0_SPI0_TWI0": 3,
    "SPIM1_SPIS1_TWIM1_TWIS1_SPI1_TWI1": 4,
    "SPIM2_SPIS2_SPI2": 35,
    "SVCALL": -5,
    "SWI0_EGU0": 20,
    "SWI1_EGU1": 21,
    "SWI2_EGU2": 22,
    "SWI3_EGU3": 23,
    "SWI4_EGU4": 24,
    "SWI5_EGU5": 25,
    "SYSTICK": -1,
    "TEMP": 12,
    "TIMER0": 8,
    "TIMER1": 9,
    "TIMER2": 10,
    "TIMER3": 26,
    "TIMER4": 27,
    "UARTE0_UART0": 2,
    "USAGE_FAULT": -10,
    "WDT": 16
  },
  "peripherals": {
    "AAR": [1073803264, 4096],
    "BPROT": [1073741824, 4096],
    "CCM": [1073803264, 4096],
    "CLOCK": [1073741824, 4096],
    "CMO": [3758157648, 44],
    "COMP": [1073819648, 4096],
    "DCB": [3758157296, 16],
    "DPB": [3758104576, 4096],
    "DWT": [3758100480, 4096],
    "ECB": [1073799168, 4096],
    "EGU0": [1073823744, 4096],
    "EGU1": [1073827840, 4096],
    "EGU2": [1073831936, 4096],
    "EGU3": [1073836032, 4096],
    "EGU4": [1073840128, 4096],
    "EGU5": [1073844224, 4096],
    "FICR": [268435456, 4096],
    "FP": [3758157620, 24],
    "FPU": [1073897472, 4096],
    "GPIOTE": [1073766400, 4096],
    "I2S": [1073893376, 4096],
    "ICB": [3758153732, 12],
    "ITM": [3758096384, 4096],
    "LPCOMP": [1073819648, 4096],
    "MPU": [3758157200, 44],
    "MWU": [1073872896, 4096],
    "NFCT": [1073762304, 4096],
    "NVIC": [3758153984, 1264],
    "NVMC": [1073864704, 4096],
    "P0": [1342177280, 4096],
    "PDM": [1073860608, 4096],
    "POWER": [1073741824, 4096],
    "PPI": [1073868800, 4096],
    "PWM0": [1073856512, 4096],
    "PWM1": [1073876992, 4096],
    "PWM2": [1073881088, 4096],
    "QDEC": [1073815552, 4096],
    "RADIO": [1073745920, 4096],
    "RNG": [1073795072, 4096],
    "RTC0": [1073786880, 4096],
    "RTC1": [1073811456, 4096],
    "RTC2": [1073889280, 4096],
    "SAADC": [1073770496, 4096],
    "SCB": [3758157056, 144],
    "SIG": [3758157568, 4],
    "SPI0": [1073754112, 4096],
    "SPI1": [1073758208, 4096],
    "SPI2": [1073885184, 4096],
    "SPIM0": [1073754112, 4096],
    "SPIM1": [1073758208, 4096],
    "SPIM2": [1073885184, 4096],
    "SPIS0": [1073754112, 4096],
    "SPIS1": [1073758208, 4096],
    "SPIS2": [1073885184, 4096],
    "SWI0": [1073823744, 4096],
    "SWI1": [1073827840, 4096],
    "SWI2": [1073831936, 4096],
    "SWI3": [1073836032, 4096],
    "SWI4": [1073840128, 4096],
    "SWI5": [1073844224, 4096],
    "SYSTICK": [3758153744, 16],
    "TEMP": [1073790976, 4096],
    "TIMER0": [1073774592, 4096],
    "TIMER1": [1073778688, 4096],
    "TIMER2": [1073782784, 4096],
    "TIMER3": [1073848320, 4096],
    "TIMER4": [1073852416, 4096],
    "TPIU": [3758358528, 4096],
    "TWI0": [1073754112, 4096],
    "TWI1": [1073758208, 4096],
    "TWIM0": [1073754112, 4096],
    "TWIM1": [1073758208, 4096],
    "TWIS0": [1073754112, 4096],
    "TWIS1": [1073758208, 4096],
    "UART0": [1073750016, 4096],
    "UARTE0": [1073750016, 4096],
    "UICR": [268439552, 4096],
    "WDT": [1073807360, 4096]
  },
  "registers": {
    "AAR.ADDRPTR": {
      "long_name": "AAR.ADDRPTR (at 0x4000f510, read-write)",
      "purpose": "Pointer to the resolvable address\n\nADDRPTR, bits [0:31] - Pointer to the resolvable address (6-bytes)"
    },
    "AAR.ENABLE": {
      "long_name": "AAR.ENABLE (at 0x4000f500, read-write)",
      "purpose": "Enable AAR\n\nENABLE, bits [0:1] - Enable or disable AAR; 0 for Disabled (Disable), 3 for\n                     Enabled (Enable)"
    },
    "AAR.EVENTS_END": {
      "long_name": "AAR.EVENTS_END (at 0x4000f100, read-write)",
      "purpose": "Address resolution procedure complete"
    },
    "AAR.EVENTS_NOTRESOLVED": {
      "long_name": "AAR.EVENTS_NOTRESOLVED (at 0x4000f108, read-write)",
      "purpose": "Address not resolved"
    },
    "AAR.EVENTS_RESOLVED": {
      "long_name": "AAR.EVENTS_RESOLVED (at 0x4000f104, read-write)",
      "purpose": "Address resolved"
    },
    "AAR.INTENCLR": {
      "long_name": "AAR.INTENCLR (at 0x4000f308, read-write)",
      "purpose": "Disable interrupt\n\nEND, bit [0]         - Write '1' to Disable interrupt for END event\nRESOLVED, bit [1]    - Write '1' to Disable interrupt for RESOLVED event\nNOTRESOLVED, bit [2] - Write '1' to Disable interrupt for NOTRESOLVED event"
    },
    "AAR.INTENSET": {
      "long_name": "AAR.INTENSET (at 0x4000f304, read-write)",
      "purpose": "Enable interrupt\n\nEND, bit [0]         - Write '1' to Enable interrupt for END event\nRESOLVED, bit [1]    - Write '1' to Enable interrupt for RESOLVED event\nNOTRESOLVED, bit [2] - Write '1' to Enable interrupt for NOTRESOLVED event"
    },
    "AAR.IRKPTR": {
      "long_name": "AAR.IRKPTR (at 0x4000f508, read-write)",
      "purpose": "Pointer to IRK data structure\n\nIRKPTR, bits [0:31] - Pointer to the IRK data structure"
    },
    "AAR.NIRK": {
      "long_name": "AAR.NIRK (at 0x4000f504, read-write)",
      "purpose": "Number of IRKs\n\nNIRK, bits [0:4] - Number of Identity root keys available in the IRK data\n                   structure"
    },
    "AAR.SCRATCHPTR": {
      "long_name": "AAR.SCRATCHPTR (at 0x4000f514, read-write)",
      "purpose": "Pointer to data area used for temporary storage\n\nSCRATCHPTR, bits [0:31] - Pointer to a scratch data area used for temporary\n                          storage during resolution.A space of minimum 3 bytes\n                          must be reserved."
    },
    "AAR.STATUS": {
      "long_name": "AAR.STATUS (at 0x4000f400, read-only)",
      "purpose": "Resolution status\n\nSTATUS, bits [0:3] - The IRK that was used last time an address was resolved"
    },
    "AAR.TASKS_START": {
      "long_name": "AAR.TASKS_START (at 0x4000f000, write-only)",
      "purpose": "Start resolving addresses based on IRKs specified in the IRK data structure"
    },
    "AAR.TASKS_STOP": {
      "long_name": "AAR.TASKS_STOP (at 0x4000f008, write-only)",
      "purpose": "Stop resolving addresses"
    },
    "APSR": {
      "long_name": "Application program status register (APSR)",
      "purpose": "N, bit [31] - Negative flag\nZ, bit [30] - Zero flag\nC, bit [29] - Carry flag\nV, bit [28] - Overflow flag\nQ, bit [27] - DSP overflow and saturation flag"
    },
    "BASEPRI": {
      "long_name": "Base priority mask register (BASEPRI)",
      "purpose": "BasePri, bits [0:7] - Priority mask bits"
    },
    "BPROT.CONFIG0": {
      "long_name": "BPROT.CONFIG0 (at 0x40000600, read-write)",
      "purpose": "Block protect configuration register 0\n\nREGION0, bit [0]   - Enable protection for region 0. Write '0' has no effect.\nREGION1, bit [1]   - Enable protection for region 1. Write '0' has no effect.\nREGION2, bit [2]   - Enable protection for region 2. Write '0' has no effect.\nREGION3, bit [3]   - Enable protection for region 3. Write '0' has no effect.\nREGION4, bit [4]   - Enable protection for region 4. Write '0' has no effect.\nREGION5, bit [5]   - Enable protection for region 5. Write '0' has no effect.\nREGION6, bit [6]   - Enable protection for region 6. Write '0' has no effect.\nREGION7, bit [7]   - Enable protection for region 7. Write '0' has no effect.\nREGION8, bit [8]   - Enable protection for region 8. Write '0' has no effect.\nREGION9, bit [9]   - Enable protection for region 9. Write '0' has no effect.\nREGION10, bit [10] - Enable protection for region 10. Write '0' has no effect.\nREGION11, bit [11] - Enable protection for region 11. Write '0' has no effect.\nREGION12, bit [12] - Enable protection for region 12. Write '0' has no effect.\nREGION13, bit [13] - Enable protection for region 13. Write '0' has no effect.\nREGION14, bit [14] - Enable protection for region 14. Write '0' has no effect.\nREGION15, bit [15] - Enable protection for region 15. Write '0' has no effect.\nREGION16, bit [16] - Enable protection for region 16. Write '0' has no effect.\nREGION17, bit [17] - Enable protection for region 17. Write '0' has no effect.\nREGION18, bit [18] - Enable protection for region 18. Write '0' has no effect.\nREGION19, bit [19] - Enable protection for region 19. Write '0' has no effect.\nREGION20, bit [20] - Enable protection for region 20. Write '0' has no effect.\nREGION21, bit [21] - Enable protection for region 21. Write '0' has no effect.\nREGION22, bit [22] - Enable protection for region 22. Write '0' has no effect.\nREGION23, bit [23] - Enable protection for region 23. Write '0' has no effect.\nREGION24, bit [24] - Enable protection for region 24. Write '0' has no effect.\nREGION25, bit [25] - Enable protection for region 25. Write '0' has no effect.\nREGION26, bit [26] - Enable protection for region 26. Write '0' has no effect.\nREGION27, bit [27] - Enable protection for region 27. Write '0' has no effect.\nREGION28, bit [28] - Enable protection for region 28. Write '0' has no effect.\nREGION29, bit [29] - Enable protection for region 29. Write '0' has no effect.\nREGION30, bit [30] - Enable protection for region 30. Write '0' has no effect.\nREGION31, bit [31] - Enable protection for region 31. Write '0' has no effect."
    },
    "BPROT.CONFIG1": {
      "long_name": "BPROT.CONFIG1 (at 0x40000604, read-write)",
      "purpose": "Block protect configuration register 1\n\nREGION32, bit [0]  - Enable protection for region 32. Write '0' has no effect.\nREGION33, bit [1]  - Enable protection for region 33. Write '0' has no effect.\nREGION34, bit [2]  - Enable protection for region 34. Write '0' has no effect.\nREGION35, bit [3]  - Enable protection for region 35. Write '0' has no effect.\nREGION36, bit [4]  - Enable protection for region 36. Write '0' has no effect.\nREGION37, bit [5]  - Enable protection for region 37. Write '0' has no effect.\nREGION38, bit [6]  - Enable protection for region 38. Write '0' has no effect.\nREGION39, bit [7]  - Enable protection for region 39. Write '0' has no effect.\nREGION40, bit [8]  - Enable protection for region 40. Write '0' has no effect.\nREGION41, bit [9]  - Enable protection for region 41. Write '0' has no effect.\nREGION42, bit [10] - Enable protection for region 42. Write '0' has no effect.\nREGION43, bit [11] - Enable protection for region 43. Write '0' has no effect.\nREGION44, bit [12] - Enable protection for region 44. Write '0' has no effect.\nREGION45, bit [13] - Enable protection for region 45. Write '0' has no effect.\nREGION46, bit [14] - Enable protection for region 46. Write '0' has no effect.\nREGION47, bit [15] - Enable protection for region 47. Write '0' has no effect.\nREGION48, bit [16] - Enable protection for region 48. Write '0' has no effect.\nREGION49, bit [17] - Enable protection for region 49. Write '0' has no effect.\nREGION50, bit [18] - Enable protection for region 50. Write '0' has no effect.\nREGION51, bit [19] - Enable protection for region 51. Write '0' has no effect.\nREGION52, bit [20] - Enable protection for region 52. Write '0' has no effect.\nREGION53, bit [21] - Enable protection for region 53. Write '0' has no effect.\nREGION54, bit [22] - Enable protection for region 54. Write '0' has no effect.\nREGION55, bit [23] - Enable protection for region 55. Write '0' has no effect.\nREGION56, bit [24] - Enable protection for region 56. Write '0' has no effect.\nREGION57, bit [25] - Enable protection for region 57. Write '0' has no effect.\nREGION58, bit [26] - Enable protection for region 58. Write '0' has no effect.\nREGION59, bit [27] - Enable protection for region 59. Write '0' has no effect.\nREGION60, bit [28] - Enable protection for region 60. Write '0' has no effect.\nREGION61, bit [29] - Enable protection for region 61. Write '0' has no effect.\nREGION62, bit [30] - Enable protection for region 62. Write '0' has no effect.\nREGION63, bit [31] - Enable protection for region 63. Write '0' has no effect."
    },
    "BPROT.CONFIG2": {
      "long_name": "BPROT.CONFIG2 (at 0x40000610, read-write)",
      "purpose": "Block protect configuration register 2\n\nREGION64, bit [0]  - Enable protection for region 64. Write '0' has no effect.\nREGION65, bit [1]  - Enable protection for region 65. Write '0' has no effect.\nREGION66, bit [2]  - Enable protection for region 66. Write '0' has no effect.\nREGION67, bit [3]  - Enable protection for region 67. Write '0' has no effect.\nREGION68, bit [4]  - Enable protection for region 68. Write '0' has no effect.\nREGION69, bit [5]  - Enable protection for region 69. Write '0' has no effect.\nREGION70, bit [6]  - Enable protection for region 70. Write '0' has no effect.\nREGION71, bit [7]  - Enable protection for region 71. Write '0' has no effect.\nREGION72, bit [8]  - Enable protection for region 72. Write '0' has no effect.\nREGION73, bit [9]  - Enable protection for region 73. Write '0' has no effect.\nREGION74, bit [10] - Enable protection for region 74. Write '0' has no effect.\nREGION75, bit [11] - Enable protection for region 75. Write '0' has no effect.\nREGION76, bit [12] - Enable protection for region 76. Write '0' has no effect.\nREGION77, bit [13] - Enable protection for region 77. Write '0' has no effect.\nREGION78, bit [14] - Enable protection for region 78. Write '0' has no effect.\nREGION79, bit [15] - Enable protection for region 79. Write '0' has no effect.\nREGION80, bit [16] - Enable protection for region 80. Write '0' has no effect.\nREGION81, bit [17] - Enable protection for region 81. Write '0' has no effect.\nREGION82, bit [18] - Enable protection for region 82. Write '0' has no effect.\nREGION83, bit [19] - Enable protection for region 83. Write '0' has no effect.\nREGION84, bit [20] - Enable protection for region 84. Write '0' has no effect.\nREGION85, bit [21] - Enable protection for region 85. Write '0' has no effect.\nREGION86, bit [22] - Enable protection for region 86. Write '0' has no effect.\nREGION87, bit [23] - Enable protection for region 87. Write '0' has no effect.\nREGION88, bit [24] - Enable protection for region 88. Write '0' has no effect.\nREGION89, bit [25] - Enable protection for region 89. Write '0' has no effect.\nREGION90, bit [26] - Enable protection for region 90. Write '0' has no effect.\nREGION91, bit [27] - Enable protection for region 91. Write '0' has no effect.\nREGION92, bit [28] - Enable protection for region 92. Write '0' has no effect.\nREGION93, bit [29] - Enable protection for region 93. Write '0' has no effect.\nREGION94, bit [30] - Enable protection for region 94. Write '0' has no effect.\nREGION95, bit [31] - Enable protection for region 95. Write '0' has no effect."
    },
    "BPROT.CONFIG3": {
      "long_name": "BPROT.CONFIG3 (at 0x40000614, read-write)",
      "purpose": "Block protect configuration register 3\n\nREGION96, bit [0]   - Enable protection for region 96. Write '0' has no effect.\nREGION97, bit [1]   - Enable protection for region 97. Write '0' has no effect.\nREGION98, bit [2]   - Enable protection for region 98. Write '0' has no effect.\nREGION99, bit [3]   - Enable protection for region 99. Write '0' has no effect.\nREGION100, bit [4]  - Enable protection for region 100. Write '0' has no effect.\nREGION101, bit [5]  - Enable protection for region 101. Write '0' has no effect.\nREGION102, bit [6]  - Enable protection for region 102. Write '0' has no effect.\nREGION103, bit [7]  - Enable protection for region 103. Write '0' has no effect.\nREGION104, bit [8]  - Enable protection for region 104. Write '0' has no effect.\nREGION105, bit [9]  - Enable protection for region 105. Write '0' has no effect.\nREGION106, bit [10] - Enable protection for region 106. Write '0' has no effect.\nREGION107, bit [11] - Enable protection for region 107. Write '0' has no effect.\nREGION108, bit [12] - Enable protection for region 108. Write '0' has no effect.\nREGION109, bit [13] - Enable protection for region 109. Write '0' has no effect.\nREGION110, bit [14] - Enable protection for region 110. Write '0' has no effect.\nREGION111, bit [15] - Enable protection for region 111. Write '0' has no effect.\nREGION112, bit [16] - Enable protection for region 112. Write '0' has no effect.\nREGION113, bit [17] - Enable protection for region 113. Write '0' has no effect.\nREGION114, bit [18] - Enable protection for region 114. Write '0' has no effect.\nREGION115, bit [19] - Enable protection for region 115. Write '0' has no effect.\nREGION116, bit [20] - Enable protection for region 116. Write '0' has no effect.\nREGION117, bit [21] - Enable protection for region 117. Write '0' has no effect.\nREGION118, bit [22] - Enable protection for region 118. Write '0' has no effect.\nREGION119, bit [23] - Enable protection for region 119. Write '0' has no effect.\nREGION120, bit [24] - Enable protection for region 120. Write '0' has no effect.\nREGION121, bit [25] - Enable protection for region 121. Write '0' has no effect.\nREGION122, bit [26] - Enable protection for region 122. Write '0' has no effect.\nREGION123, bit [27] - Enable protection for region 123. Write '0' has no effect.\nREGION124, bit [28] - Enable protection for region 124. Write '0' has no effect.\nREGION125, bit [29] - Enable protection for region 125. Write '0' has no effect.\nREGION126, bit [30] - Enable protection for region 126. Write '0' has no effect.\nREGION127, bit [31] - Enable protection for region 127. Write '0' has no effect."
    },
    "BPROT.DISABLEINDEBUG": {
      "long_name": "BPROT.DISABLEINDEBUG (at 0x40000608, read-write)",
      "purpose": "Disable protection mechanism in debug interface mode\n\nDISABLEINDEBUG, bit [0] - Disable the protection mechanism for NVM regions while\n                          in debug interface mode. This register will only\n                          disable the protection mechanism if the device is in\n                          debug interface mode."
    },
    "BPROT.UNUSED0": {
      "long_name": "BPROT.UNUSED0 (at 0x4000060c, read-write)",
      "purpose": "Unspecified"
    },
    "CCM.CNFPTR": {
      "long_name": "CCM.CNFPTR (at 0x4000f508, read-write)",
      "purpose": "Pointer to data structure holding AES key and NONCE vector\n\nCNFPTR, bits [0:31] - Pointer to the data structure holding the AES key and the\n                      CCM NONCE vector (see Table 1 CCM data structure overview)"
    },
    "CCM.ENABLE": {
      "long_name": "CCM.ENABLE (at 0x4000f500, read-write)",
      "purpose": "Enable\n\nENABLE, bits [0:1] - Enable or disable CCM; 0 for Disabled (Disable), 2 for\n                     Enabled (Enable)"
    },
    "CCM.EVENTS_ENDCRYPT": {
      "long_name": "CCM.EVENTS_ENDCRYPT (at 0x4000f104, read-write)",
      "purpose": "Encrypt/decrypt complete"
    },
    "CCM.EVENTS_ENDKSGEN": {
      "long_name": "CCM.EVENTS_ENDKSGEN (at 0x4000f100, read-write)",
      "purpose": "Key-stream generation complete"
    },
    "CCM.EVENTS_ERROR": {
      "long_name": "CCM.EVENTS_ERROR (at 0x4000f108, read-write)",
      "purpose": "CCM error event"
    },
    "CCM.INPTR": {
      "long_name": "CCM.INPTR (at 0x4000f50c, read-write)",
      "purpose": "Input pointer\n\nINPTR, bits [0:31] - Input pointer"
    },
    "CCM.INTENCLR": {
      "long_name": "CCM.INTENCLR (at 0x4000f308, read-write)",
      "purpose": "Disable interrupt\n\nENDKSGEN, bit [0] - Write '1' to Disable interrupt for ENDKSGEN event\nENDCRYPT, bit [1] - Write '1' to Disable interrupt for ENDCRYPT event\nERROR, bit [2]    - Write '1' to Disable interrupt for ERROR event"
    },
    "CCM.INTENSET": {
      "long_name": "CCM.INTENSET (at 0x4000f304, read-write)",
      "purpose": "Enable interrupt\n\nENDKSGEN, bit [0] - Write '1' to Enable interrupt for ENDKSGEN event\nENDCRYPT, bit [1] - Write '1' to Enable interrupt for ENDCRYPT event\nERROR, bit [2]    - Write '1' to Enable interrupt for ERROR event"
    },
    "CCM.MICSTATUS": {
      "long_name": "CCM.MICSTATUS (at 0x4000f400, read-only)",
      "purpose": "MIC check result\n\nMICSTATUS, bit [0] - The result of the MIC check performed during the previous\n                     decryption operation"
    },
    "CCM.MODE": {
      "long_name": "CCM.MODE (at 0x4000f504, read-write)",
      "purpose": "Operation mode\n\nMODE, bit [0]      - The mode of operation to be used\nDATARATE, bit [16] - Data rate that the CCM shall run in synch with\nLENGTH, bit [24]   - Packet length configuration"
    },
    "CCM.OUTPTR": {
      "long_name": "CCM.OUTPTR (at 0x4000f510, read-write)",
      "purpose": "Output pointer\n\nOUTPTR, bits [0:31] - Output pointer"
    },
    "CCM.SCRATCHPTR": {
      "long_name": "CCM.SCRATCHPTR (at 0x4000f514, read-write)",
      "purpose": "Pointer to data area used for temporary storage\n\nSCRATCHPTR, bits [0:31] - Pointer to a scratch data area used for temporary\n                          storage during key-stream generation, MIC generation\n                          and encryption/decryption."
    },
    "CCM.SHORTS": {
      "long_name": "CCM.SHORTS (at 0x4000f200, read-write)",
      "purpose": "Shortcut register\n\nENDKSGEN_CRYPT, bit [0] - Shortcut between ENDKSGEN event and CRYPT task"
    },
    "CCM.TASKS_CRYPT": {
      "long_name": "CCM.TASKS_CRYPT (at 0x4000f004, write-only)",
      "purpose": "Start encryption/decryption. This operation will stop by itself when completed."
    },
    "CCM.TASKS_KSGEN": {
      "long_name": "CCM.TASKS_KSGEN (at 0x4000f000, write-only)",
      "purpose": "Start generation of key-stream. This operation will stop by itself when\ncompleted."
    },
    "CCM.TASKS_STOP": {
      "long_name": "CCM.TASKS_STOP (at 0x4000f008, write-only)",
      "purpose": "Stop encryption/decryption"
    },
    "CLOCK.CTIV": {
      "long_name": "CLOCK.CTIV (at 0x40000538, read-write)",
      "purpose": "Calibration timer interval\n\nCTIV, bits [0:6] - Calibration timer interval in multiple of 0.25 seconds.\n                   Range: 0.25 seconds to 31.75 seconds."
    },
    "CLOCK.EVENTS_CTTO": {
      "long_name": "CLOCK.EVENTS_CTTO (at 0x40000110, read-write)",
      "purpose": "Calibration timer timeout"
    },
    "CLOCK.EVENTS_DONE": {
      "long_name": "CLOCK.EVENTS_DONE (at 0x4000010c, read-write)",
      "purpose": "Calibration of LFCLK RC oscillator complete event"
    },
    "CLOCK.EVENTS_HFCLKSTARTED": {
      "long_name": "CLOCK.EVENTS_HFCLKSTARTED (at 0x40000100, read-write)",
      "purpose": "HFCLK oscillator started"
    },
    "CLOCK.EVENTS_LFCLKSTARTED": {
      "long_name": "CLOCK.EVENTS_LFCLKSTARTED (at 0x40000104, read-write)",
      "purpose": "LFCLK started"
    },
    "CLOCK.HFCLKRUN": {
      "long_name": "CLOCK.HFCLKRUN (at 0x40000408, read-only)",
      "purpose": "Status indicating that HFCLKSTART task has been triggered\n\nSTATUS, bit [0] - HFCLKSTART task triggered or not"
    },
    "CLOCK.HFCLKSTAT": {
      "long_name": "CLOCK.HFCLKSTAT (at 0x4000040c, read-only)",
      "purpose": "HFCLK status\n\nSRC, bit [0]    - Source of HFCLK\nSTATE, bit [16] - HFCLK state"
    },
    "CLOCK.INTENCLR": {
      "long_name": "CLOCK.INTENCLR (at 0x40000308, read-write)",
      "purpose": "Disable interrupt\n\nHFCLKSTARTED, bit [0] - Write '1' to Disable interrupt for HFCLKSTARTED event\nLFCLKSTARTED, bit [1] - Write '1' to Disable interrupt for LFCLKSTARTED event\nDONE, bit [3]         - Write '1' to Disable interrupt for DONE event\nCTTO, bit [4]         - Write '1' to Disable interrupt for CTTO event"
    },
    "CLOCK.INTENSET": {
      "long_name": "CLOCK.INTENSET (at 0x40000304, read-write)",
      "purpose": "Enable interrupt\n\nHFCLKSTARTED, bit [0] - Write '1' to Enable interrupt for HFCLKSTARTED event\nLFCLKSTARTED, bit [1] - Write '1' to Enable interrupt for LFCLKSTARTED event\nDONE, bit [3]         - Write '1' to Enable interrupt for DONE event\nCTTO, bit [4]         - Write '1' to Enable interrupt for CTTO event"
    },
    "CLOCK.LFCLKRUN": {
      "long_name": "CLOCK.LFCLKRUN (at 0x40000414, read-only)",
      "purpose": "Status indicating that LFCLKSTART task has been triggered\n\nSTATUS, bit [0] - LFCLKSTART task triggered or not"
    },
    "CLOCK.LFCLKSRC": {
      "long_name": "CLOCK.LFCLKSRC (at 0x40000518, read-write)",
      "purpose": "Clock source for the LFCLK\n\nSRC, bits [0:1]    - Clock source; 0 for RC (32.768 kHz RC oscillator), 1 for\n                     Xtal (32.768 kHz crystal oscillator), 2 for Synth (32.768\n                     kHz synthesized from HFCLK)\nBYPASS, bit [16]   - Enable or disable bypass of LFCLK crystal oscillator with\n                     external clock source\nEXTERNAL, bit [17] - Enable or disable external source for LFCLK"
    },
    "CLOCK.LFCLKSRCCOPY": {
      "long_name": "CLOCK.LFCLKSRCCOPY (at 0x4000041c, read-only)",
      "purpose": "Copy of LFCLKSRC register, set when LFCLKSTART task was triggered\n\nSRC, bits [0:1] - Clock source; 0 for RC (32.768 kHz RC oscillator), 1 for Xtal\n                  (32.768 kHz crystal oscillator), 2 for Synth (32.768 kHz\n                  synthesized from HFCLK)"
    },
    "CLOCK.LFCLKSTAT": {
      "long_name": "CLOCK.LFCLKSTAT (at 0x40000418, read-only)",
      "purpose": "LFCLK status\n\nSRC, bits [0:1] - Source of LFCLK; 0 for RC (32.768 kHz RC oscillator), 1 for\n                  Xtal (32.768 kHz crystal oscillator), 2 for Synth (32.768 kHz\n                  synthesized from HFCLK)\nSTATE, bit [16] - LFCLK state"
    },
    "CLOCK.TASKS_CAL": {
      "long_name": "CLOCK.TASKS_CAL (at 0x40000010, write-only)",
      "purpose": "Start calibration of LFRC oscillator"
    },
    "CLOCK.TASKS_CTSTART": {
      "long_name": "CLOCK.TASKS_CTSTART (at 0x40000014, write-only)",
      "purpose": "Start calibration timer"
    },
    "CLOCK.TASKS_CTSTOP": {
      "long_name": "CLOCK.TASKS_CTSTOP (at 0x40000018, write-only)",
      "purpose": "Stop calibration timer"
    },
    "CLOCK.TASKS_HFCLKSTART": {
      "long_name": "CLOCK.TASKS_HFCLKSTART (at 0x40000000, write-only)",
      "purpose": "Start HFCLK crystal oscillator"
    },
    "CLOCK.TASKS_HFCLKSTOP": {
      "long_name": "CLOCK.TASKS_HFCLKSTOP (at 0x40000004, write-only)",
      "purpose": "Stop HFCLK crystal oscillator"
    },
    "CLOCK.TASKS_LFCLKSTART": {
      "long_name": "CLOCK.TASKS_LFCLKSTART (at 0x40000008, write-only)",
      "purpose": "Start LFCLK source"
    },
    "CLOCK.TASKS_LFCLKSTOP": {
      "long_name": "CLOCK.TASKS_LFCLKSTOP (at 0x4000000c, write-only)",
      "purpose": "Stop LFCLK source"
    },
    "CLOCK.TRACECONFIG": {
      "long_name": "CLOCK.TRACECONFIG (at 0x4000055c, read-write)",
      "purpose": "Clocking options for the Trace Port debug interface\n\nTRACEPORTSPEED, bits [0:1] - Speed of Trace Port clock. Note that the TRACECLK\n                             pin will output this clock divided by two; 0 for\n                             32MHz (32 MHz Trace Port clock (TRACECLK = 16\n                             MHz)), 1 for 16MHz (16 MHz Trace Port clock\n                             (TRACECLK = 8 MHz)), 2 for 8MHz (8 MHz Trace Port\n                             clock (TRACECLK = 4 MHz)), 3 for 4MHz (4 MHz Trace\n                             Port clock (TRACECLK = 2 MHz))\nTRACEMUX, bits [16:17]     - Pin multiplexing of trace signals; 0 for GPIO\n                             (GPIOs multiplexed onto all trace-pins), 1 for\n                             Serial (SWO multiplexed onto P0.18, GPIO\n                             multiplexed onto other trace pins), 2 for Parallel\n                             (TRACECLK and TRACEDATA multiplexed onto P0.20,\n                             P0.18, P0.16, P0.15 and P0.14.)"
    },
    "CMO.BPIALL": {
      "long_name": "Branch Predictor Invalidate All (at 0xe000ef78, write-only)",
      "purpose": "Invalidate all entries from branch predictors\n\nIgnored, bits [31:0] - Ignored. The value written to this field is ignored"
    },
    "CMO.DCCIMVAC": {
      "long_name": "Data Cache line Clean and Invalidate by Address to PoC (at 0xe000ef70, write-only)",
      "purpose": "Clean and invalidate data or unified cache line by address to PoC\n\nADDRESS, bits [31:0] - Address. Writing to this field initiates the maintenance\n                       operation for the address written"
    },
    "CMO.DCCISW": {
      "long_name": "Data Cache line Clean and Invalidate by Set/Way (at 0xe000ef74, write-only)",
      "purpose": "Clean and invalidate data or unified cache line by set/way\n\nSetWay, bits [31:4] - Cache set/way. Contains two fields: Way, bits[31:32-A],\n                      the number of the way to operate on\nLevel, bits [3:1]   - Cache level. Cache level to operate on, minus 1"
    },
    "CMO.DCCMVAC": {
      "long_name": "Data Cache line Clean by Address to PoC (at 0xe000ef68, write-only)",
      "purpose": "Clean data or unified cache line by address to PoC\n\nADDRESS, bits [31:0] - Address. Writing to this field initiates the maintenance\n                       operation for the address written"
    },
    "CMO.DCCMVAU": {
      "long_name": "Data Cache line Clean by address to PoU (at 0xe000ef64, write-only)",
      "purpose": "Clean data or unified cache line by address to PoU\n\nADDRESS, bits [31:0] - Address. Writing to this field initiates the maintenance\n                       operation for the address written"
    },
    "CMO.DCCSW": {
      "long_name": "Data Cache Clean line by Set/Way (at 0xe000ef6c, write-only)",
      "purpose": "Clean data or unified cache line by set/way\n\nSetWay, bits [31:4] - Cache set/way. Contains two fields: Way, bits [31:32-A],\n                      the number of the way to operate on\nLevel, bits [3:1]   - Cache level. Cache level to operate on, minus 1"
    },
    "CMO.DCIMVAC": {
      "long_name": "Data Cache line Invalidate by Address to PoC (at 0xe000ef5c, write-only)",
      "purpose": "Invalidate data or unified cache line by address to PoC\n\nADDRESS, bits [31:0] - Address. Writing to this field initiates the maintenance\n                       operation for the address written"
    },
    "CMO.DCISW": {
      "long_name": "Data Cache line Invalidate by Set/Way (at 0xe000ef60, write-only)",
      "purpose": "Invalidate data or unified cache line by set/way\n\nSetWay, bits [31:4] - Cache set/way. Contains two fields: Way, bits[31:32-A],\n                      the number of the way to operate on\nLevel, bits [3:1]   - Cache level. Cache level to operate on, minus 1"
    },
    "CMO.ICIALLU": {
      "long_name": "Instruction Cache Invalidate All to PoU (at 0xe000ef50, write-only)",
      "purpose": "Invalidate all instruction caches to PoU\n\nIgnored, bits [31:0] - The value written to this field is ignored. Ignored"
    },
    "CMO.ICIMVAU": {
      "long_name": "Instruction Cache line Invalidate by Address to PoU (at 0xe000ef58, write-only)",
      "purpose": "Invalidate instruction cache line by address to PoU\n\nADDRESS, bits [31:0] - Address. Writing to this field initiates the maintenance\n                       operation for the address written"
    },
    "COMP.ENABLE": {
      "long_name": "COMP.ENABLE (at 0x40013500, read-write)",
      "purpose": "COMP enable\n\nENABLE, bits [0:1] - Enable or disable COMP; 0 for Disabled (Disable), 2 for\n                     Enabled (Enable)"
    },
    "COMP.EVENTS_CROSS": {
      "long_name": "COMP.EVENTS_CROSS (at 0x4001310c, read-write)",
      "purpose": "Downward or upward crossing"
    },
    "COMP.EVENTS_DOWN": {
      "long_name": "COMP.EVENTS_DOWN (at 0x40013104, read-write)",
      "purpose": "Downward crossing"
    },
    "COMP.EVENTS_READY": {
      "long_name": "COMP.EVENTS_READY (at 0x40013100, read-write)",
      "purpose": "COMP is ready and output is valid"
    },
    "COMP.EVENTS_UP": {
      "long_name": "COMP.EVENTS_UP (at 0x40013108, read-write)",
      "purpose": "Upward crossing"
    },
    "COMP.EXTREFSEL": {
      "long_name": "COMP.EXTREFSEL (at 0x4001350c, read-write)",
      "purpose": "External reference select\n\nEXTREFSEL, bits [0:2] - External analog reference select; 0 for AnalogReference0\n                        (Use AIN0 as external analog reference), 1 for\n                        AnalogReference1 (Use AIN1 as external analog\n                        reference), 2 for AnalogReference2 (Use AIN2 as external\n                        analog reference), 3 for AnalogReference3 (Use AIN3 as\n                        external analog reference), 4 for AnalogReference4 (Use\n                        AIN4 as external analog reference), 5 for\n                        AnalogReference5 (Use AIN5 as external analog\n                        reference), 6 for AnalogReference6 (Use AIN6 as external\n                        analog reference), 7 for AnalogReference7 (Use AIN7 as\n                        external analog reference)"
    },
    "COMP.HYST": {
      "long_name": "COMP.HYST (at 0x40013538, read-write)",
      "purpose": "Comparator hysteresis enable\n\nHYST, bit [0] - Comparator hysteresis"
    },
    "COMP.INTEN": {
      "long_name": "COMP.INTEN (at 0x40013300, read-write)",
      "purpose": "Enable or disable interrupt\n\nREADY, bit [0] - Enable or disable interrupt for READY event\nDOWN, bit [1]  - Enable or disable interrupt for DOWN event\nUP, bit [2]    - Enable or disable interrupt for UP event\nCROSS, bit [3] - Enable or disable interrupt for CROSS event"
    },
    "COMP.INTENCLR": {
      "long_name": "COMP.INTENCLR (at 0x40013308, read-write)",
      "purpose": "Disable interrupt\n\nREADY, bit [0] - Write '1' to Disable interrupt for READY event\nDOWN, bit [1]  - Write '1' to Disable interrupt for DOWN event\nUP, bit [2]    - Write '1' to Disable interrupt for UP event\nCROSS, bit [3] - Write '1' to Disable interrupt for CROSS event"
    },
    "COMP.INTENSET": {
      "long_name": "COMP.INTENSET (at 0x40013304, read-write)",
      "purpose": "Enable interrupt\n\nREADY, bit [0] - Write '1' to Enable interrupt for READY event\nDOWN, bit [1]  - Write '1' to Enable interrupt for DOWN event\nUP, bit [2]    - Write '1' to Enable interrupt for UP event\nCROSS, bit [3] - Write '1' to Enable interrupt for CROSS event"
    },
    "COMP.ISOURCE": {
      "long_name": "COMP.ISOURCE (at 0x4001353c, read-write)",
      "purpose": "Current source select on analog input\n\nISOURCE, bits [0:1] - Comparator hysteresis; 0 for Off (Current source\n                      disabled), 1 for Ien2mA5 (Current source enabled (+/- 2.5\n                      uA)), 2 for Ien5mA (Current source enabled (+/- 5 uA)), 3\n                      for Ien10mA (Current source enabled (+/- 10 uA))"
    },
    "COMP.MODE": {
      "long_name": "COMP.MODE (at 0x40013534, read-write)",
      "purpose": "Mode configuration\n\nSP, bits [0:1] - Speed and power modes; 0 for Low (Low-power mode), 1 for Normal\n                 (Normal mode), 2 for High (High-speed mode)\nMAIN, bit [8]  - Main operation modes"
    },
    "COMP.PSEL": {
      "long_name": "COMP.PSEL (at 0x40013504, read-write)",
      "purpose": "Pin select\n\nPSEL, bits [0:2] - Analog pin select; 0 for AnalogInput0 (AIN0 selected as\n                   analog input), 1 for AnalogInput1 (AIN1 selected as analog\n                   input), 2 for AnalogInput2 (AIN2 selected as analog input), 3\n                   for AnalogInput3 (AIN3 selected as analog input), 4 for\n                   AnalogInput4 (AIN4 selected as analog input), 5 for\n                   AnalogInput5 (AIN5 selected as analog input), 6 for\n                   AnalogInput6 (AIN6 selected as analog input), 7 for\n                   AnalogInput7 (AIN7 selected as analog input)"
    },
    "COMP.REFSEL": {
      "long_name": "COMP.REFSEL (at 0x40013508, read-write)",
      "purpose": "Reference source select for single-ended mode\n\nREFSEL, bits [0:2] - Reference select; 0 for Int1V2 (VREF = internal 1.2 V\n                     reference (VDD &gt;= 1.7 V)), 1 for Int1V8 (VREF = internal\n                     1.8 V reference (VDD &gt;= VREF + 0.2 V)), 2 for Int2V4\n                     (VREF = internal 2.4 V reference (VDD &gt;= VREF + 0.2 V)),\n                     4 for VDD (VREF = VDD), 7 for ARef (VREF = AREF (VDD &gt;=\n                     VREF &gt;= AREFMIN))"
    },
    "COMP.RESULT": {
      "long_name": "COMP.RESULT (at 0x40013400, read-only)",
      "purpose": "Compare result\n\nRESULT, bit [0] - Result of last compare. Decision point SAMPLE task."
    },
    "COMP.SHORTS": {
      "long_name": "COMP.SHORTS (at 0x40013200, read-write)",
      "purpose": "Shortcut register\n\nREADY_SAMPLE, bit [0] - Shortcut between READY event and SAMPLE task\nREADY_STOP, bit [1]   - Shortcut between READY event and STOP task\nDOWN_STOP, bit [2]    - Shortcut between DOWN event and STOP task\nUP_STOP, bit [3]      - Shortcut between UP event and STOP task\nCROSS_STOP, bit [4]   - Shortcut between CROSS event and STOP task"
    },
    "COMP.TASKS_SAMPLE": {
      "long_name": "COMP.TASKS_SAMPLE (at 0x40013008, write-only)",
      "purpose": "Sample comparator value"
    },
    "COMP.TASKS_START": {
      "long_name": "COMP.TASKS_START (at 0x40013000, write-only)",
      "purpose": "Start comparator"
    },
    "COMP.TASKS_STOP": {
      "long_name": "COMP.TASKS_STOP (at 0x40013004, write-only)",
      "purpose": "Stop comparator"
    },
    "COMP.TH": {
      "long_name": "COMP.TH (at 0x40013530, read-write)",
      "purpose": "Threshold configuration for hysteresis unit\n\nTHDOWN, bits [0:5] - VDOWN = (THDOWN+1)/64*VREF\nTHUP, bits [8:13]  - VUP = (THUP+1)/64*VREF"
    },
    "CONTROL": {
      "long_name": "Control register (CONTROL)",
      "purpose": "FPCA, bit [2]  - Context floating-point active\nSPSEL, bit [1] - Active stack pointer\nnPRIV, bit [0] - Thread mode privilege level"
    },
    "CYCLECOUNT": {
      "long_name": "Cycle count (CYCLECOUNT)",
      "purpose": ""
    },
    "DCB.DCRDR": {
      "long_name": "Debug Core Register Data Register (at 0xe000edf8, read-write)",
      "purpose": "provides debug access to the ARM core registers, special-purpose registers, and\nFloating-point extensio\n\nDBGTMP, bits [31:0] - Data temporary cache, for reading and writing the ARM core\n                      registers, special-purpose registers, and Floating-point\n                      extension registers"
    },
    "DCB.DCRSR": {
      "long_name": "Debug Core Register Selector Register (at 0xe000edf4, write-only)",
      "purpose": "provides debug access to the ARM core registers, special-purpose registers, and\nFloating-point extension regi\n\nREGWnR, bit [16]   - Specifies the access type for the transfer\nREGSEL, bits [6:0] - Specifies the ARM core register, special-purpose register,\n                     or Floating-point extension register, to transfer; 13 for\n                     None (The current SP), 14 for None (LR), 15 for None\n                     (DebugReturnAddress, see The DebugReturnAddress value), 16\n                     for None (xPSR), 17 for None (Main stack pointer, MSP), 18\n                     for None (Process stack pointer, PSP), 20 for None\n                     (Control, Faultmask, Basepri and Primask), 33 for None\n                     (Floating-point Status and Control Register, FPSCR)"
    },
    "DCB.DEMCR": {
      "long_name": "Debug Exception and Monitor Control Register (at 0xe000edfc, read-write)",
      "purpose": "Manages vector catch behavior and DebugMonitor handling when debugging\n\nTRCENA, bit [24]      - Global enable for all DWT and ITM features\nMON_REQ, bit [19]     - DebugMonitor semaphore bit\nMON_STEP, bit [18]    - When MON_EN is set to 0, this feature is disabled and\n                        the processor ignores MON_STEP\nMON_PEND, bit [17]    - Sets or clears the pending state of the DebugMonitor\n                        exception\nMON_EN, bit [16]      - Enable the DebugMonitor exception\nVC_HARDERR, bit [10]  - Enable halting debug trap on a HardFault exception\nVC_INTERR, bit [9]    - Enable halting debug trap on a fault occurring during\n                        exception entry or exception return\nVC_BUSERR, bit [8]    - Enable halting debug trap on a BusFault exception\nVC_STATERR, bit [7]   - Enable halting debug trap on a UsageFault exception\n                        caused by a state information error, for example an\n                        Undefined Instruction exception\nVC_CHKERR, bit [6]    - Enable halting debug trap on a UsageFault exception\n                        caused by a checking error, for example an alignment\n                        check error\nVC_NOCPERR, bit [5]   - Enable halting debug trap on a UsageFault caused by an\n                        access to a Coprocessor\nVC_MMERR, bit [4]     - Enable halting debug trap on a MemManage exception\nVC_CORERESET, bit [0] - Enable Reset Vector Catch"
    },
    "DCB.DHCSR": {
      "long_name": "Debug Halting Control and Status Register (at 0xe000edf0, read-write)",
      "purpose": "Controls halting debug\n\nDBGKEY, bits [31:16]  - Debug key\nS_RESET_ST, bit [25]  - Indicates whether the processor has been reset since the\n                        last read of DHCSR\nS_RETIRE_ST, bit [24] - Set to 1 every time the processor retires one or more\n                        instructions\nS_LOCKUP, bit [19]    - Indicates whether the processor is locked up because of\n                        an unrecoverable exception\nS_SLEEP, bit [18]     - Indicates whether the processor is sleeping\nS_HALT, bit [17]      - Indicates whether the processor is in Debug state\nS_REGRDY, bit [16]    - A handshake flag for transfers through the DCRDR\nC_SNAPSTALL, bit [5]  - Allow imprecise entry to Debug state\nC_MASKINTS, bit [3]   - When debug is enabled, the debugger can write to this\n                        bit to mask PendSV, SysTick and external configurable\n                        interrupts\nC_STEP, bit [2]       - Processor step bit\nC_HALT, bit [1]       - Processor halt bit\nC_DEBUGEN, bit [0]    - Halting debug enable bit"
    },
    "DPB.FP_COMP_<n>": {
      "long_name": "FlashPatch Comparator Register <n> (at 0xe0002008, read-write)",
      "purpose": "Holds an address for comparison with addresses in the Code memory region, see\nThe system address map on page B3-648\n\nREPLACE, bits [31:30] - Defines the behavior when the COMP address is matched; 0\n                        for None (Remap to remap address, see FlashPatch Remap\n                        register, FP_REMAP on page C1-818), 1 for None\n                        (Breakpoint on instruction at '000':COMP:'00'), 10 for\n                        None (Breakpoint on instruction at '000':COMP:'10'), 11\n                        for None (Breakpoint on both instructions at\n                        '000':COMP:'00' and '000':COMP:'10')\nCOMP, bits [28:2]     - Bits[28:2] of the address to compare with addresses from\n                        the Code memory region, see The\n                        system address map on page B3-592\nENABLE, bit [0]       - Enable bit for this comparator"
    },
    "DPB.FP_CTRL": {
      "long_name": "FlashPatch Control Register (at 0xe0002000, read-write)",
      "purpose": "Provides FPB implementation information, and the global enable for the FPB unit\n\nREV, bits [31:28]           - Flash Patch Breakpoint architecture revision\nNUM_CODE[6:4], bits [14:12] - Number of comperators 6:4\nNUM_LIT, bits [11:8]        - The number of literal address comparators\n                              supported, starting from NUM_CODE upwards\nNUM_CODE[3:0], bits [7:4]   - Number of comperators 3:0\nKEY, bit [1]                - On any write to FP_CTRL, this bit must be 1\nENABLE, bit [0]             - Enable bit for the FPB"
    },
    "DPB.FP_REMAP": {
      "long_name": "FlashPatch Remap register (at 0xe0002004, read-write)",
      "purpose": "Indicates whether the implementation supports flash patch remap, and if it does,\nholds the SRAM address for remap\n\nRMPSPT, bit [29]   - Indicates whether the FPB unit supports flash patch remap\nREMAP, bits [28:5] - If the FPB supports flash patch remap, this field"
    },
    "DWT.DWT_COMP_<n>": {
      "long_name": "Comparator register (at 0xe0001020, read-write)",
      "purpose": "Provides a reference value for use by comparator n\n\nCOMP, bits [31:0] - Reference value for comparison"
    },
    "DWT.DWT_CPICNT": {
      "long_name": "CPI Count register (at 0xe0001008, read-write)",
      "purpose": "Counts additional cycles required to execute multi-cycle instructions and\ninstruction fetch stalls\n\nCPICNT, bits [7:0] - Base instruction overhead counter"
    },
    "DWT.DWT_CTRL": {
      "long_name": "Control register (at 0xe0001000, read-write)",
      "purpose": "Provides configuration and status information for the DWT unit, and used to\ncontrol features of the unit\n\nNUMCOMP, bits [31:28]  - Number of comparators implemented\nNOTRCPKT, bit [27]     - Shows whether the implementation supports trace\n                         sampling and exception tracing\nNOEXTTRIG, bit [26]    - Shows whether the implementation includes external\n                         match signals, CMPMATCH[N]\nNOCYCCNT, bit [25]     - Shows whether the implementation supports a cycle\n                         counter\nNOPRFCNT, bit [24]     - Shows whether the implementation supports the profiling\n                         counters\nCYCEVTENA, bit [22]    - Enables POSTCNT underflow Event counter packets\n                         generation\nFOLDEVTENA, bit [21]   - Enables generation of the Folded-instruction counter\n                         overflow event\nLSUEVTENA, bit [20]    - Enables generation of the LSU counter overflow event\nSLEEPEVTENA, bit [19]  - Enables generation of the Sleep counter overflow event\nEXCEVTENA, bit [18]    - Enables generation of the Exception overhead counter\n                         overflow event\nCPIEVTENA, bit [17]    - Enables generation of the CPI counter overflow event\nEXCTRCENA, bit [16]    - Enables generation of exception trace\nPCSAMPLENA, bit [12]   - Enables use of POSTCNT counter as a timer for Periodic\n                         PC sample packet generation\nSYNCTAP, bits [11:10]  - Selects the position of the synchronization packet\n                         counter tap on the CYCCNT counter; 0 for None\n                         (Disabled. No Synchronization packets), 10 for None\n                         (Synchronization counter tap at CYCCNT[26]), 11 for\n                         None (Synchronization counter tap at CYCCNT[28])\nCYCTAP, bit [9]        - Selects the position of the POSTCNT tap on the CYCCNT\n                         counter\nPOSTINIT, bits [8:5]   - Initial value for the POSTCNT counter\nPOSTPRESET, bits [4:1] - Reload value for the POSTCNT counter\nCYCCNTENA, bit [0]     - Enables CYCCNT"
    },
    "DWT.DWT_CYCCNT": {
      "long_name": "Cycle Count register (at 0xe0001004, read-write)",
      "purpose": "Shows or sets the value of the processor cycle counter, CYCCNT\n\nCYCCNT, bits [31:0] - Incrementing cycle counter value"
    },
    "DWT.DWT_EXCCNT": {
      "long_name": "Exception Overhead Count register (at 0xe000100c, read-write)",
      "purpose": "Counts the total cycles spent in exception processing\n\nEXCCNT, bits [7:0] - The exception overhead counter"
    },
    "DWT.DWT_FOLDCNT": {
      "long_name": "Folded-instruction Count register (at 0xe0001018, read-write)",
      "purpose": "Increments on each instruction that takes 0 cycles\n\nFOLDCNT, bits [7:0] - Folded instruction counter"
    },
    "DWT.DWT_FUNCTION_<n>": {
      "long_name": "Comparator Function Register <n> (at 0xe0001028, read-write)",
      "purpose": "Controls the operation of comparator n\n\nMATCHED, bit [24]        - Comparator match\nDATAVADDR1, bits [19:16] - When the DATAVMATCH and LNK1ENA bits are both 1, this\n                           field can hold the comparator number of a second\n                           comparator to use for linked address comparison\nDATAVADDR0, bits [15:12] - When the DATAVMATCH bit is set to 1 this field can\n                           hold the comparator number of a comparator to use for\n                           linked address comparison\nDATAVSIZE, bits [11:10]  - For data value matching, specifies the size of the\n                           required data comparison; 0 for None (Byte), 1 for\n                           None (Halfword), 10 for None (Word)\nLNK1ENA, bit [9]         - Indicates whether the implementation supports use of\n                           a second linked comparator\nDATAVMATCH, bit [8]      - Enables data value comparison, if supported\nCYCMATCH, bit [7]        - DWT_FUNCTION0 only\nEMITRANGE, bit [5]       - If the implementation supports trace sampling,\n                           enables generation of Data trace address packets,\n                           that hold Daddr[15\nFUNCTION, bits [3:0]     - Selects action taken on comparator match; 0 for None\n                           (= Disabled or LinkAddr(), see LinkAddr support on\n                           page C1-789)"
    },
    "DWT.DWT_LSUCNT": {
      "long_name": "LSU Count register (at 0xe0001014, read-write)",
      "purpose": "Increments on the additional cycles required to execute all load or store\ninstructions\n\nLSUCNT, bits [7:0] - Load-store overhead counter"
    },
    "DWT.DWT_MASK_<n>": {
      "long_name": "Comparator Mask Register <n> (at 0xe0001024, read-write)",
      "purpose": "Provides the size of the ignore mask applied to the access address for address\nrange matching by comparator n\n\nMASK, bits [4:0] - The size of the ignore mask, 0-31 bits, applied to address\n                   range matching"
    },
    "DWT.DWT_PCSR": {
      "long_name": "Program Counter Sample Register (at 0xe000101c, read-only)",
      "purpose": "Samples the current value of the program counter\n\nEIASAMPLE, bits [31:0] - Executed Instruction Address sample value"
    },
    "DWT.DWT_SLEEPCNT": {
      "long_name": "Sleep Count register (at 0xe0001010, read-write)",
      "purpose": "Counts the total number of cycles that the processor is sleeping\n\nSLEEPCNT, bits [7:0] - Sleep counter"
    },
    "ECB.ECBDATAPTR": {
      "long_name": "ECB.ECBDATAPTR (at 0x4000e504, read-write)",
      "purpose": "ECB block encrypt memory pointers\n\nECBDATAPTR, bits [0:31] - Pointer to the ECB data structure (see Table 1 ECB\n                          data structure overview)"
    },
    "ECB.EVENTS_ENDECB": {
      "long_name": "ECB.EVENTS_ENDECB (at 0x4000e100, read-write)",
      "purpose": "ECB block encrypt complete"
    },
    "ECB.EVENTS_ERRORECB": {
      "long_name": "ECB.EVENTS_ERRORECB (at 0x4000e104, read-write)",
      "purpose": "ECB block encrypt aborted because of a STOPECB task or due to an error"
    },
    "ECB.INTENCLR": {
      "long_name": "ECB.INTENCLR (at 0x4000e308, read-write)",
      "purpose": "Disable interrupt\n\nENDECB, bit [0]   - Write '1' to Disable interrupt for ENDECB event\nERRORECB, bit [1] - Write '1' to Disable interrupt for ERRORECB event"
    },
    "ECB.INTENSET": {
      "long_name": "ECB.INTENSET (at 0x4000e304, read-write)",
      "purpose": "Enable interrupt\n\nENDECB, bit [0]   - Write '1' to Enable interrupt for ENDECB event\nERRORECB, bit [1] - Write '1' to Enable interrupt for ERRORECB event"
    },
    "ECB.TASKS_STARTECB": {
      "long_name": "ECB.TASKS_STARTECB (at 0x4000e000, write-only)",
      "purpose": "Start ECB block encrypt"
    },
    "ECB.TASKS_STOPECB": {
      "long_name": "ECB.TASKS_STOPECB (at 0x4000e004, write-only)",
      "purpose": "Abort a possible executing ECB operation"
    },
    "EGU0.EVENTS_TRIGGERED<n>": {
      "long_name": "EGU0.EVENTS_TRIGGERED<n> (at 0x40014100, read-write)",
      "purpose": "Event number <n> generated by triggering the corresponding TRIGGER<n> task"
    },
    "EGU0.INTEN": {
      "long_name": "EGU0.INTEN (at 0x40014300, read-write)",
      "purpose": "Enable or disable interrupt\n\nTRIGGERED0, bit [0]   - Enable or disable interrupt for TRIGGERED[0] event\nTRIGGERED1, bit [1]   - Enable or disable interrupt for TRIGGERED[1] event\nTRIGGERED2, bit [2]   - Enable or disable interrupt for TRIGGERED[2] event\nTRIGGERED3, bit [3]   - Enable or disable interrupt for TRIGGERED[3] event\nTRIGGERED4, bit [4]   - Enable or disable interrupt for TRIGGERED[4] event\nTRIGGERED5, bit [5]   - Enable or disable interrupt for TRIGGERED[5] event\nTRIGGERED6, bit [6]   - Enable or disable interrupt for TRIGGERED[6] event\nTRIGGERED7, bit [7]   - Enable or disable interrupt for TRIGGERED[7] event\nTRIGGERED8, bit [8]   - Enable or disable interrupt for TRIGGERED[8] event\nTRIGGERED9, bit [9]   - Enable or disable interrupt for TRIGGERED[9] event\nTRIGGERED10, bit [10] - Enable or disable interrupt for TRIGGERED[10] event\nTRIGGERED11, bit [11] - Enable or disable interrupt for TRIGGERED[11] event\nTRIGGERED12, bit [12] - Enable or disable interrupt for TRIGGERED[12] event\nTRIGGERED13, bit [13] - Enable or disable interrupt for TRIGGERED[13] event\nTRIGGERED14, bit [14] - Enable or disable interrupt for TRIGGERED[14] event\nTRIGGERED15, bit [15] - Enable or disable interrupt for TRIGGERED[15] event"
    },
    "EGU0.INTENCLR": {
      "long_name": "EGU0.INTENCLR (at 0x40014308, read-write)",
      "purpose": "Disable interrupt\n\nTRIGGERED0, bit [0]   - Write '1' to Disable interrupt for TRIGGERED[0] event\nTRIGGERED1, bit [1]   - Write '1' to Disable interrupt for TRIGGERED[1] event\nTRIGGERED2, bit [2]   - Write '1' to Disable interrupt for TRIGGERED[2] event\nTRIGGERED3, bit [3]   - Write '1' to Disable interrupt for TRIGGERED[3] event\nTRIGGERED4, bit [4]   - Write '1' to Disable interrupt for TRIGGERED[4] event\nTRIGGERED5, bit [5]   - Write '1' to Disable interrupt for TRIGGERED[5] event\nTRIGGERED6, bit [6]   - Write '1' to Disable interrupt for TRIGGERED[6] event\nTRIGGERED7, bit [7]   - Write '1' to Disable interrupt for TRIGGERED[7] event\nTRIGGERED8, bit [8]   - Write '1' to Disable interrupt for TRIGGERED[8] event\nTRIGGERED9, bit [9]   - Write '1' to Disable interrupt for TRIGGERED[9] event\nTRIGGERED10, bit [10] - Write '1' to Disable interrupt for TRIGGERED[10] event\nTRIGGERED11, bit [11] - Write '1' to Disable interrupt for TRIGGERED[11] event\nTRIGGERED12, bit [12] - Write '1' to Disable interrupt for TRIGGERED[12] event\nTRIGGERED13, bit [13] - Write '1' to Disable interrupt for TRIGGERED[13] event\nTRIGGERED14, bit [14] - Write '1' to Disable interrupt for TRIGGERED[14] event\nTRIGGERED15, bit [15] - Write '1' to Disable interrupt for TRIGGERED[15] event"
    },
    "EGU0.INTENSET": {
      "long_name": "EGU0.INTENSET (at 0x40014304, read-write)",
      "purpose": "Enable interrupt\n\nTRIGGERED0, bit [0]   - Write '1' to Enable interrupt for TRIGGERED[0] event\nTRIGGERED1, bit [1]   - Write '1' to Enable interrupt for TRIGGERED[1] event\nTRIGGERED2, bit [2]   - Write '1' to Enable interrupt for TRIGGERED[2] event\nTRIGGERED3, bit [3]   - Write '1' to Enable interrupt for TRIGGERED[3] event\nTRIGGERED4, bit [4]   - Write '1' to Enable interrupt for TRIGGERED[4] event\nTRIGGERED5, bit [5]   - Write '1' to Enable interrupt for TRIGGERED[5] event\nTRIGGERED6, bit [6]   - Write '1' to Enable interrupt for TRIGGERED[6] event\nTRIGGERED7, bit [7]   - Write '1' to Enable interrupt for TRIGGERED[7] event\nTRIGGERED8, bit [8]   - Write '1' to Enable interrupt for TRIGGERED[8] event\nTRIGGERED9, bit [9]   - Write '1' to Enable interrupt for TRIGGERED[9] event\nTRIGGERED10, bit [10] - Write '1' to Enable interrupt for TRIGGERED[10] event\nTRIGGERED11, bit [11] - Write '1' to Enable interrupt for TRIGGERED[11] event\nTRIGGERED12, bit [12] - Write '1' to Enable interrupt for TRIGGERED[12] event\nTRIGGERED13, bit [13] - Write '1' to Enable interrupt for TRIGGERED[13] event\nTRIGGERED14, bit [14] - Write '1' to Enable interrupt for TRIGGERED[14] event\nTRIGGERED15, bit [15] - Write '1' to Enable interrupt for TRIGGERED[15] event"
    },
    "EGU0.TASKS_TRIGGER<n>": {
      "long_name": "EGU0.TASKS_TRIGGER<n> (at 0x40014000, write-only)",
      "purpose": "Trigger <n> for triggering the corresponding TRIGGERED<n> event"
    },
    "EGU1.EVENTS_TRIGGERED<n>": {
      "long_name": "EGU1.EVENTS_TRIGGERED<n> (at 0x40015100, read-write)",
      "purpose": "Event number <n> generated by triggering the corresponding TRIGGER<n> task"
    },
    "EGU1.INTEN": {
      "long_name": "EGU1.INTEN (at 0x40015300, read-write)",
      "purpose": "Enable or disable interrupt\n\nTRIGGERED0, bit [0]   - Enable or disable interrupt for TRIGGERED[0] event\nTRIGGERED1, bit [1]   - Enable or disable interrupt for TRIGGERED[1] event\nTRIGGERED2, bit [2]   - Enable or disable interrupt for TRIGGERED[2] event\nTRIGGERED3, bit [3]   - Enable or disable interrupt for TRIGGERED[3] event\nTRIGGERED4, bit [4]   - Enable or disable interrupt for TRIGGERED[4] event\nTRIGGERED5, bit [5]   - Enable or disable interrupt for TRIGGERED[5] event\nTRIGGERED6, bit [6]   - Enable or disable interrupt for TRIGGERED[6] event\nTRIGGERED7, bit [7]   - Enable or disable interrupt for TRIGGERED[7] event\nTRIGGERED8, bit [8]   - Enable or disable interrupt for TRIGGERED[8] event\nTRIGGERED9, bit [9]   - Enable or disable interrupt for TRIGGERED[9] event\nTRIGGERED10, bit [10] - Enable or disable interrupt for TRIGGERED[10] event\nTRIGGERED11, bit [11] - Enable or disable interrupt for TRIGGERED[11] event\nTRIGGERED12, bit [12] - Enable or disable interrupt for TRIGGERED[12] event\nTRIGGERED13, bit [13] - Enable or disable interrupt for TRIGGERED[13] event\nTRIGGERED14, bit [14] - Enable or disable interrupt for TRIGGERED[14] event\nTRIGGERED15, bit [15] - Enable or disable interrupt for TRIGGERED[15] event"
    },
    "EGU1.INTENCLR": {
      "long_name": "EGU1.INTENCLR (at 0x40015308, read-write)",
      "purpose": "Disable interrupt\n\nTRIGGERED0, bit [0]   - Write '1' to Disable interrupt for TRIGGERED[0] event\nTRIGGERED1, bit [1]   - Write '1' to Disable interrupt for TRIGGERED[1] event\nTRIGGERED2, bit [2]   - Write '1' to Disable interrupt for TRIGGERED[2] event\nTRIGGERED3, bit [3]   - Write '1' to Disable interrupt for TRIGGERED[3] event\nTRIGGERED4, bit [4]   - Write '1' to Disable interrupt for TRIGGERED[4] event\nTRIGGERED5, bit [5]   - Write '1' to Disable interrupt for TRIGGERED[5] event\nTRIGGERED6, bit [6]   - Write '1' to Disable interrupt for TRIGGERED[6] event\nTRIGGERED7, bit [7]   - Write '1' to Disable interrupt for TRIGGERED[7] event\nTRIGGERED8, bit [8]   - Write '1' to Disable interrupt for TRIGGERED[8] event\nTRIGGERED9, bit [9]   - Write '1' to Disable interrupt for TRIGGERED[9] event\nTRIGGERED10, bit [10] - Write '1' to Disable interrupt for TRIGGERED[10] event\nTRIGGERED11, bit [11] - Write '1' to Disable interrupt for TRIGGERED[11] event\nTRIGGERED12, bit [12] - Write '1' to Disable interrupt for TRIGGERED[12] event\nTRIGGERED13, bit [13] - Write '1' to Disable interrupt for TRIGGERED[13] event\nTRIGGERED14, bit [14] - Write '1' to Disable interrupt for TRIGGERED[14] event\nTRIGGERED15, bit [15] - Write '1' to Disable interrupt for TRIGGERED[15] event"
    },
    "EGU1.INTENSET": {
      "long_name": "EGU1.INTENSET (at 0x40015304, read-write)",
      "purpose": "Enable interrupt\n\nTRIGGERED0, bit [0]   - Write '1' to Enable interrupt for TRIGGERED[0] event\nTRIGGERED1, bit [1]   - Write '1' to Enable interrupt for TRIGGERED[1] event\nTRIGGERED2, bit [2]   - Write '1' to Enable interrupt for TRIGGERED[2] event\nTRIGGERED3, bit [3]   - Write '1' to Enable interrupt for TRIGGERED[3] event\nTRIGGERED4, bit [4]   - Write '1' to Enable interrupt for TRIGGERED[4] event\nTRIGGERED5, bit [5]   - Write '1' to Enable interrupt for TRIGGERED[5] event\nTRIGGERED6, bit [6]   - Write '1' to Enable interrupt for TRIGGERED[6] event\nTRIGGERED7, bit [7]   - Write '1' to Enable interrupt for TRIGGERED[7] event\nTRIGGERED8, bit [8]   - Write '1' to Enable interrupt for TRIGGERED[8] event\nTRIGGERED9, bit [9]   - Write '1' to Enable interrupt for TRIGGERED[9] event\nTRIGGERED10, bit [10] - Write '1' to Enable interrupt for TRIGGERED[10] event\nTRIGGERED11, bit [11] - Write '1' to Enable interrupt for TRIGGERED[11] event\nTRIGGERED12, bit [12] - Write '1' to Enable interrupt for TRIGGERED[12] event\nTRIGGERED13, bit [13] - Write '1' to Enable interrupt for TRIGGERED[13] event\nTRIGGERED14, bit [14] - Write '1' to Enable interrupt for TRIGGERED[14] event\nTRIGGERED15, bit [15] - Write '1' to Enable interrupt for TRIGGERED[15] event"
    },
    "EGU1.TASKS_TRIGGER<n>": {
      "long_name": "EGU1.TASKS_TRIGGER<n> (at 0x40015000, write-only)",
      "purpose": "Trigger <n> for triggering the corresponding TRIGGERED<n> event"
    },
    "EGU2.EVENTS_TRIGGERED<n>": {
      "long_name": "EGU2.EVENTS_TRIGGERED<n> (at 0x40016100, read-write)",
      "purpose": "Event number <n> generated by triggering the corresponding TRIGGER<n> task"
    },
    "EGU2.INTEN": {
      "long_name": "EGU2.INTEN (at 0x40016300, read-write)",
      "purpose": "Enable or disable interrupt\n\nTRIGGERED0, bit [0]   - Enable or disable interrupt for TRIGGERED[0] event\nTRIGGERED1, bit [1]   - Enable or disable interrupt for TRIGGERED[1] event\nTRIGGERED2, bit [2]   - Enable or disable interrupt for TRIGGERED[2] event\nTRIGGERED3, bit [3]   - Enable or disable interrupt for TRIGGERED[3] event\nTRIGGERED4, bit [4]   - Enable or disable interrupt for TRIGGERED[4] event\nTRIGGERED5, bit [5]   - Enable or disable interrupt for TRIGGERED[5] event\nTRIGGERED6, bit [6]   - Enable or disable interrupt for TRIGGERED[6] event\nTRIGGERED7, bit [7]   - Enable or disable interrupt for TRIGGERED[7] event\nTRIGGERED8, bit [8]   - Enable or disable interrupt for TRIGGERED[8] event\nTRIGGERED9, bit [9]   - Enable or disable interrupt for TRIGGERED[9] event\nTRIGGERED10, bit [10] - Enable or disable interrupt for TRIGGERED[10] event\nTRIGGERED11, bit [11] - Enable or disable interrupt for TRIGGERED[11] event\nTRIGGERED12, bit [12] - Enable or disable interrupt for TRIGGERED[12] event\nTRIGGERED13, bit [13] - Enable or disable interrupt for TRIGGERED[13] event\nTRIGGERED14, bit [14] - Enable or disable interrupt for TRIGGERED[14] event\nTRIGGERED15, bit [15] - Enable or disable interrupt for TRIGGERED[15] event"
    },
    "EGU2.INTENCLR": {
      "long_name": "EGU2.INTENCLR (at 0x40016308, read-write)",
      "purpose": "Disable interrupt\n\nTRIGGERED0, bit [0]   - Write '1' to Disable interrupt for TRIGGERED[0] event\nTRIGGERED1, bit [1]   - Write '1' to Disable interrupt for TRIGGERED[1] event\nTRIGGERED2, bit [2]   - Write '1' to Disable interrupt for TRIGGERED[2] event\nTRIGGERED3, bit [3]   - Write '1' to Disable interrupt for TRIGGERED[3] event\nTRIGGERED4, bit [4]   - Write '1' to Disable interrupt for TRIGGERED[4] event\nTRIGGERED5, bit [5]   - Write '1' to Disable interrupt for TRIGGERED[5] event\nTRIGGERED6, bit [6]   - Write '1' to Disable interrupt for TRIGGERED[6] event\nTRIGGERED7, bit [7]   - Write '1' to Disable interrupt for TRIGGERED[7] event\nTRIGGERED8, bit [8]   - Write '1' to Disable interrupt for TRIGGERED[8] event\nTRIGGERED9, bit [9]   - Write '1' to Disable interrupt for TRIGGERED[9] event\nTRIGGERED10, bit [10] - Write '1' to Disable interrupt for TRIGGERED[10] event\nTRIGGERED11, bit [11] - Write '1' to Disable interrupt for TRIGGERED[11] event\nTRIGGERED12, bit [12] - Write '1' to Disable interrupt for TRIGGERED[12] event\nTRIGGERED13, bit [13] - Write '1' to Disable interrupt for TRIGGERED[13] event\nTRIGGERED14, bit [14] - Write '1' to Disable interrupt for TRIGGERED[14] event\nTRIGGERED15, bit [15] - Write '1' to Disable interrupt for TRIGGERED[15] event"
    },
    "EGU2.INTENSET": {
      "long_name": "EGU2.INTENSET (at 0x40016304, read-write)",
      "purpose": "Enable interrupt\n\nTRIGGERED0, bit [0]   - Write '1' to Enable interrupt for TRIGGERED[0] event\nTRIGGERED1, bit [1]   - Write '1' to Enable interrupt for TRIGGERED[1] event\nTRIGGERED2, bit [2]   - Write '1' to Enable interrupt for TRIGGERED[2] event\nTRIGGERED3, bit [3]   - Write '1' to Enable interrupt for TRIGGERED[3] event\nTRIGGERED4, bit [4]   - Write '1' to Enable interrupt for TRIGGERED[4] event\nTRIGGERED5, bit [5]   - Write '1' to Enable interrupt for TRIGGERED[5] event\nTRIGGERED6, bit [6]   - Write '1' to Enable interrupt for TRIGGERED[6] event\nTRIGGERED7, bit [7]   - Write '1' to Enable interrupt for TRIGGERED[7] event\nTRIGGERED8, bit [8]   - Write '1' to Enable interrupt for TRIGGERED[8] event\nTRIGGERED9, bit [9]   - Write '1' to Enable interrupt for TRIGGERED[9] event\nTRIGGERED10, bit [10] - Write '1' to Enable interrupt for TRIGGERED[10] event\nTRIGGERED11, bit [11] - Write '1' to Enable interrupt for TRIGGERED[11] event\nTRIGGERED12, bit [12] - Write '1' to Enable interrupt for TRIGGERED[12] event\nTRIGGERED13, bit [13] - Write '1' to Enable interrupt for TRIGGERED[13] event\nTRIGGERED14, bit [14] - Write '1' to Enable interrupt for TRIGGERED[14] event\nTRIGGERED15, bit [15] - Write '1' to Enable interrupt for TRIGGERED[15] event"
    },
    "EGU2.TASKS_TRIGGER<n>": {
      "long_name": "EGU2.TASKS_TRIGGER<n> (at 0x40016000, write-only)",
      "purpose": "Trigger <n> for triggering the corresponding TRIGGERED<n> event"
    },
    "EGU3.EVENTS_TRIGGERED<n>": {
      "long_name": "EGU3.EVENTS_TRIGGERED<n> (at 0x40017100, read-write)",
      "purpose": "Event number <n> generated by triggering the corresponding TRIGGER<n> task"
    },
    "EGU3.INTEN": {
      "long_name": "EGU3.INTEN (at 0x40017300, read-write)",
      "purpose": "Enable or disable interrupt\n\nTRIGGERED0, bit [0]   - Enable or disable interrupt for TRIGGERED[0] event\nTRIGGERED1, bit [1]   - Enable or disable interrupt for TRIGGERED[1] event\nTRIGGERED2, bit [2]   - Enable or disable interrupt for TRIGGERED[2] event\nTRIGGERED3, bit [3]   - Enable or disable interrupt for TRIGGERED[3] event\nTRIGGERED4, bit [4]   - Enable or disable interrupt for TRIGGERED[4] event\nTRIGGERED5, bit [5]   - Enable or disable interrupt for TRIGGERED[5] event\nTRIGGERED6, bit [6]   - Enable or disable interrupt for TRIGGERED[6] event\nTRIGGERED7, bit [7]   - Enable or disable interrupt for TRIGGERED[7] event\nTRIGGERED8, bit [8]   - Enable or disable interrupt for TRIGGERED[8] event\nTRIGGERED9, bit [9]   - Enable or disable interrupt for TRIGGERED[9] event\nTRIGGERED10, bit [10] - Enable or disable interrupt for TRIGGERED[10] event\nTRIGGERED11, bit [11] - Enable or disable interrupt for TRIGGERED[11] event\nTRIGGERED12, bit [12] - Enable or disable interrupt for TRIGGERED[12] event\nTRIGGERED13, bit [13] - Enable or disable interrupt for TRIGGERED[13] event\nTRIGGERED14, bit [14] - Enable or disable interrupt for TRIGGERED[14] event\nTRIGGERED15, bit [15] - Enable or disable interrupt for TRIGGERED[15] event"
    },
    "EGU3.INTENCLR": {
      "long_name": "EGU3.INTENCLR (at 0x40017308, read-write)",
      "purpose": "Disable interrupt\n\nTRIGGERED0, bit [0]   - Write '1' to Disable interrupt for TRIGGERED[0] event\nTRIGGERED1, bit [1]   - Write '1' to Disable interrupt for TRIGGERED[1] event\nTRIGGERED2, bit [2]   - Write '1' to Disable interrupt for TRIGGERED[2] event\nTRIGGERED3, bit [3]   - Write '1' to Disable interrupt for TRIGGERED[3] event\nTRIGGERED4, bit [4]   - Write '1' to Disable interrupt for TRIGGERED[4] event\nTRIGGERED5, bit [5]   - Write '1' to Disable interrupt for TRIGGERED[5] event\nTRIGGERED6, bit [6]   - Write '1' to Disable interrupt for TRIGGERED[6] event\nTRIGGERED7, bit [7]   - Write '1' to Disable interrupt for TRIGGERED[7] event\nTRIGGERED8, bit [8]   - Write '1' to Disable interrupt for TRIGGERED[8] event\nTRIGGERED9, bit [9]   - Write '1' to Disable interrupt for TRIGGERED[9] event\nTRIGGERED10, bit [10] - Write '1' to Disable interrupt for TRIGGERED[10] event\nTRIGGERED11, bit [11] - Write '1' to Disable interrupt for TRIGGERED[11] event\nTRIGGERED12, bit [12] - Write '1' to Disable interrupt for TRIGGERED[12] event\nTRIGGERED13, bit [13] - Write '1' to Disable interrupt for TRIGGERED[13] event\nTRIGGERED14, bit [14] - Write '1' to Disable interrupt for TRIGGERED[14] event\nTRIGGERED15, bit [15] - Write '1' to Disable interrupt for TRIGGERED[15] event"
    },
    "EGU3.INTENSET": {
      "long_name": "EGU3.INTENSET (at 0x40017304, read-write)",
      "purpose": "Enable interrupt\n\nTRIGGERED0, bit [0]   - Write '1' to Enable interrupt for TRIGGERED[0] event\nTRIGGERED1, bit [1]   - Write '1' to Enable interrupt for TRIGGERED[1] event\nTRIGGERED2, bit [2]   - Write '1' to Enable interrupt for TRIGGERED[2] event\nTRIGGERED3, bit [3]   - Write '1' to Enable interrupt for TRIGGERED[3] event\nTRIGGERED4, bit [4]   - Write '1' to Enable interrupt for TRIGGERED[4] event\nTRIGGERED5, bit [5]   - Write '1' to Enable interrupt for TRIGGERED[5] event\nTRIGGERED6, bit [6]   - Write '1' to Enable interrupt for TRIGGERED[6] event\nTRIGGERED7, bit [7]   - Write '1' to Enable interrupt for TRIGGERED[7] event\nTRIGGERED8, bit [8]   - Write '1' to Enable interrupt for TRIGGERED[8] event\nTRIGGERED9, bit [9]   - Write '1' to Enable interrupt for TRIGGERED[9] event\nTRIGGERED10, bit [10] - Write '1' to Enable interrupt for TRIGGERED[10] event\nTRIGGERED11, bit [11] - Write '1' to Enable interrupt for TRIGGERED[11] event\nTRIGGERED12, bit [12] - Write '1' to Enable interrupt for TRIGGERED[12] event\nTRIGGERED13, bit [13] - Write '1' to Enable interrupt for TRIGGERED[13] event\nTRIGGERED14, bit [14] - Write '1' to Enable interrupt for TRIGGERED[14] event\nTRIGGERED15, bit [15] - Write '1' to Enable interrupt for TRIGGERED[15] event"
    },
    "EGU3.TASKS_TRIGGER<n>": {
      "long_name": "EGU3.TASKS_TRIGGER<n> (at 0x40017000, write-only)",
      "purpose": "Trigger <n> for triggering the corresponding TRIGGERED<n> event"
    },
    "EGU4.EVENTS_TRIGGERED<n>": {
      "long_name": "EGU4.EVENTS_TRIGGERED<n> (at 0x40018100, read-write)",
      "purpose": "Event number <n> generated by triggering the corresponding TRIGGER<n> task"
    },
    "EGU4.INTEN": {
      "long_name": "EGU4.INTEN (at 0x40018300, read-write)",
      "purpose": "Enable or disable interrupt\n\nTRIGGERED0, bit [0]   - Enable or disable interrupt for TRIGGERED[0] event\nTRIGGERED1, bit [1]   - Enable or disable interrupt for TRIGGERED[1] event\nTRIGGERED2, bit [2]   - Enable or disable interrupt for TRIGGERED[2] event\nTRIGGERED3, bit [3]   - Enable or disable interrupt for TRIGGERED[3] event\nTRIGGERED4, bit [4]   - Enable or disable interrupt for TRIGGERED[4] event\nTRIGGERED5, bit [5]   - Enable or disable interrupt for TRIGGERED[5] event\nTRIGGERED6, bit [6]   - Enable or disable interrupt for TRIGGERED[6] event\nTRIGGERED7, bit [7]   - Enable or disable interrupt for TRIGGERED[7] event\nTRIGGERED8, bit [8]   - Enable or disable interrupt for TRIGGERED[8] event\nTRIGGERED9, bit [9]   - Enable or disable interrupt for TRIGGERED[9] event\nTRIGGERED10, bit [10] - Enable or disable interrupt for TRIGGERED[10] event\nTRIGGERED11, bit [11] - Enable or disable interrupt for TRIGGERED[11] event\nTRIGGERED12, bit [12] - Enable or disable interrupt for TRIGGERED[12] event\nTRIGGERED13, bit [13] - Enable or disable interrupt for TRIGGERED[13] event\nTRIGGERED14, bit [14] - Enable or disable interrupt for TRIGGERED[14] event\nTRIGGERED15, bit [15] - Enable or disable interrupt for TRIGGERED[15] event"
    },
    "EGU4.INTENCLR": {
      "long_name": "EGU4.INTENCLR (at 0x40018308, read-write)",
      "purpose": "Disable interrupt\n\nTRIGGERED0, bit [0]   - Write '1' to Disable interrupt for TRIGGERED[0] event\nTRIGGERED1, bit [1]   - Write '1' to Disable interrupt for TRIGGERED[1] event\nTRIGGERED2, bit [2]   - Write '1' to Disable interrupt for TRIGGERED[2] event\nTRIGGERED3, bit [3]   - Write '1' to Disable interrupt for TRIGGERED[3] event\nTRIGGERED4, bit [4]   - Write '1' to Disable interrupt for TRIGGERED[4] event\nTRIGGERED5, bit [5]   - Write '1' to Disable interrupt for TRIGGERED[5] event\nTRIGGERED6, bit [6]   - Write '1' to Disable interrupt for TRIGGERED[6] event\nTRIGGERED7, bit [7]   - Write '1' to Disable interrupt for TRIGGERED[7] event\nTRIGGERED8, bit [8]   - Write '1' to Disable interrupt for TRIGGERED[8] event\nTRIGGERED9, bit [9]   - Write '1' to Disable interrupt for TRIGGERED[9] event\nTRIGGERED10, bit [10] - Write '1' to Disable interrupt for TRIGGERED[10] event\nTRIGGERED11, bit [11] - Write '1' to Disable interrupt for TRIGGERED[11] event\nTRIGGERED12, bit [12] - Write '1' to Disable interrupt for TRIGGERED[12] event\nTRIGGERED13, bit [13] - Write '1' to Disable interrupt for TRIGGERED[13] event\nTRIGGERED14, bit [14] - Write '1' to Disable interrupt for TRIGGERED[14] event\nTRIGGERED15, bit [15] - Write '1' to Disable interrupt for TRIGGERED[15] event"
    },
    "EGU4.INTENSET": {
      "long_name": "EGU4.INTENSET (at 0x40018304, read-write)",
      "purpose": "Enable interrupt\n\nTRIGGERED0, bit [0]   - Write '1' to Enable interrupt for TRIGGERED[0] event\nTRIGGERED1, bit [1]   - Write '1' to Enable interrupt for TRIGGERED[1] event\nTRIGGERED2, bit [2]   - Write '1' to Enable interrupt for TRIGGERED[2] event\nTRIGGERED3, bit [3]   - Write '1' to Enable interrupt for TRIGGERED[3] event\nTRIGGERED4, bit [4]   - Write '1' to Enable interrupt for TRIGGERED[4] event\nTRIGGERED5, bit [5]   - Write '1' to Enable interrupt for TRIGGERED[5] event\nTRIGGERED6, bit [6]   - Write '1' to Enable interrupt for TRIGGERED[6] event\nTRIGGERED7, bit [7]   - Write '1' to Enable interrupt for TRIGGERED[7] event\nTRIGGERED8, bit [8]   - Write '1' to Enable interrupt for TRIGGERED[8] event\nTRIGGERED9, bit [9]   - Write '1' to Enable interrupt for TRIGGERED[9] event\nTRIGGERED10, bit [10] - Write '1' to Enable interrupt for TRIGGERED[10] event\nTRIGGERED11, bit [11] - Write '1' to Enable interrupt for TRIGGERED[11] event\nTRIGGERED12, bit [12] - Write '1' to Enable interrupt for TRIGGERED[12] event\nTRIGGERED13, bit [13] - Write '1' to Enable interrupt for TRIGGERED[13] event\nTRIGGERED14, bit [14] - Write '1' to Enable interrupt for TRIGGERED[14] event\nTRIGGERED15, bit [15] - Write '1' to Enable interrupt for TRIGGERED[15] event"
    },
    "EGU4.TASKS_TRIGGER<n>": {
      "long_name": "EGU4.TASKS_TRIGGER<n> (at 0x40018000, write-only)",
      "purpose": "Trigger <n> for triggering the corresponding TRIGGERED<n> event"
    },
    "EGU5.EVENTS_TRIGGERED<n>": {
      "long_name": "EGU5.EVENTS_TRIGGERED<n> (at 0x40019100, read-write)",
      "purpose": "Event number <n> generated by triggering the corresponding TRIGGER<n> task"
    },
    "EGU5.INTEN": {
      "long_name": "EGU5.INTEN (at 0x40019300, read-write)",
      "purpose": "Enable or disable interrupt\n\nTRIGGERED0, bit [0]   - Enable or disable interrupt for TRIGGERED[0] event\nTRIGGERED1, bit [1]   - Enable or disable interrupt for TRIGGERED[1] event\nTRIGGERED2, bit [2]   - Enable or disable interrupt for TRIGGERED[2] event\nTRIGGERED3, bit [3]   - Enable or disable interrupt for TRIGGERED[3] event\nTRIGGERED4, bit [4]   - Enable or disable interrupt for TRIGGERED[4] event\nTRIGGERED5, bit [5]   - Enable or disable interrupt for TRIGGERED[5] event\nTRIGGERED6, bit [6]   - Enable or disable interrupt for TRIGGERED[6] event\nTRIGGERED7, bit [7]   - Enable or disable interrupt for TRIGGERED[7] event\nTRIGGERED8, bit [8]   - Enable or disable interrupt for TRIGGERED[8] event\nTRIGGERED9, bit [9]   - Enable or disable interrupt for TRIGGERED[9] event\nTRIGGERED10, bit [10] - Enable or disable interrupt for TRIGGERED[10] event\nTRIGGERED11, bit [11] - Enable or disable interrupt for TRIGGERED[11] event\nTRIGGERED12, bit [12] - Enable or disable interrupt for TRIGGERED[12] event\nTRIGGERED13, bit [13] - Enable or disable interrupt for TRIGGERED[13] event\nTRIGGERED14, bit [14] - Enable or disable interrupt for TRIGGERED[14] event\nTRIGGERED15, bit [15] - Enable or disable interrupt for TRIGGERED[15] event"
    },
    "EGU5.INTENCLR": {
      "long_name": "EGU5.INTENCLR (at 0x40019308, read-write)",
      "purpose": "Disable interrupt\n\nTRIGGERED0, bit [0]   - Write '1' to Disable interrupt for TRIGGERED[0] event\nTRIGGERED1, bit [1]   - Write '1' to Disable interrupt for TRIGGERED[1] event\nTRIGGERED2, bit [2]   - Write '1' to Disable interrupt for TRIGGERED[2] event\nTRIGGERED3, bit [3]   - Write '1' to Disable interrupt for TRIGGERED[3] event\nTRIGGERED4, bit [4]   - Write '1' to Disable interrupt for TRIGGERED[4] event\nTRIGGERED5, bit [5]   - Write '1' to Disable interrupt for TRIGGERED[5] event\nTRIGGERED6, bit [6]   - Write '1' to Disable interrupt for TRIGGERED[6] event\nTRIGGERED7, bit [7]   - Write '1' to Disable interrupt for TRIGGERED[7] event\nTRIGGERED8, bit [8]   - Write '1' to Disable interrupt for TRIGGERED[8] event\nTRIGGERED9, bit [9]   - Write '1' to Disable interrupt for TRIGGERED[9] event\nTRIGGERED10, bit [10] - Write '1' to Disable interrupt for TRIGGERED[10] event\nTRIGGERED11, bit [11] - Write '1' to Disable interrupt for TRIGGERED[11] event\nTRIGGERED12, bit [12] - Write '1' to Disable interrupt for TRIGGERED[12] event\nTRIGGERED13, bit [13] - Write '1' to Disable interrupt for TRIGGERED[13] event\nTRIGGERED14, bit [14] - Write '1' to Disable interrupt for TRIGGERED[14] event\nTRIGGERED15, bit [15] - Write '1' to Disable interrupt for TRIGGERED[15] event"
    },
    "EGU5.INTENSET": {
      "long_name": "EGU5.INTENSET (at 0x40019304, read-write)",
      "purpose": "Enable interrupt\n\nTRIGGERED0, bit [0]   - Write '1' to Enable interrupt for TRIGGERED[0] event\nTRIGGERED1, bit [1]   - Write '1' to Enable interrupt for TRIGGERED[1] event\nTRIGGERED2, bit [2]   - Write '1' to Enable interrupt for TRIGGERED[2] event\nTRIGGERED3, bit [3]   - Write '1' to Enable interrupt for TRIGGERED[3] event\nTRIGGERED4, bit [4]   - Write '1' to Enable interrupt for TRIGGERED[4] event\nTRIGGERED5, bit [5]   - Write '1' to Enable interrupt for TRIGGERED[5] event\nTRIGGERED6, bit [6]   - Write '1' to Enable interrupt for TRIGGERED[6] event\nTRIGGERED7, bit [7]   - Write '1' to Enable interrupt for TRIGGERED[7] event\nTRIGGERED8, bit [8]   - Write '1' to Enable interrupt for TRIGGERED[8] event\nTRIGGERED9, bit [9]   - Write '1' to Enable interrupt for TRIGGERED[9] event\nTRIGGERED10, bit [10] - Write '1' to Enable interrupt for TRIGGERED[10] event\nTRIGGERED11, bit [11] - Write '1' to Enable interrupt for TRIGGERED[11] event\nTRIGGERED12, bit [12] - Write '1' to Enable interrupt for TRIGGERED[12] event\nTRIGGERED13, bit [13] - Write '1' to Enable interrupt for TRIGGERED[13] event\nTRIGGERED14, bit [14] - Write '1' to Enable interrupt for TRIGGERED[14] event\nTRIGGERED15, bit [15] - Write '1' to Enable interrupt for TRIGGERED[15] event"
    },
    "EGU5.TASKS_TRIGGER<n>": {
      "long_name": "EGU5.TASKS_TRIGGER<n> (at 0x40019000, write-only)",
      "purpose": "Trigger <n> for triggering the corresponding TRIGGERED<n> event"
    },
    "EPSR": {
      "long_name": "Exception program status register (EPSR)",
      "purpose": "ICI/IT HighBits, bits [25:26] - Interruptible-continuable instruction bits (high\n                                bits)\nICI/IT LowBits, bits [10:15]  - Interruptible-continuable instruction bits (low\n                                bits)\nT, bit [24]                   - Thumb state bit"
    },
    "FAULTMASK": {
      "long_name": "Fault mask register (FAULTMASK)",
      "purpose": "FaultMask, bit [0] - Prevent the activation of all exceptions except for NMI"
    },
    "FICR.CODEPAGESIZE": {
      "long_name": "FICR.CODEPAGESIZE (at 0x10000010, read-only)",
      "purpose": "Code memory page size\n\nCODEPAGESIZE, bits [0:31] - Code memory page size"
    },
    "FICR.CODESIZE": {
      "long_name": "FICR.CODESIZE (at 0x10000014, read-only)",
      "purpose": "Code memory size\n\nCODESIZE, bits [0:31] - Code memory size in number of pages"
    },
    "FICR.DEVICEADDR<n>": {
      "long_name": "FICR.DEVICEADDR<n> (at 0x100000a4, read-only)",
      "purpose": "Device address <n>\n\nDEVICEADDR, bits [0:31] - 48 bit device address"
    },
    "FICR.DEVICEADDRTYPE": {
      "long_name": "FICR.DEVICEADDRTYPE (at 0x100000a0, read-only)",
      "purpose": "Device address type\n\nDEVICEADDRTYPE, bit [0] - Device address type"
    },
    "FICR.DEVICEID<n>": {
      "long_name": "FICR.DEVICEID<n> (at 0x10000060, read-only)",
      "purpose": "Device identifier\n\nDEVICEID, bits [0:31] - 64 bit unique device identifier"
    },
    "FICR.ER<n>": {
      "long_name": "FICR.ER<n> (at 0x10000080, read-only)",
      "purpose": "Encryption Root, word <n>\n\nER, bits [0:31] - Encryption Root, word n"
    },
    "FICR.INFO.FLASH": {
      "long_name": "FICR.INFO.FLASH (at 0x10000110, read-only)",
      "purpose": "Flash variant\n\nFLASH, bits [0:31] - Flash variant; 0x80 for K128 (128 kByte FLASH), 0x100 for\n                     K256 (256 kByte FLASH), 0x200 for K512 (512 kByte FLASH),\n                     0xFFFFFFFF for Unspecified (Unspecified)"
    },
    "FICR.INFO.PACKAGE": {
      "long_name": "FICR.INFO.PACKAGE (at 0x10000108, read-only)",
      "purpose": "Package option\n\nPACKAGE, bits [0:31] - Package option; 0x2000 for QF (QFxx - 48-pin QFN), 0x2001\n                       for CH (CHxx - 7x8 WLCSP 56 balls), 0x2002 for CI (CIxx -\n                       7x8 WLCSP 56 balls), 0x2005 for CK (CKxx - 7x8 WLCSP 56\n                       balls with backside coating for light protection),\n                       0xFFFFFFFF for Unspecified (Unspecified)"
    },
    "FICR.INFO.PART": {
      "long_name": "FICR.INFO.PART (at 0x10000100, read-only)",
      "purpose": "Part code\n\nPART, bits [0:31] - Part code; 0x52832 for N52832 (nRF52832), 0xFFFFFFFF for\n                    Unspecified (Unspecified)"
    },
    "FICR.INFO.RAM": {
      "long_name": "FICR.INFO.RAM (at 0x1000010c, read-only)",
      "purpose": "RAM variant\n\nRAM, bits [0:31] - RAM variant; 0x10 for K16 (16 kByte RAM), 0x20 for K32 (32\n                   kByte RAM), 0x40 for K64 (64 kByte RAM), 0xFFFFFFFF for\n                   Unspecified (Unspecified)"
    },
    "FICR.INFO.UNUSED0<n>": {
      "long_name": "FICR.INFO.UNUSED0<n> (at 0x10000114, read-write)",
      "purpose": "Description collection[0]: Unspecified"
    },
    "FICR.INFO.VARIANT": {
      "long_name": "FICR.INFO.VARIANT (at 0x10000104, read-only)",
      "purpose": "Part Variant, Hardware version and Production configuration\n\nVARIANT, bits [0:31] - Part Variant, Hardware version and Production\n                       configuration, encoded as ASCII; 0x41414141 for AAAA\n                       (AAAA), 0x41414142 for AAAB (AAAB), 0x41414241 for AABA\n                       (AABA), 0x41414242 for AABB (AABB), 0x41414230 for AAB0\n                       (AAB0), 0x41414530 for AAE0 (AAE0), 0xFFFFFFFF for\n                       Unspecified (Unspecified)"
    },
    "FICR.IR<n>": {
      "long_name": "FICR.IR<n> (at 0x10000090, read-only)",
      "purpose": "Identity Root, word <n>\n\nIR, bits [0:31] - Identity Root, word n"
    },
    "FICR.NFC.TAGHEADER0": {
      "long_name": "FICR.NFC.TAGHEADER0 (at 0x10000450, read-only)",
      "purpose": "Default header for NFC Tag. Software can read these values to populate\nNFCID1_3RD_LAST, NFCID1_2ND_LAST and NFCID1_LAST.\n\nMFGID, bits [0:7] - Default Manufacturer ID: Nordic Semiconductor ASA has ICM\n                    0x5F\nUD1, bits [8:15]  - Unique identifier byte 1\nUD2, bits [16:23] - Unique identifier byte 2\nUD3, bits [24:31] - Unique identifier byte 3"
    },
    "FICR.NFC.TAGHEADER1": {
      "long_name": "FICR.NFC.TAGHEADER1 (at 0x10000454, read-only)",
      "purpose": "Default header for NFC Tag. Software can read these values to populate\nNFCID1_3RD_LAST, NFCID1_2ND_LAST and NFCID1_LAST.\n\nUD4, bits [0:7]   - Unique identifier byte 4\nUD5, bits [8:15]  - Unique identifier byte 5\nUD6, bits [16:23] - Unique identifier byte 6\nUD7, bits [24:31] - Unique identifier byte 7"
    },
    "FICR.NFC.TAGHEADER2": {
      "long_name": "FICR.NFC.TAGHEADER2 (at 0x10000458, read-only)",
      "purpose": "Default header for NFC Tag. Software can read these values to populate\nNFCID1_3RD_LAST, NFCID1_2ND_LAST and NFCID1_LAST.\n\nUD8, bits [0:7]    - Unique identifier byte 8\nUD9, bits [8:15]   - Unique identifier byte 9\nUD10, bits [16:23] - Unique identifier byte 10\nUD11, bits [24:31] - Unique identifier byte 11"
    },
    "FICR.NFC.TAGHEADER3": {
      "long_name": "FICR.NFC.TAGHEADER3 (at 0x1000045c, read-only)",
      "purpose": "Default header for NFC Tag. Software can read these values to populate\nNFCID1_3RD_LAST, NFCID1_2ND_LAST and NFCID1_LAST.\n\nUD12, bits [0:7]   - Unique identifier byte 12\nUD13, bits [8:15]  - Unique identifier byte 13\nUD14, bits [16:23] - Unique identifier byte 14\nUD15, bits [24:31] - Unique identifier byte 15"
    },
    "FICR.TEMP.A0": {
      "long_name": "FICR.TEMP.A0 (at 0x10000404, read-only)",
      "purpose": "Slope definition A0.\n\nA, bits [0:11] - A (slope definition) register."
    },
    "FICR.TEMP.A1": {
      "long_name": "FICR.TEMP.A1 (at 0x10000408, read-only)",
      "purpose": "Slope definition A1.\n\nA, bits [0:11] - A (slope definition) register."
    },
    "FICR.TEMP.A2": {
      "long_name": "FICR.TEMP.A2 (at 0x1000040c, read-only)",
      "purpose": "Slope definition A2.\n\nA, bits [0:11] - A (slope definition) register."
    },
    "FICR.TEMP.A3": {
      "long_name": "FICR.TEMP.A3 (at 0x10000410, read-only)",
      "purpose": "Slope definition A3.\n\nA, bits [0:11] - A (slope definition) register."
    },
    "FICR.TEMP.A4": {
      "long_name": "FICR.TEMP.A4 (at 0x10000414, read-only)",
      "purpose": "Slope definition A4.\n\nA, bits [0:11] - A (slope definition) register."
    },
    "FICR.TEMP.A5": {
      "long_name": "FICR.TEMP.A5 (at 0x10000418, read-only)",
      "purpose": "Slope definition A5.\n\nA, bits [0:11] - A (slope definition) register."
    },
    "FICR.TEMP.B0": {
      "long_name": "FICR.TEMP.B0 (at 0x1000041c, read-only)",
      "purpose": "y-intercept B0.\n\nB, bits [0:13] - B (y-intercept)"
    },
    "FICR.TEMP.B1": {
      "long_name": "FICR.TEMP.B1 (at 0x10000420, read-only)",
      "purpose": "y-intercept B1.\n\nB, bits [0:13] - B (y-intercept)"
    },
    "FICR.TEMP.B2": {
      "long_name": "FICR.TEMP.B2 (at 0x10000424, read-only)",
      "purpose": "y-intercept B2.\n\nB, bits [0:13] - B (y-intercept)"
    },
    "FICR.TEMP.B3": {
      "long_name": "FICR.TEMP.B3 (at 0x10000428, read-only)",
      "purpose": "y-intercept B3.\n\nB, bits [0:13] - B (y-intercept)"
    },
    "FICR.TEMP.B4": {
      "long_name": "FICR.TEMP.B4 (at 0x1000042c, read-only)",
      "purpose": "y-intercept B4.\n\nB, bits [0:13] - B (y-intercept)"
    },
    "FICR.TEMP.B5": {
      "long_name": "FICR.TEMP.B5 (at 0x10000430, read-only)",
      "purpose": "y-intercept B5.\n\nB, bits [0:13] - B (y-intercept)"
    },
    "FICR.TEMP.T0": {
      "long_name": "FICR.TEMP.T0 (at 0x10000434, read-only)",
      "purpose": "Segment end T0.\n\nT, bits [0:7] - T (segment end)register."
    },
    "FICR.TEMP.T1": {
      "long_name": "FICR.TEMP.T1 (at 0x10000438, read-only)",
      "purpose": "Segment end T1.\n\nT, bits [0:7] - T (segment end)register."
    },
    "FICR.TEMP.T2": {
      "long_name": "FICR.TEMP.T2 (at 0x1000043c, read-only)",
      "purpose": "Segment end T2.\n\nT, bits [0:7] - T (segment end)register."
    },
    "FICR.TEMP.T3": {
      "long_name": "FICR.TEMP.T3 (at 0x10000440, read-only)",
      "purpose": "Segment end T3.\n\nT, bits [0:7] - T (segment end)register."
    },
    "FICR.TEMP.T4": {
      "long_name": "FICR.TEMP.T4 (at 0x10000444, read-only)",
      "purpose": "Segment end T4.\n\nT, bits [0:7] - T (segment end)register."
    },
    "FP.FPCAR": {
      "long_name": "Floating Point Context Address Register (at 0xe000ef38, read-write)",
      "purpose": "Holds the location of the unpopulated floating-point register space allocated on\nan exception stack frame"
    },
    "FP.FPCCR": {
      "long_name": "Floating Point Context Control Register (at 0xe000ef34, read-write)",
      "purpose": "Holds control data for the Floating Point Unit\n\nASPEN, bit [31] - When this bit is set to 1, execution of a floating-point\n                  instruction sets the CONTROL\nLSPEN, bit [30] - Enables lazy context save of FP state\nMONRDY, bit [8] - Indicates whether the software executing when the processor\n                  allocated the FP stack frame was able to set the DebugMonitor\n                  exception to pending\nBFRDY, bit [6]  - Indicates whether the software executing when the processor\n                  allocated the FP stack frame was able to set the BusFault\n                  exception to pending\nMMRDY, bit [5]  - Indicates whether the software executing when the processor\n                  allocated the FP stack frame was able to set the MemManage\n                  exception to pending\nHFRDY, bit [4]  - Indicates whether the software executing when the processor\n                  allocated the FP stack frame was able to set the HardFault\n                  exception to pending\nTHREAD, bit [3] - Indicates the processor mode when it allocated the FP stack\n                  frame\nUSER, bit [1]   - Indicates the privilege level of the software executing when\n                  the processor allocated the FP stack frame\nLSPACT, bit [0] - Indicates whether Lazy preservation of the FP state is active"
    },
    "FP.FPDSCR": {
      "long_name": "Floating Point Default Status Control Register (at 0xe000ef3c, read-write)",
      "purpose": "Holds the default values for the floating-point status control data that the\nprocessor assigns to the FPSCR when it creates a new floating-point context\n\nAHP, bit [26]       - Default value for FPSCR.AHP\nDN, bit [25]        - Default value for FPSCR.DN\nFZ, bit [24]        - Default value for FPSCR.FZ\nRMode, bits [23:22] - Default value for FPSCR.RMode"
    },
    "FP.MVFR0": {
      "long_name": "Media and FP Feature Register 0 (at 0xe000ef40, read-only)",
      "purpose": "Describes the features provided by the Floating-point extension\n\nFP rounding modes, bits [31:28]     - Indicates the rounding modes supported by\n                                      the FP floating-point hardware; 1 for None\n                                      (All rounding modes supported)\nShort vectors, bits [27:24]         - Indicates the hardware support for FP\n                                      short vectors; 0 for None (Not supported\n                                      in ARMv7-M)\nSquare root, bits [23:20]           - Indicates the hardware support for FP\n                                      square root operations; 1 for None\n                                      (Supported)\nDivide, bits [19:16]                - Indicates the hardware support for FP\n                                      divide operations; 1 for None (Supported)\nFP exception trapping, bits [15:12] - Indicates whether the FP hardware\n                                      implementation supports exception\n                                      trapping; 0 for None (Not supported in\n                                      ARMv7-M)\nDouble-precision, bits [11:8]       - Indicates the hardware support for FP\n                                      double-precision operations; 0 for None\n                                      (Not supported), 2 for None (Supported)\nSingle-precision, bits [7:4]        - Indicates the hardware support for FP\n                                      single-precision operations; 2 for None\n                                      (Supported)\nA_SIMD registers, bits [3:0]        - Indicates the size of the FP register\n                                      bank; 1 for None (Supported, 16 x 64-bit\n                                      registers)"
    },
    "FP.MVFR1": {
      "long_name": "Media and FP Feature Register 1 (at 0xe000ef44, read-only)",
      "purpose": "Describes the features provided by the Floating-point extension\n\nFP fused MAC, bits [31:28] - Indicates whether the FP supports fused multiply\n                             accumulate operations; 1 for None (Supported)\nFP HPFP, bits [27:24]      - Floating Point Half-Precision and double-precision;\n                             1 for None (Supports conversion between half-\n                             precision and single precision), 2 for None (As for\n                             0b0001, and also supports conversion between half-\n                             precision and double-precision)\nD_NaN mode, bits [7:4]     - Indicates whether the FP hardware implementation\n                             supports only the Default NaN mode; 1 for None\n                             (Hardware supports propagation of NaN values)\nFtZ mode, bits [3:0]       - Indicates whether the FP hardware implementation\n                             supports only the Flush-to-Zero mode of operation;\n                             1 for None (Hardware supports full denormalized\n                             number arithmetic)"
    },
    "FP.MVFR2": {
      "long_name": "Media and FP Feature Register 2 (at 0xe000ef48, read-only)",
      "purpose": "Describes the features provided by the floating-point extension\n\nVFP_Misc, bits [7:4] - Indicates the hardware support for FP miscellaneous\n                       features; 0 for None (No support for miscellaneous\n                       features), 4 for None (Support for floating-point\n                       selection, floating-point conversion to integer with\n                       direct rounding modes, floating-point round to i)"
    },
    "FPSCR": {
      "long_name": "Floating point status and control register (FPSCR)",
      "purpose": "IOC, bit [0]         - Invalid operation cumulative flag\nDZC, bit [1]         - Division by zero cumulative flag\nOFC, bit [2]         - Overflow cumulative flag\nUFC, bit [3]         - Underflow cumulative flag\nIXC, bit [4]         - Inexact cumulative flag\nIDC, bit [7]         - Input subnormal cumulative flag\nIOE, bit [8]         - Invalid operation exception enable bit\nDZE, bit [9]         - Division by Zero exception enable bit\nOFE, bit [10]        - Overflow exception enable bit\nUFE, bit [11]        - Underflow exception enable bit\nIXE, bit [12]        - Inexact exception enable bit\nIDE, bit [13]        - Input Subnormal exception enable bit\nIDE, bit [13]        - Input Subnormal exception enable bit\nLen, bits [16:18]    - Vector length\nStride, bits [20:21] - Stride control\nR-Mode, bits [22:23] - Rounding mode control\nFZ, bit [24]         - Flush-to-zero mode enable bit\nDN, bit [25]         - Default NaN mode enable bit\nQC, bit [27]         - Saturation cumulative flag\nV, bit [28]          - Set if comparison produces an unordered result\nC, bit [29]          - Set if comparison produces an equal, greater than, or\n                       unordered result\nZ, bit [30]          - Set if comparison produces an equal result"
    },
    "FPU.UNUSED": {
      "long_name": "FPU.UNUSED (at 0x40026000, read-only)",
      "purpose": "Unused."
    },
    "GPIOTE.CONFIG<n>": {
      "long_name": "GPIOTE.CONFIG<n> (at 0x40006510, read-write)",
      "purpose": "Configuration for OUT[n], SET[n] and CLR[n] tasks and IN[n] event\n\nMODE, bits [0:1]       - Mode; 0 for Disabled (Disabled. Pin specified by PSEL\n                         will not be acquired by the GPIOTE module.), 1 for\n                         Event (Event mode), 3 for Task (Task mode)\nPSEL, bits [8:12]      - GPIO number associated with SET[n], CLR[n] and OUT[n]\n                         tasks and IN[n] event\nPOLARITY, bits [16:17] - When In task mode: Operation to be performed on output\n                         when OUT[n] task is triggered. When In event mode:\n                         Operation on input that shall trigger IN[n] event; 0\n                         for None (Task mode: No effect on pin from OUT[n] task.\n                         Event mode: no IN[n] event generated on pin activity.),\n                         1 for LoToHi (Task mode: Set pin from OUT[n] task.\n                         Event mode: Generate IN[n] event when rising edge on\n                         pin.), 2 for HiToLo (Task mode: Clear pin from OUT[n]\n                         task. Event mode: Generate IN[n] event when falling\n                         edge on pin.), 3 for Toggle (Task mode: Toggle pin from\n                         OUT[n]. Event mode: Generate IN[n] when any change on\n                         pin.)\nOUTINIT, bit [20]      - When in task mode: Initial value of the output when the\n                         GPIOTE channel is configured. When in event mode: No\n                         effect."
    },
    "GPIOTE.EVENTS_IN<n>": {
      "long_name": "GPIOTE.EVENTS_IN<n> (at 0x40006100, read-write)",
      "purpose": "Event generated from pin specified in CONFIG<n>.PSEL"
    },
    "GPIOTE.EVENTS_PORT": {
      "long_name": "GPIOTE.EVENTS_PORT (at 0x4000617c, read-write)",
      "purpose": "Event generated from multiple input GPIO pins with SENSE mechanism enabled"
    },
    "GPIOTE.INTENCLR": {
      "long_name": "GPIOTE.INTENCLR (at 0x40006308, read-write)",
      "purpose": "Disable interrupt\n\nIN0, bit [0]   - Write '1' to Disable interrupt for IN[0] event\nIN1, bit [1]   - Write '1' to Disable interrupt for IN[1] event\nIN2, bit [2]   - Write '1' to Disable interrupt for IN[2] event\nIN3, bit [3]   - Write '1' to Disable interrupt for IN[3] event\nIN4, bit [4]   - Write '1' to Disable interrupt for IN[4] event\nIN5, bit [5]   - Write '1' to Disable interrupt for IN[5] event\nIN6, bit [6]   - Write '1' to Disable interrupt for IN[6] event\nIN7, bit [7]   - Write '1' to Disable interrupt for IN[7] event\nPORT, bit [31] - Write '1' to Disable interrupt for PORT event"
    },
    "GPIOTE.INTENSET": {
      "long_name": "GPIOTE.INTENSET (at 0x40006304, read-write)",
      "purpose": "Enable interrupt\n\nIN0, bit [0]   - Write '1' to Enable interrupt for IN[0] event\nIN1, bit [1]   - Write '1' to Enable interrupt for IN[1] event\nIN2, bit [2]   - Write '1' to Enable interrupt for IN[2] event\nIN3, bit [3]   - Write '1' to Enable interrupt for IN[3] event\nIN4, bit [4]   - Write '1' to Enable interrupt for IN[4] event\nIN5, bit [5]   - Write '1' to Enable interrupt for IN[5] event\nIN6, bit [6]   - Write '1' to Enable interrupt for IN[6] event\nIN7, bit [7]   - Write '1' to Enable interrupt for IN[7] event\nPORT, bit [31] - Write '1' to Enable interrupt for PORT event"
    },
    "GPIOTE.TASKS_CLR<n>": {
      "long_name": "GPIOTE.TASKS_CLR<n> (at 0x40006060, write-only)",
      "purpose": "Task for writing to pin specified in CONFIG<n>.PSEL. Action on pin is to set it\nlow."
    },
    "GPIOTE.TASKS_OUT<n>": {
      "long_name": "GPIOTE.TASKS_OUT<n> (at 0x40006000, write-only)",
      "purpose": "Task for writing to pin specified in CONFIG<n>.PSEL. Action on pin is configured\nin CONFIG<n>.POLARITY."
    },
    "GPIOTE.TASKS_SET<n>": {
      "long_name": "GPIOTE.TASKS_SET<n> (at 0x40006030, write-only)",
      "purpose": "Task for writing to pin specified in CONFIG<n>.PSEL. Action on pin is to set it\nhigh."
    },
    "I2S.CONFIG.ALIGN": {
      "long_name": "I2S.CONFIG.ALIGN (at 0x40025520, read-write)",
      "purpose": "Alignment of sample within a frame.\n\nALIGN, bit [0] - Alignment of sample within a frame."
    },
    "I2S.CONFIG.CHANNELS": {
      "long_name": "I2S.CONFIG.CHANNELS (at 0x40025528, read-write)",
      "purpose": "Enable channels.\n\nCHANNELS, bits [0:1] - Enable channels; 0 for Stereo (Stereo.), 1 for Left (Left\n                       only.), 2 for Right (Right only.)"
    },
    "I2S.CONFIG.FORMAT": {
      "long_name": "I2S.CONFIG.FORMAT (at 0x40025524, read-write)",
      "purpose": "Frame format.\n\nFORMAT, bit [0] - Frame format."
    },
    "I2S.CONFIG.MCKEN": {
      "long_name": "I2S.CONFIG.MCKEN (at 0x40025510, read-write)",
      "purpose": "Master clock generator enable.\n\nMCKEN, bit [0] - Master clock generator enable."
    },
    "I2S.CONFIG.MCKFREQ": {
      "long_name": "I2S.CONFIG.MCKFREQ (at 0x40025514, read-write)",
      "purpose": "Master clock generator frequency.\n\nMCKFREQ, bits [0:31] - Master clock generator frequency; 0x80000000 for 32MDIV2\n                       (32 MHz / 2 = 16.0 MHz), 0x50000000 for 32MDIV3 (32 MHz /\n                       3 = 10.6666667 MHz), 0x40000000 for 32MDIV4 (32 MHz / 4 =\n                       8.0 MHz), 0x30000000 for 32MDIV5 (32 MHz / 5 = 6.4 MHz),\n                       0x28000000 for 32MDIV6 (32 MHz / 6 = 5.3333333 MHz),\n                       0x20000000 for 32MDIV8 (32 MHz / 8 = 4.0 MHz), 0x18000000\n                       for 32MDIV10 (32 MHz / 10 = 3.2 MHz), 0x16000000 for\n                       32MDIV11 (32 MHz / 11 = 2.9090909 MHz), 0x11000000 for\n                       32MDIV15 (32 MHz / 15 = 2.1333333 MHz), 0x10000000 for\n                       32MDIV16 (32 MHz / 16 = 2.0 MHz), 0x0C000000 for 32MDIV21\n                       (32 MHz / 21 = 1.5238095), 0x0B000000 for 32MDIV23 (32\n                       MHz / 23 = 1.3913043 MHz), 0x08800000 for 32MDIV30 (32\n                       MHz / 30 = 1.0666667 MHz), 0x08400000 for 32MDIV31 (32\n                       MHz / 31 = 1.0322581 MHz), 0x08000000 for 32MDIV32 (32\n                       MHz / 32 = 1.0 MHz), 0x06000000 for 32MDIV42 (32 MHz / 42\n                       = 0.7619048 MHz), 0x04100000 for 32MDIV63 (32 MHz / 63 =\n                       0.5079365 MHz), 0x020C0000 for 32MDIV125 (32 MHz / 125 =\n                       0.256 MHz)"
    },
    "I2S.CONFIG.MODE": {
      "long_name": "I2S.CONFIG.MODE (at 0x40025504, read-write)",
      "purpose": "I2S mode.\n\nMODE, bit [0] - I2S mode."
    },
    "I2S.CONFIG.RATIO": {
      "long_name": "I2S.CONFIG.RATIO (at 0x40025518, read-write)",
      "purpose": "MCK / LRCK ratio.\n\nRATIO, bits [0:3] - MCK / LRCK ratio; 0 for 32X (LRCK = MCK / 32), 1 for 48X\n                    (LRCK = MCK / 48), 2 for 64X (LRCK = MCK / 64), 3 for 96X\n                    (LRCK = MCK / 96), 4 for 128X (LRCK = MCK / 128), 5 for 192X\n                    (LRCK = MCK / 192), 6 for 256X (LRCK = MCK / 256), 7 for\n                    384X (LRCK = MCK / 384), 8 for 512X (LRCK = MCK / 512)"
    },
    "I2S.CONFIG.RXEN": {
      "long_name": "I2S.CONFIG.RXEN (at 0x40025508, read-write)",
      "purpose": "Reception (RX) enable.\n\nRXEN, bit [0] - Reception (RX) enable."
    },
    "I2S.CONFIG.SWIDTH": {
      "long_name": "I2S.CONFIG.SWIDTH (at 0x4002551c, read-write)",
      "purpose": "Sample width.\n\nSWIDTH, bits [0:1] - Sample width; 0 for 8Bit (8 bit.), 1 for 16Bit (16 bit.), 2\n                     for 24Bit (24 bit.)"
    },
    "I2S.CONFIG.TXEN": {
      "long_name": "I2S.CONFIG.TXEN (at 0x4002550c, read-write)",
      "purpose": "Transmission (TX) enable.\n\nTXEN, bit [0] - Transmission (TX) enable."
    },
    "I2S.ENABLE": {
      "long_name": "I2S.ENABLE (at 0x40025500, read-write)",
      "purpose": "Enable I2S module.\n\nENABLE, bit [0] - Enable I2S module."
    },
    "I2S.EVENTS_RXPTRUPD": {
      "long_name": "I2S.EVENTS_RXPTRUPD (at 0x40025104, read-write)",
      "purpose": "The RXD.PTR register has been copied to internal double-buffers. When the I2S\nmodule is started and RX is enabled, this event will be generated for every\nRXTXD.MAXCNT words that are received on the SDIN pin."
    },
    "I2S.EVENTS_STOPPED": {
      "long_name": "I2S.EVENTS_STOPPED (at 0x40025108, read-write)",
      "purpose": "I2S transfer stopped."
    },
    "I2S.EVENTS_TXPTRUPD": {
      "long_name": "I2S.EVENTS_TXPTRUPD (at 0x40025114, read-write)",
      "purpose": "The TDX.PTR register has been copied to internal double-buffers. When the I2S\nmodule is started and TX is enabled, this event will be generated for every\nRXTXD.MAXCNT words that are sent on the SDOUT pin."
    },
    "I2S.INTEN": {
      "long_name": "I2S.INTEN (at 0x40025300, read-write)",
      "purpose": "Enable or disable interrupt\n\nRXPTRUPD, bit [1] - Enable or disable interrupt for RXPTRUPD event\nSTOPPED, bit [2]  - Enable or disable interrupt for STOPPED event\nTXPTRUPD, bit [5] - Enable or disable interrupt for TXPTRUPD event"
    },
    "I2S.INTENCLR": {
      "long_name": "I2S.INTENCLR (at 0x40025308, read-write)",
      "purpose": "Disable interrupt\n\nRXPTRUPD, bit [1] - Write '1' to Disable interrupt for RXPTRUPD event\nSTOPPED, bit [2]  - Write '1' to Disable interrupt for STOPPED event\nTXPTRUPD, bit [5] - Write '1' to Disable interrupt for TXPTRUPD event"
    },
    "I2S.INTENSET": {
      "long_name": "I2S.INTENSET (at 0x40025304, read-write)",
      "purpose": "Enable interrupt\n\nRXPTRUPD, bit [1] - Write '1' to Enable interrupt for RXPTRUPD event\nSTOPPED, bit [2]  - Write '1' to Enable interrupt for STOPPED event\nTXPTRUPD, bit [5] - Write '1' to Enable interrupt for TXPTRUPD event"
    },
    "I2S.PSEL.LRCK": {
      "long_name": "I2S.PSEL.LRCK (at 0x40025568, read-write)",
      "purpose": "Pin select for LRCK signal.\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "I2S.PSEL.MCK": {
      "long_name": "I2S.PSEL.MCK (at 0x40025560, read-write)",
      "purpose": "Pin select for MCK signal.\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "I2S.PSEL.SCK": {
      "long_name": "I2S.PSEL.SCK (at 0x40025564, read-write)",
      "purpose": "Pin select for SCK signal.\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "I2S.PSEL.SDIN": {
      "long_name": "I2S.PSEL.SDIN (at 0x4002556c, read-write)",
      "purpose": "Pin select for SDIN signal.\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "I2S.PSEL.SDOUT": {
      "long_name": "I2S.PSEL.SDOUT (at 0x40025570, read-write)",
      "purpose": "Pin select for SDOUT signal.\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "I2S.RXD.PTR": {
      "long_name": "I2S.RXD.PTR (at 0x40025538, read-write)",
      "purpose": "Receive buffer RAM start address.\n\nPTR, bits [0:31] - Receive buffer Data RAM start address. When receiving, words\n                   containing samples will be written to this address. This\n                   address is a word aligned Data RAM address."
    },
    "I2S.RXTXD.MAXCNT": {
      "long_name": "I2S.RXTXD.MAXCNT (at 0x40025550, read-write)",
      "purpose": "Size of RXD and TXD buffers.\n\nMAXCNT, bits [0:13] - Size of RXD and TXD buffers in number of 32 bit words."
    },
    "I2S.TASKS_START": {
      "long_name": "I2S.TASKS_START (at 0x40025000, write-only)",
      "purpose": "Starts continuous I2S transfer. Also starts MCK generator when this is enabled."
    },
    "I2S.TASKS_STOP": {
      "long_name": "I2S.TASKS_STOP (at 0x40025004, write-only)",
      "purpose": "Stops I2S transfer. Also stops MCK generator. Triggering this task will cause\nthe {event:STOPPED} event to be generated."
    },
    "I2S.TXD.PTR": {
      "long_name": "I2S.TXD.PTR (at 0x40025540, read-write)",
      "purpose": "Transmit buffer RAM start address.\n\nPTR, bits [0:31] - Transmit buffer Data RAM start address. When transmitting,\n                   words containing samples will be fetched from this address.\n                   This address is a word aligned Data RAM address."
    },
    "ICB.ACTLR": {
      "long_name": "Auxiliary Control Register (at 0xe000e008, read-write)",
      "purpose": "Provides IMPLEMENTATION DEFINED configuration and control options"
    },
    "ICB.ICTR": {
      "long_name": "Interrupt Controller Type Register (at 0xe000e004, read-only)",
      "purpose": "Provides information about the interrupt controller\n\nINTLINESNUM_%s, bits [3:0] - The total number of interrupt lines supported by an\n                             implementation, defined in groups of 32"
    },
    "IPSR": {
      "long_name": "Interrupt program status register (IPSR)",
      "purpose": "ISR Number, bits [0:8] - Interrupt service routine number"
    },
    "ITM.ITM_STIM_<n>": {
      "long_name": "Stimulus Port Register <n> (at 0xe0000000, read-write)",
      "purpose": "Provides the interface for generating instrumentation messages\n\nSTIMULUS, bits [31:0] - Data write to the stimulus port FIFO, for forwarding as\n                        a software event packet\nFIFOREADY, bit [0]    - Indicates whether the stimulus port FIFO can accept data"
    },
    "ITM.ITM_TCR": {
      "long_name": "Trace Control Register (at 0xe0000e80, read-write)",
      "purpose": "Configures and controls transfers through the ITM interface\n\nBUSY, bit [23]           - Indicates whether the ITM is currently processing\n                           events\nTraceBusID, bits [22:16] - Identifier for multi-source trace stream formatting\nGTSFREQ, bits [11:10]    - Global timestamp frequency; 0 for None (Disable\n                           generation of global timestamps), 1 for None\n                           (Generate timestamp request whenever the ITM detects\n                           a change in global timestamp counter bits[47:7]), 10\n                           for None (Generate timestamp request whenever the ITM\n                           detects a change in global timestamp counter\n                           bits[47:13]), 11 for None (Generate a timestamp after\n                           every packet, if the output FIFO is empty)\nTSPrescale, bits [9:8]   - Local timestamp prescaler, used with the trace packet\n                           reference clock; 0 for None (No prescaling), 1 for\n                           None (Divide by 4), 10 for None (Divide by 16), 11\n                           for None (Divide by 64)\nSWOENA, bit [4]          - Enables asynchronous clocking of the timestamp\n                           counter\nTXENA, bit [3]           - Enables forwarding of hardware event packet from the\n                           DWT unit to the ITM for output to the TPIU\nSYNCENA, bit [2]         - Enables Synchronization packet transmission for a\n                           synchronous TPIU\nTSENA, bit [1]           - Enables Local timestamp generation\nITMENA, bit [0]          - Enables the ITM"
    },
    "ITM.ITM_TER_<n>": {
      "long_name": "Trace Enable Register <n> (at 0xe0000e00, read-write)",
      "purpose": "Provide an individual enable bit for each ITM_STIM register\n\nSTIMENA, bits [31:0] - For bit STIMENA[n], in register ITM_TERx"
    },
    "ITM.ITM_TPR": {
      "long_name": "Trace Privilege Register (at 0xe0000e40, read-write)",
      "purpose": "Controls which stimulus ports can be accessed by unprivileged code\n\nPRIVMASK, bits [31:0] - Bit mask to enable unprivileged access to ITM stimulus\n                        ports"
    },
    "LPCOMP.ANADETECT": {
      "long_name": "LPCOMP.ANADETECT (at 0x40013520, read-write)",
      "purpose": "Analog detect configuration\n\nANADETECT, bits [0:1] - Analog detect configuration; 0 for Cross (Generate\n                        ANADETECT on crossing, both upward crossing and downward\n                        crossing), 1 for Up (Generate ANADETECT on upward\n                        crossing only), 2 for Down (Generate ANADETECT on\n                        downward crossing only)"
    },
    "LPCOMP.ENABLE": {
      "long_name": "LPCOMP.ENABLE (at 0x40013500, read-write)",
      "purpose": "Enable LPCOMP\n\nENABLE, bits [0:1] - Enable or disable LPCOMP"
    },
    "LPCOMP.EVENTS_CROSS": {
      "long_name": "LPCOMP.EVENTS_CROSS (at 0x4001310c, read-write)",
      "purpose": "Downward or upward crossing"
    },
    "LPCOMP.EVENTS_DOWN": {
      "long_name": "LPCOMP.EVENTS_DOWN (at 0x40013104, read-write)",
      "purpose": "Downward crossing"
    },
    "LPCOMP.EVENTS_READY": {
      "long_name": "LPCOMP.EVENTS_READY (at 0x40013100, read-write)",
      "purpose": "LPCOMP is ready and output is valid"
    },
    "LPCOMP.EVENTS_UP": {
      "long_name": "LPCOMP.EVENTS_UP (at 0x40013108, read-write)",
      "purpose": "Upward crossing"
    },
    "LPCOMP.EXTREFSEL": {
      "long_name": "LPCOMP.EXTREFSEL (at 0x4001350c, read-write)",
      "purpose": "External reference select\n\nEXTREFSEL, bit [0] - External analog reference select"
    },
    "LPCOMP.HYST": {
      "long_name": "LPCOMP.HYST (at 0x40013538, read-write)",
      "purpose": "Comparator hysteresis enable\n\nHYST, bit [0] - Comparator hysteresis enable"
    },
    "LPCOMP.INTENCLR": {
      "long_name": "LPCOMP.INTENCLR (at 0x40013308, read-write)",
      "purpose": "Disable interrupt\n\nREADY, bit [0] - Write '1' to Disable interrupt for READY event\nDOWN, bit [1]  - Write '1' to Disable interrupt for DOWN event\nUP, bit [2]    - Write '1' to Disable interrupt for UP event\nCROSS, bit [3] - Write '1' to Disable interrupt for CROSS event"
    },
    "LPCOMP.INTENSET": {
      "long_name": "LPCOMP.INTENSET (at 0x40013304, read-write)",
      "purpose": "Enable interrupt\n\nREADY, bit [0] - Write '1' to Enable interrupt for READY event\nDOWN, bit [1]  - Write '1' to Enable interrupt for DOWN event\nUP, bit [2]    - Write '1' to Enable interrupt for UP event\nCROSS, bit [3] - Write '1' to Enable interrupt for CROSS event"
    },
    "LPCOMP.PSEL": {
      "long_name": "LPCOMP.PSEL (at 0x40013504, read-write)",
      "purpose": "Input pin select\n\nPSEL, bits [0:2] - Analog pin select; 0 for AnalogInput0 (AIN0 selected as\n                   analog input), 1 for AnalogInput1 (AIN1 selected as analog\n                   input), 2 for AnalogInput2 (AIN2 selected as analog input), 3\n                   for AnalogInput3 (AIN3 selected as analog input), 4 for\n                   AnalogInput4 (AIN4 selected as analog input), 5 for\n                   AnalogInput5 (AIN5 selected as analog input), 6 for\n                   AnalogInput6 (AIN6 selected as analog input), 7 for\n                   AnalogInput7 (AIN7 selected as analog input)"
    },
    "LPCOMP.REFSEL": {
      "long_name": "LPCOMP.REFSEL (at 0x40013508, read-write)",
      "purpose": "Reference select\n\nREFSEL, bits [0:3] - Reference select; 0 for Ref1_8Vdd (VDD * 1/8 selected as\n                     reference), 1 for Ref2_8Vdd (VDD * 2/8 selected as\n                     reference), 2 for Ref3_8Vdd (VDD * 3/8 selected as\n                     reference), 3 for Ref4_8Vdd (VDD * 4/8 selected as\n                     reference), 4 for Ref5_8Vdd (VDD * 5/8 selected as\n                     reference), 5 for Ref6_8Vdd (VDD * 6/8 selected as\n                     reference), 6 for Ref7_8Vdd (VDD * 7/8 selected as\n                     reference), 7 for ARef (External analog reference\n                     selected), 8 for Ref1_16Vdd (VDD * 1/16 selected as\n                     reference), 9 for Ref3_16Vdd (VDD * 3/16 selected as\n                     reference), 10 for Ref5_16Vdd (VDD * 5/16 selected as\n                     reference), 11 for Ref7_16Vdd (VDD * 7/16 selected as\n                     reference), 12 for Ref9_16Vdd (VDD * 9/16 selected as\n                     reference), 13 for Ref11_16Vdd (VDD * 11/16 selected as\n                     reference), 14 for Ref13_16Vdd (VDD * 13/16 selected as\n                     reference), 15 for Ref15_16Vdd (VDD * 15/16 selected as\n                     reference)"
    },
    "LPCOMP.RESULT": {
      "long_name": "LPCOMP.RESULT (at 0x40013400, read-only)",
      "purpose": "Compare result\n\nRESULT, bit [0] - Result of last compare. Decision point SAMPLE task."
    },
    "LPCOMP.SHORTS": {
      "long_name": "LPCOMP.SHORTS (at 0x40013200, read-write)",
      "purpose": "Shortcut register\n\nREADY_SAMPLE, bit [0] - Shortcut between READY event and SAMPLE task\nREADY_STOP, bit [1]   - Shortcut between READY event and STOP task\nDOWN_STOP, bit [2]    - Shortcut between DOWN event and STOP task\nUP_STOP, bit [3]      - Shortcut between UP event and STOP task\nCROSS_STOP, bit [4]   - Shortcut between CROSS event and STOP task"
    },
    "LPCOMP.TASKS_SAMPLE": {
      "long_name": "LPCOMP.TASKS_SAMPLE (at 0x40013008, write-only)",
      "purpose": "Sample comparator value"
    },
    "LPCOMP.TASKS_START": {
      "long_name": "LPCOMP.TASKS_START (at 0x40013000, write-only)",
      "purpose": "Start comparator"
    },
    "LPCOMP.TASKS_STOP": {
      "long_name": "LPCOMP.TASKS_STOP (at 0x40013004, write-only)",
      "purpose": "Stop comparator"
    },
    "MPU.MPU_CTRL": {
      "long_name": "MPU Control Register (at 0xe000ed94, read-write)",
      "purpose": "Enables the MPU, and when the MPU is enabled, controls whether the default\nmemory map is enabled as a background region for privileged accesses, and\nwhether the MPU is enabled for HardFaults, NMIs\n\nPRIVDEFENA, bit [2] - When the ENABLE bit is set to 1, the meaning of this bit\n                      is\nHFNMIENA, bit [1]   - When the ENABLE bit is set to 1, controls whether handlers\n                      executing with priority less than 0 access memory with the\n                      MPU enabled or with the MPU disabled\nENABLE, bit [0]     - Enables the MPU"
    },
    "MPU.MPU_RASR": {
      "long_name": "MPU Region Attribute and Size Register (at 0xe000eda0, read-write)",
      "purpose": "Defines the size and access behavior of the region identified by MPU_RNR, and\nenables that region\n\nATTRS, bits [31:16] - The MPU Region Attribute field\nSRD, bits [15:8]    - Subregion Disable\nSIZE, bits [5:1]    - Indicates the region size\nENABLE, bit [0]     - Enables this region"
    },
    "MPU.MPU_RBAR": {
      "long_name": "MPU Region Base Address Register (at 0xe000ed9c, read-write)",
      "purpose": "Holds the base address of the region identified by MPU_RNR\n\nADDR, bits [31:5]  - Base address of the region\nVALID, bit [4]     - On writes, indicates whether the region to update is\n                     specified by MPU_RNR\nREGION, bits [3:0] - On writes, can specify the number of the region to update,\n                     see VALID field description"
    },
    "MPU.MPU_RNR": {
      "long_name": "MPU Region Number Register (at 0xe000ed98, read-write)",
      "purpose": "Selects the region currently accessed by MPU_RBAR and MPU_RASR\n\nREGION, bits [7:0] - Indicates the memory region accessed by MPU_RBAR and\n                     MPU_RASR"
    },
    "MPU.MPU_TYPE": {
      "long_name": "MPU Type Register (at 0xe000ed90, read-only)",
      "purpose": "The MPU Type Register indicates how many regions the MPU support\n\nIREGION, bits [23:16] - Instruction region\nDREGION, bits [15:8]  - Number of regions supported by the MPU\nSEPARATE, bit [0]     - Indicates support for separate instruction and data\n                        address maps. RAZ. ARMv7-M only supports a unified MPU"
    },
    "MSP": {
      "long_name": "Main stack pointer (MSP)",
      "purpose": ""
    },
    "MWU.EVENTS_PREGION<m>.RA": {
      "long_name": "MWU.EVENTS_PREGION<m>.RA (at 0x40020164, read-write)",
      "purpose": "Read access to peripheral region <m> detected"
    },
    "MWU.EVENTS_PREGION<m>.WA": {
      "long_name": "MWU.EVENTS_PREGION<m>.WA (at 0x40020160, read-write)",
      "purpose": "Write access to peripheral region <m> detected"
    },
    "MWU.EVENTS_REGION<m>.RA": {
      "long_name": "MWU.EVENTS_REGION<m>.RA (at 0x40020104, read-write)",
      "purpose": "Read access to region <m> detected"
    },
    "MWU.EVENTS_REGION<m>.WA": {
      "long_name": "MWU.EVENTS_REGION<m>.WA (at 0x40020100, read-write)",
      "purpose": "Write access to region <m> detected"
    },
    "MWU.INTEN": {
      "long_name": "MWU.INTEN (at 0x40020300, read-write)",
      "purpose": "Enable or disable interrupt\n\nREGION0WA, bit [0]   - Enable or disable interrupt for REGION[0].WA event\nREGION0RA, bit [1]   - Enable or disable interrupt for REGION[0].RA event\nREGION1WA, bit [2]   - Enable or disable interrupt for REGION[1].WA event\nREGION1RA, bit [3]   - Enable or disable interrupt for REGION[1].RA event\nREGION2WA, bit [4]   - Enable or disable interrupt for REGION[2].WA event\nREGION2RA, bit [5]   - Enable or disable interrupt for REGION[2].RA event\nREGION3WA, bit [6]   - Enable or disable interrupt for REGION[3].WA event\nREGION3RA, bit [7]   - Enable or disable interrupt for REGION[3].RA event\nPREGION0WA, bit [24] - Enable or disable interrupt for PREGION[0].WA event\nPREGION0RA, bit [25] - Enable or disable interrupt for PREGION[0].RA event\nPREGION1WA, bit [26] - Enable or disable interrupt for PREGION[1].WA event\nPREGION1RA, bit [27] - Enable or disable interrupt for PREGION[1].RA event"
    },
    "MWU.INTENCLR": {
      "long_name": "MWU.INTENCLR (at 0x40020308, read-write)",
      "purpose": "Disable interrupt\n\nREGION0WA, bit [0]   - Write '1' to Disable interrupt for REGION[0].WA event\nREGION0RA, bit [1]   - Write '1' to Disable interrupt for REGION[0].RA event\nREGION1WA, bit [2]   - Write '1' to Disable interrupt for REGION[1].WA event\nREGION1RA, bit [3]   - Write '1' to Disable interrupt for REGION[1].RA event\nREGION2WA, bit [4]   - Write '1' to Disable interrupt for REGION[2].WA event\nREGION2RA, bit [5]   - Write '1' to Disable interrupt for REGION[2].RA event\nREGION3WA, bit [6]   - Write '1' to Disable interrupt for REGION[3].WA event\nREGION3RA, bit [7]   - Write '1' to Disable interrupt for REGION[3].RA event\nPREGION0WA, bit [24] - Write '1' to Disable interrupt for PREGION[0].WA event\nPREGION0RA, bit [25] - Write '1' to Disable interrupt for PREGION[0].RA event\nPREGION1WA, bit [26] - Write '1' to Disable interrupt for PREGION[1].WA event\nPREGION1RA, bit [27] - Write '1' to Disable interrupt for PREGION[1].RA event"
    },
    "MWU.INTENSET": {
      "long_name": "MWU.INTENSET (at 0x40020304, read-write)",
      "purpose": "Enable interrupt\n\nREGION0WA, bit [0]   - Write '1' to Enable interrupt for REGION[0].WA event\nREGION0RA, bit [1]   - Write '1' to Enable interrupt for REGION[0].RA event\nREGION1WA, bit [2]   - Write '1' to Enable interrupt for REGION[1].WA event\nREGION1RA, bit [3]   - Write '1' to Enable interrupt for REGION[1].RA event\nREGION2WA, bit [4]   - Write '1' to Enable interrupt for REGION[2].WA event\nREGION2RA, bit [5]   - Write '1' to Enable interrupt for REGION[2].RA event\nREGION3WA, bit [6]   - Write '1' to Enable interrupt for REGION[3].WA event\nREGION3RA, bit [7]   - Write '1' to Enable interrupt for REGION[3].RA event\nPREGION0WA, bit [24] - Write '1' to Enable interrupt for PREGION[0].WA event\nPREGION0RA, bit [25] - Write '1' to Enable interrupt for PREGION[0].RA event\nPREGION1WA, bit [26] - Write '1' to Enable interrupt for PREGION[1].WA event\nPREGION1RA, bit [27] - Write '1' to Enable interrupt for PREGION[1].RA event"
    },
    "MWU.NMIEN": {
      "long_name": "MWU.NMIEN (at 0x40020320, read-write)",
      "purpose": "Enable or disable non-maskable interrupt\n\nREGION0WA, bit [0]   - Enable or disable non-maskable interrupt for REGION[0].WA\n                       event\nREGION0RA, bit [1]   - Enable or disable non-maskable interrupt for REGION[0].RA\n                       event\nREGION1WA, bit [2]   - Enable or disable non-maskable interrupt for REGION[1].WA\n                       event\nREGION1RA, bit [3]   - Enable or disable non-maskable interrupt for REGION[1].RA\n                       event\nREGION2WA, bit [4]   - Enable or disable non-maskable interrupt for REGION[2].WA\n                       event\nREGION2RA, bit [5]   - Enable or disable non-maskable interrupt for REGION[2].RA\n                       event\nREGION3WA, bit [6]   - Enable or disable non-maskable interrupt for REGION[3].WA\n                       event\nREGION3RA, bit [7]   - Enable or disable non-maskable interrupt for REGION[3].RA\n                       event\nPREGION0WA, bit [24] - Enable or disable non-maskable interrupt for\n                       PREGION[0].WA event\nPREGION0RA, bit [25] - Enable or disable non-maskable interrupt for\n                       PREGION[0].RA event\nPREGION1WA, bit [26] - Enable or disable non-maskable interrupt for\n                       PREGION[1].WA event\nPREGION1RA, bit [27] - Enable or disable non-maskable interrupt for\n                       PREGION[1].RA event"
    },
    "MWU.NMIENCLR": {
      "long_name": "MWU.NMIENCLR (at 0x40020328, read-write)",
      "purpose": "Disable non-maskable interrupt\n\nREGION0WA, bit [0]   - Write '1' to Disable non-maskable interrupt for\n                       REGION[0].WA event\nREGION0RA, bit [1]   - Write '1' to Disable non-maskable interrupt for\n                       REGION[0].RA event\nREGION1WA, bit [2]   - Write '1' to Disable non-maskable interrupt for\n                       REGION[1].WA event\nREGION1RA, bit [3]   - Write '1' to Disable non-maskable interrupt for\n                       REGION[1].RA event\nREGION2WA, bit [4]   - Write '1' to Disable non-maskable interrupt for\n                       REGION[2].WA event\nREGION2RA, bit [5]   - Write '1' to Disable non-maskable interrupt for\n                       REGION[2].RA event\nREGION3WA, bit [6]   - Write '1' to Disable non-maskable interrupt for\n                       REGION[3].WA event\nREGION3RA, bit [7]   - Write '1' to Disable non-maskable interrupt for\n                       REGION[3].RA event\nPREGION0WA, bit [24] - Write '1' to Disable non-maskable interrupt for\n                       PREGION[0].WA event\nPREGION0RA, bit [25] - Write '1' to Disable non-maskable interrupt for\n                       PREGION[0].RA event\nPREGION1WA, bit [26] - Write '1' to Disable non-maskable interrupt for\n                       PREGION[1].WA event\nPREGION1RA, bit [27] - Write '1' to Disable non-maskable interrupt for\n                       PREGION[1].RA event"
    },
    "MWU.NMIENSET": {
      "long_name": "MWU.NMIENSET (at 0x40020324, read-write)",
      "purpose": "Enable non-maskable interrupt\n\nREGION0WA, bit [0]   - Write '1' to Enable non-maskable interrupt for\n                       REGION[0].WA event\nREGION0RA, bit [1]   - Write '1' to Enable non-maskable interrupt for\n                       REGION[0].RA event\nREGION1WA, bit [2]   - Write '1' to Enable non-maskable interrupt for\n                       REGION[1].WA event\nREGION1RA, bit [3]   - Write '1' to Enable non-maskable interrupt for\n                       REGION[1].RA event\nREGION2WA, bit [4]   - Write '1' to Enable non-maskable interrupt for\n                       REGION[2].WA event\nREGION2RA, bit [5]   - Write '1' to Enable non-maskable interrupt for\n                       REGION[2].RA event\nREGION3WA, bit [6]   - Write '1' to Enable non-maskable interrupt for\n                       REGION[3].WA event\nREGION3RA, bit [7]   - Write '1' to Enable non-maskable interrupt for\n                       REGION[3].RA event\nPREGION0WA, bit [24] - Write '1' to Enable non-maskable interrupt for\n                       PREGION[0].WA event\nPREGION0RA, bit [25] - Write '1' to Enable non-maskable interrupt for\n                       PREGION[0].RA event\nPREGION1WA, bit [26] - Write '1' to Enable non-maskable interrupt for\n                       PREGION[1].WA event\nPREGION1RA, bit [27] - Write '1' to Enable non-maskable interrupt for\n                       PREGION[1].RA event"
    },
    "MWU.PERREGION<m>.SUBSTATRA": {
      "long_name": "MWU.PERREGION<m>.SUBSTATRA (at 0x40020404, read-write)",
      "purpose": "Source of event/interrupt in region <m>, read access detected while\ncorresponding subregion was enabled for watching\n\nSR0, bit [0]   - Subregion 0 in region 0 (write '1' to clear)\nSR1, bit [1]   - Subregion 1 in region 0 (write '1' to clear)\nSR2, bit [2]   - Subregion 2 in region 0 (write '1' to clear)\nSR3, bit [3]   - Subregion 3 in region 0 (write '1' to clear)\nSR4, bit [4]   - Subregion 4 in region 0 (write '1' to clear)\nSR5, bit [5]   - Subregion 5 in region 0 (write '1' to clear)\nSR6, bit [6]   - Subregion 6 in region 0 (write '1' to clear)\nSR7, bit [7]   - Subregion 7 in region 0 (write '1' to clear)\nSR8, bit [8]   - Subregion 8 in region 0 (write '1' to clear)\nSR9, bit [9]   - Subregion 9 in region 0 (write '1' to clear)\nSR10, bit [10] - Subregion 10 in region 0 (write '1' to clear)\nSR11, bit [11] - Subregion 11 in region 0 (write '1' to clear)\nSR12, bit [12] - Subregion 12 in region 0 (write '1' to clear)\nSR13, bit [13] - Subregion 13 in region 0 (write '1' to clear)\nSR14, bit [14] - Subregion 14 in region 0 (write '1' to clear)\nSR15, bit [15] - Subregion 15 in region 0 (write '1' to clear)\nSR16, bit [16] - Subregion 16 in region 0 (write '1' to clear)\nSR17, bit [17] - Subregion 17 in region 0 (write '1' to clear)\nSR18, bit [18] - Subregion 18 in region 0 (write '1' to clear)\nSR19, bit [19] - Subregion 19 in region 0 (write '1' to clear)\nSR20, bit [20] - Subregion 20 in region 0 (write '1' to clear)\nSR21, bit [21] - Subregion 21 in region 0 (write '1' to clear)\nSR22, bit [22] - Subregion 22 in region 0 (write '1' to clear)\nSR23, bit [23] - Subregion 23 in region 0 (write '1' to clear)\nSR24, bit [24] - Subregion 24 in region 0 (write '1' to clear)\nSR25, bit [25] - Subregion 25 in region 0 (write '1' to clear)\nSR26, bit [26] - Subregion 26 in region 0 (write '1' to clear)\nSR27, bit [27] - Subregion 27 in region 0 (write '1' to clear)\nSR28, bit [28] - Subregion 28 in region 0 (write '1' to clear)\nSR29, bit [29] - Subregion 29 in region 0 (write '1' to clear)\nSR30, bit [30] - Subregion 30 in region 0 (write '1' to clear)\nSR31, bit [31] - Subregion 31 in region 0 (write '1' to clear)"
    },
    "MWU.PERREGION<m>.SUBSTATWA": {
      "long_name": "MWU.PERREGION<m>.SUBSTATWA (at 0x40020400, read-write)",
      "purpose": "Source of event/interrupt in region <m>, write access detected while\ncorresponding subregion was enabled for watching\n\nSR0, bit [0]   - Subregion 0 in region 0 (write '1' to clear)\nSR1, bit [1]   - Subregion 1 in region 0 (write '1' to clear)\nSR2, bit [2]   - Subregion 2 in region 0 (write '1' to clear)\nSR3, bit [3]   - Subregion 3 in region 0 (write '1' to clear)\nSR4, bit [4]   - Subregion 4 in region 0 (write '1' to clear)\nSR5, bit [5]   - Subregion 5 in region 0 (write '1' to clear)\nSR6, bit [6]   - Subregion 6 in region 0 (write '1' to clear)\nSR7, bit [7]   - Subregion 7 in region 0 (write '1' to clear)\nSR8, bit [8]   - Subregion 8 in region 0 (write '1' to clear)\nSR9, bit [9]   - Subregion 9 in region 0 (write '1' to clear)\nSR10, bit [10] - Subregion 10 in region 0 (write '1' to clear)\nSR11, bit [11] - Subregion 11 in region 0 (write '1' to clear)\nSR12, bit [12] - Subregion 12 in region 0 (write '1' to clear)\nSR13, bit [13] - Subregion 13 in region 0 (write '1' to clear)\nSR14, bit [14] - Subregion 14 in region 0 (write '1' to clear)\nSR15, bit [15] - Subregion 15 in region 0 (write '1' to clear)\nSR16, bit [16] - Subregion 16 in region 0 (write '1' to clear)\nSR17, bit [17] - Subregion 17 in region 0 (write '1' to clear)\nSR18, bit [18] - Subregion 18 in region 0 (write '1' to clear)\nSR19, bit [19] - Subregion 19 in region 0 (write '1' to clear)\nSR20, bit [20] - Subregion 20 in region 0 (write '1' to clear)\nSR21, bit [21] - Subregion 21 in region 0 (write '1' to clear)\nSR22, bit [22] - Subregion 22 in region 0 (write '1' to clear)\nSR23, bit [23] - Subregion 23 in region 0 (write '1' to clear)\nSR24, bit [24] - Subregion 24 in region 0 (write '1' to clear)\nSR25, bit [25] - Subregion 25 in region 0 (write '1' to clear)\nSR26, bit [26] - Subregion 26 in region 0 (write '1' to clear)\nSR27, bit [27] - Subregion 27 in region 0 (write '1' to clear)\nSR28, bit [28] - Subregion 28 in region 0 (write '1' to clear)\nSR29, bit [29] - Subregion 29 in region 0 (write '1' to clear)\nSR30, bit [30] - Subregion 30 in region 0 (write '1' to clear)\nSR31, bit [31] - Subregion 31 in region 0 (write '1' to clear)"
    },
    "MWU.PREGION<m>.END": {
      "long_name": "MWU.PREGION<m>.END (at 0x400206c4, read-only)",
      "purpose": "Reserved for future use\n\nEND, bits [0:31] - Reserved for future use"
    },
    "MWU.PREGION<m>.START": {
      "long_name": "MWU.PREGION<m>.START (at 0x400206c0, read-only)",
      "purpose": "Reserved for future use\n\nSTART, bits [0:31] - Reserved for future use"
    },
    "MWU.PREGION<m>.SUBS": {
      "long_name": "MWU.PREGION<m>.SUBS (at 0x400206c8, read-write)",
      "purpose": "Subregions of region <m>\n\nSR0, bit [0]   - Include or exclude subregion 0 in region\nSR1, bit [1]   - Include or exclude subregion 1 in region\nSR2, bit [2]   - Include or exclude subregion 2 in region\nSR3, bit [3]   - Include or exclude subregion 3 in region\nSR4, bit [4]   - Include or exclude subregion 4 in region\nSR5, bit [5]   - Include or exclude subregion 5 in region\nSR6, bit [6]   - Include or exclude subregion 6 in region\nSR7, bit [7]   - Include or exclude subregion 7 in region\nSR8, bit [8]   - Include or exclude subregion 8 in region\nSR9, bit [9]   - Include or exclude subregion 9 in region\nSR10, bit [10] - Include or exclude subregion 10 in region\nSR11, bit [11] - Include or exclude subregion 11 in region\nSR12, bit [12] - Include or exclude subregion 12 in region\nSR13, bit [13] - Include or exclude subregion 13 in region\nSR14, bit [14] - Include or exclude subregion 14 in region\nSR15, bit [15] - Include or exclude subregion 15 in region\nSR16, bit [16] - Include or exclude subregion 16 in region\nSR17, bit [17] - Include or exclude subregion 17 in region\nSR18, bit [18] - Include or exclude subregion 18 in region\nSR19, bit [19] - Include or exclude subregion 19 in region\nSR20, bit [20] - Include or exclude subregion 20 in region\nSR21, bit [21] - Include or exclude subregion 21 in region\nSR22, bit [22] - Include or exclude subregion 22 in region\nSR23, bit [23] - Include or exclude subregion 23 in region\nSR24, bit [24] - Include or exclude subregion 24 in region\nSR25, bit [25] - Include or exclude subregion 25 in region\nSR26, bit [26] - Include or exclude subregion 26 in region\nSR27, bit [27] - Include or exclude subregion 27 in region\nSR28, bit [28] - Include or exclude subregion 28 in region\nSR29, bit [29] - Include or exclude subregion 29 in region\nSR30, bit [30] - Include or exclude subregion 30 in region\nSR31, bit [31] - Include or exclude subregion 31 in region"
    },
    "MWU.REGION<m>.END": {
      "long_name": "MWU.REGION<m>.END (at 0x40020604, read-write)",
      "purpose": "End address of region <m>\n\nEND, bits [0:31] - End address of region."
    },
    "MWU.REGION<m>.START": {
      "long_name": "MWU.REGION<m>.START (at 0x40020600, read-write)",
      "purpose": "Start address for region <m>\n\nSTART, bits [0:31] - Start address for region"
    },
    "MWU.REGIONEN": {
      "long_name": "MWU.REGIONEN (at 0x40020510, read-write)",
      "purpose": "Enable/disable regions watch\n\nRGN0WA, bit [0]   - Enable/disable write access watch in region[0]\nRGN0RA, bit [1]   - Enable/disable read access watch in region[0]\nRGN1WA, bit [2]   - Enable/disable write access watch in region[1]\nRGN1RA, bit [3]   - Enable/disable read access watch in region[1]\nRGN2WA, bit [4]   - Enable/disable write access watch in region[2]\nRGN2RA, bit [5]   - Enable/disable read access watch in region[2]\nRGN3WA, bit [6]   - Enable/disable write access watch in region[3]\nRGN3RA, bit [7]   - Enable/disable read access watch in region[3]\nPRGN0WA, bit [24] - Enable/disable write access watch in PREGION[0]\nPRGN0RA, bit [25] - Enable/disable read access watch in PREGION[0]\nPRGN1WA, bit [26] - Enable/disable write access watch in PREGION[1]\nPRGN1RA, bit [27] - Enable/disable read access watch in PREGION[1]"
    },
    "MWU.REGIONENCLR": {
      "long_name": "MWU.REGIONENCLR (at 0x40020518, read-write)",
      "purpose": "Disable regions watch\n\nRGN0WA, bit [0]   - Disable write access watch in region[0]\nRGN0RA, bit [1]   - Disable read access watch in region[0]\nRGN1WA, bit [2]   - Disable write access watch in region[1]\nRGN1RA, bit [3]   - Disable read access watch in region[1]\nRGN2WA, bit [4]   - Disable write access watch in region[2]\nRGN2RA, bit [5]   - Disable read access watch in region[2]\nRGN3WA, bit [6]   - Disable write access watch in region[3]\nRGN3RA, bit [7]   - Disable read access watch in region[3]\nPRGN0WA, bit [24] - Disable write access watch in PREGION[0]\nPRGN0RA, bit [25] - Disable read access watch in PREGION[0]\nPRGN1WA, bit [26] - Disable write access watch in PREGION[1]\nPRGN1RA, bit [27] - Disable read access watch in PREGION[1]"
    },
    "MWU.REGIONENSET": {
      "long_name": "MWU.REGIONENSET (at 0x40020514, read-write)",
      "purpose": "Enable regions watch\n\nRGN0WA, bit [0]   - Enable write access watch in region[0]\nRGN0RA, bit [1]   - Enable read access watch in region[0]\nRGN1WA, bit [2]   - Enable write access watch in region[1]\nRGN1RA, bit [3]   - Enable read access watch in region[1]\nRGN2WA, bit [4]   - Enable write access watch in region[2]\nRGN2RA, bit [5]   - Enable read access watch in region[2]\nRGN3WA, bit [6]   - Enable write access watch in region[3]\nRGN3RA, bit [7]   - Enable read access watch in region[3]\nPRGN0WA, bit [24] - Enable write access watch in PREGION[0]\nPRGN0RA, bit [25] - Enable read access watch in PREGION[0]\nPRGN1WA, bit [26] - Enable write access watch in PREGION[1]\nPRGN1RA, bit [27] - Enable read access watch in PREGION[1]"
    },
    "NFCT.CURRENTLOADCTRL": {
      "long_name": "NFCT.CURRENTLOADCTRL (at 0x40005430, read-only)",
      "purpose": "Current value driven to the NFC Load Control\n\nCURRENTLOADCTRL, bits [0:5] - Current value driven to the NFC Load Control"
    },
    "NFCT.ERRORSTATUS": {
      "long_name": "NFCT.ERRORSTATUS (at 0x40005404, read-write)",
      "purpose": "NFC Error Status register\n\nFRAMEDELAYTIMEOUT, bit [0] - No STARTTX task triggered before expiration of the\n                             time set in FRAMEDELAYMAX\nNFCFIELDTOOSTRONG, bit [2] - Field level is too high at max load resistance\nNFCFIELDTOOWEAK, bit [3]   - Field level is too low at min load resistance"
    },
    "NFCT.EVENTS_AUTOCOLRESSTARTED": {
      "long_name": "NFCT.EVENTS_AUTOCOLRESSTARTED (at 0x40005138, read-write)",
      "purpose": "Auto collision resolution process has started"
    },
    "NFCT.EVENTS_COLLISION": {
      "long_name": "NFCT.EVENTS_COLLISION (at 0x40005148, read-write)",
      "purpose": "NFC Auto collision resolution error reported."
    },
    "NFCT.EVENTS_ENDRX": {
      "long_name": "NFCT.EVENTS_ENDRX (at 0x4000512c, read-write)",
      "purpose": "RX buffer (as defined by PACKETPTR and MAXLEN) in Data RAM full."
    },
    "NFCT.EVENTS_ENDTX": {
      "long_name": "NFCT.EVENTS_ENDTX (at 0x40005130, read-write)",
      "purpose": "Transmission of data in RAM has ended, and EasyDMA has ended accessing the TX\nbuffer"
    },
    "NFCT.EVENTS_ERROR": {
      "long_name": "NFCT.EVENTS_ERROR (at 0x4000511c, read-write)",
      "purpose": "NFC error reported. The ERRORSTATUS register contains details on the source of\nthe error."
    },
    "NFCT.EVENTS_FIELDDETECTED": {
      "long_name": "NFCT.EVENTS_FIELDDETECTED (at 0x40005104, read-write)",
      "purpose": "Remote NFC field detected"
    },
    "NFCT.EVENTS_FIELDLOST": {
      "long_name": "NFCT.EVENTS_FIELDLOST (at 0x40005108, read-write)",
      "purpose": "Remote NFC field lost"
    },
    "NFCT.EVENTS_READY": {
      "long_name": "NFCT.EVENTS_READY (at 0x40005100, read-write)",
      "purpose": "The NFC peripheral is ready to receive and send frames"
    },
    "NFCT.EVENTS_RXERROR": {
      "long_name": "NFCT.EVENTS_RXERROR (at 0x40005128, read-write)",
      "purpose": "NFC RX frame error reported. The FRAMESTATUS.RX register contains details on the\nsource of the error."
    },
    "NFCT.EVENTS_RXFRAMEEND": {
      "long_name": "NFCT.EVENTS_RXFRAMEEND (at 0x40005118, read-write)",
      "purpose": "Received data have been checked (CRC, parity) and transferred to RAM, and\nEasyDMA has ended accessing the RX buffer"
    },
    "NFCT.EVENTS_RXFRAMESTART": {
      "long_name": "NFCT.EVENTS_RXFRAMESTART (at 0x40005114, read-write)",
      "purpose": "Marks the end of the first symbol of a received frame"
    },
    "NFCT.EVENTS_SELECTED": {
      "long_name": "NFCT.EVENTS_SELECTED (at 0x4000514c, read-write)",
      "purpose": "NFC Auto collision resolution successfully completed"
    },
    "NFCT.EVENTS_STARTED": {
      "long_name": "NFCT.EVENTS_STARTED (at 0x40005150, read-write)",
      "purpose": "EasyDMA is ready to receive or send frames."
    },
    "NFCT.EVENTS_TXFRAMEEND": {
      "long_name": "NFCT.EVENTS_TXFRAMEEND (at 0x40005110, read-write)",
      "purpose": "Marks the end of the last transmitted on-air symbol of a frame"
    },
    "NFCT.EVENTS_TXFRAMESTART": {
      "long_name": "NFCT.EVENTS_TXFRAMESTART (at 0x4000510c, read-write)",
      "purpose": "Marks the start of the first symbol of a transmitted frame"
    },
    "NFCT.FIELDPRESENT": {
      "long_name": "NFCT.FIELDPRESENT (at 0x4000543c, read-only)",
      "purpose": "Indicates the presence or not of a valid field\n\nFIELDPRESENT, bit [0] - Indicates the presence or not of a valid field.\n                        Available only in the activated state.\nLOCKDETECT, bit [1]   - Indicates if the low level has locked to the field"
    },
    "NFCT.FRAMEDELAYMAX": {
      "long_name": "NFCT.FRAMEDELAYMAX (at 0x40005508, read-write)",
      "purpose": "Maximum frame delay\n\nFRAMEDELAYMAX, bits [0:15] - Maximum frame delay in number of 13.56 MHz clocks"
    },
    "NFCT.FRAMEDELAYMIN": {
      "long_name": "NFCT.FRAMEDELAYMIN (at 0x40005504, read-write)",
      "purpose": "Minimum frame delay\n\nFRAMEDELAYMIN, bits [0:15] - Minimum frame delay in number of 13.56 MHz clocks"
    },
    "NFCT.FRAMEDELAYMODE": {
      "long_name": "NFCT.FRAMEDELAYMODE (at 0x4000550c, read-write)",
      "purpose": "Configuration register for the Frame Delay Timer\n\nFRAMEDELAYMODE, bits [0:1] - Configuration register for the Frame Delay Timer; 0\n                             for FreeRun (Transmission is independent of frame\n                             timer and will start when the STARTTX task is\n                             triggered. No timeout.), 1 for Window (Frame is\n                             transmitted between FRAMEDELAYMIN and\n                             FRAMEDELAYMAX), 2 for ExactVal (Frame is\n                             transmitted exactly at FRAMEDELAYMAX), 3 for\n                             WindowGrid (Frame is transmitted on a bit grid\n                             between FRAMEDELAYMIN and FRAMEDELAYMAX)"
    },
    "NFCT.FRAMESTATUS.RX": {
      "long_name": "NFCT.FRAMESTATUS.RX (at 0x4000540c, read-write)",
      "purpose": "Result of last incoming frames\n\nCRCERROR, bit [0]     - No valid End of Frame detected\nPARITYSTATUS, bit [2] - Parity status of received frame\nOVERRUN, bit [3]      - Overrun detected"
    },
    "NFCT.INTEN": {
      "long_name": "NFCT.INTEN (at 0x40005300, read-write)",
      "purpose": "Enable or disable interrupt\n\nREADY, bit [0]              - Enable or disable interrupt for READY event\nFIELDDETECTED, bit [1]      - Enable or disable interrupt for FIELDDETECTED\n                              event\nFIELDLOST, bit [2]          - Enable or disable interrupt for FIELDLOST event\nTXFRAMESTART, bit [3]       - Enable or disable interrupt for TXFRAMESTART event\nTXFRAMEEND, bit [4]         - Enable or disable interrupt for TXFRAMEEND event\nRXFRAMESTART, bit [5]       - Enable or disable interrupt for RXFRAMESTART event\nRXFRAMEEND, bit [6]         - Enable or disable interrupt for RXFRAMEEND event\nERROR, bit [7]              - Enable or disable interrupt for ERROR event\nRXERROR, bit [10]           - Enable or disable interrupt for RXERROR event\nENDRX, bit [11]             - Enable or disable interrupt for ENDRX event\nENDTX, bit [12]             - Enable or disable interrupt for ENDTX event\nAUTOCOLRESSTARTED, bit [14] - Enable or disable interrupt for AUTOCOLRESSTARTED\n                              event\nCOLLISION, bit [18]         - Enable or disable interrupt for COLLISION event\nSELECTED, bit [19]          - Enable or disable interrupt for SELECTED event\nSTARTED, bit [20]           - Enable or disable interrupt for STARTED event"
    },
    "NFCT.INTENCLR": {
      "long_name": "NFCT.INTENCLR (at 0x40005308, read-write)",
      "purpose": "Disable interrupt\n\nREADY, bit [0]              - Write '1' to Disable interrupt for READY event\nFIELDDETECTED, bit [1]      - Write '1' to Disable interrupt for FIELDDETECTED\n                              event\nFIELDLOST, bit [2]          - Write '1' to Disable interrupt for FIELDLOST event\nTXFRAMESTART, bit [3]       - Write '1' to Disable interrupt for TXFRAMESTART\n                              event\nTXFRAMEEND, bit [4]         - Write '1' to Disable interrupt for TXFRAMEEND\n                              event\nRXFRAMESTART, bit [5]       - Write '1' to Disable interrupt for RXFRAMESTART\n                              event\nRXFRAMEEND, bit [6]         - Write '1' to Disable interrupt for RXFRAMEEND\n                              event\nERROR, bit [7]              - Write '1' to Disable interrupt for ERROR event\nRXERROR, bit [10]           - Write '1' to Disable interrupt for RXERROR event\nENDRX, bit [11]             - Write '1' to Disable interrupt for ENDRX event\nENDTX, bit [12]             - Write '1' to Disable interrupt for ENDTX event\nAUTOCOLRESSTARTED, bit [14] - Write '1' to Disable interrupt for\n                              AUTOCOLRESSTARTED event\nCOLLISION, bit [18]         - Write '1' to Disable interrupt for COLLISION event\nSELECTED, bit [19]          - Write '1' to Disable interrupt for SELECTED event\nSTARTED, bit [20]           - Write '1' to Disable interrupt for STARTED event"
    },
    "NFCT.INTENSET": {
      "long_name": "NFCT.INTENSET (at 0x40005304, read-write)",
      "purpose": "Enable interrupt\n\nREADY, bit [0]              - Write '1' to Enable interrupt for READY event\nFIELDDETECTED, bit [1]      - Write '1' to Enable interrupt for FIELDDETECTED\n                              event\nFIELDLOST, bit [2]          - Write '1' to Enable interrupt for FIELDLOST event\nTXFRAMESTART, bit [3]       - Write '1' to Enable interrupt for TXFRAMESTART\n                              event\nTXFRAMEEND, bit [4]         - Write '1' to Enable interrupt for TXFRAMEEND event\nRXFRAMESTART, bit [5]       - Write '1' to Enable interrupt for RXFRAMESTART\n                              event\nRXFRAMEEND, bit [6]         - Write '1' to Enable interrupt for RXFRAMEEND event\nERROR, bit [7]              - Write '1' to Enable interrupt for ERROR event\nRXERROR, bit [10]           - Write '1' to Enable interrupt for RXERROR event\nENDRX, bit [11]             - Write '1' to Enable interrupt for ENDRX event\nENDTX, bit [12]             - Write '1' to Enable interrupt for ENDTX event\nAUTOCOLRESSTARTED, bit [14] - Write '1' to Enable interrupt for\n                              AUTOCOLRESSTARTED event\nCOLLISION, bit [18]         - Write '1' to Enable interrupt for COLLISION event\nSELECTED, bit [19]          - Write '1' to Enable interrupt for SELECTED event\nSTARTED, bit [20]           - Write '1' to Enable interrupt for STARTED event"
    },
    "NFCT.MAXLEN": {
      "long_name": "NFCT.MAXLEN (at 0x40005514, read-write)",
      "purpose": "Size of allocated for TXD and RXD data storage buffer in Data RAM\n\nMAXLEN, bits [0:8] - Size of allocated for TXD and RXD data storage buffer in\n                     Data RAM"
    },
    "NFCT.NFCID1_2ND_LAST": {
      "long_name": "NFCT.NFCID1_2ND_LAST (at 0x40005594, read-write)",
      "purpose": "Second last NFCID1 part (7 or 10 bytes ID)\n\nNFCID1_V, bits [0:7]   - NFCID1 byte V\nNFCID1_U, bits [8:15]  - NFCID1 byte U\nNFCID1_T, bits [16:23] - NFCID1 byte T"
    },
    "NFCT.NFCID1_3RD_LAST": {
      "long_name": "NFCT.NFCID1_3RD_LAST (at 0x40005598, read-write)",
      "purpose": "Third last NFCID1 part (10 bytes ID)\n\nNFCID1_S, bits [0:7]   - NFCID1 byte S\nNFCID1_R, bits [8:15]  - NFCID1 byte R\nNFCID1_Q, bits [16:23] - NFCID1 byte Q"
    },
    "NFCT.NFCID1_LAST": {
      "long_name": "NFCT.NFCID1_LAST (at 0x40005590, read-write)",
      "purpose": "Last NFCID1 part (4, 7 or 10 bytes ID)\n\nNFCID1_Z, bits [0:7]   - NFCID1 byte Z (very last byte sent)\nNFCID1_Y, bits [8:15]  - NFCID1 byte Y\nNFCID1_X, bits [16:23] - NFCID1 byte X\nNFCID1_W, bits [24:31] - NFCID1 byte W"
    },
    "NFCT.PACKETPTR": {
      "long_name": "NFCT.PACKETPTR (at 0x40005510, read-write)",
      "purpose": "Packet pointer for TXD and RXD data storage in Data RAM\n\nPTR, bits [0:31] - Packet pointer for TXD and RXD data storage in Data RAM. This\n                   address is a byte aligned RAM address."
    },
    "NFCT.RXD.AMOUNT": {
      "long_name": "NFCT.RXD.AMOUNT (at 0x40005524, read-only)",
      "purpose": "Size of last incoming frame\n\nRXDATABITS, bits [0:2]   - Number of bits in the last byte in the frame, if less\n                           than 8 (including CRC, but excluding parity and\n                           SoF/EoF framing).\nRXDATABYTES, bits [3:11] - Number of complete bytes received in the frame\n                           (including CRC, but excluding parity and SoF/EoF\n                           framing)"
    },
    "NFCT.RXD.FRAMECONFIG": {
      "long_name": "NFCT.RXD.FRAMECONFIG (at 0x40005520, read-write)",
      "purpose": "Configuration of incoming frames\n\nPARITY, bit [0]    - Parity expected or not in RX frame\nSOF, bit [2]       - SoF expected or not in RX frames\nCRCMODERX, bit [4] - CRC mode for incoming frames"
    },
    "NFCT.SELRES": {
      "long_name": "NFCT.SELRES (at 0x400055a4, read-write)",
      "purpose": "NFC-A SEL_RES auto-response settings\n\nRFU10, bits [0:1]    - Reserved for future use. Shall be 0.\nCASCADE, bit [2]     - Cascade bit (controlled by hardware, write has no effect)\nRFU43, bits [3:4]    - Reserved for future use. Shall be 0.\nPROTOCOL, bits [5:6] - Protocol as defined by the b7:b6 of SEL_RES response in\n                       the NFC Forum, NFC Digital Protocol Technical\n                       Specification\nRFU7, bit [7]        - Reserved for future use. Shall be 0."
    },
    "NFCT.SENSRES": {
      "long_name": "NFCT.SENSRES (at 0x400055a0, read-write)",
      "purpose": "NFC-A SENS_RES auto-response settings\n\nBITFRAMESDD, bits [0:4]  - Bit frame SDD as defined by the b5:b1 of byte 1 in\n                           SENS_RES response in the NFC Forum, NFC Digital\n                           Protocol Technical Specification; 0 for SDD00000 (SDD\n                           pattern 00000), 1 for SDD00001 (SDD pattern 00001), 2\n                           for SDD00010 (SDD pattern 00010), 4 for SDD00100 (SDD\n                           pattern 00100), 8 for SDD01000 (SDD pattern 01000),\n                           16 for SDD10000 (SDD pattern 10000)\nRFU5, bit [5]            - Reserved for future use. Shall be 0.\nNFCIDSIZE, bits [6:7]    - NFCID1 size. This value is used by the Auto collision\n                           resolution engine; 0 for NFCID1Single (NFCID1 size:\n                           single (4 bytes)), 1 for NFCID1Double (NFCID1 size:\n                           double (7 bytes)), 2 for NFCID1Triple (NFCID1 size:\n                           triple (10 bytes))\nPLATFCONFIG, bits [8:11] - Tag platform configuration as defined by the b4:b1 of\n                           byte 2 in SENS_RES response in the NFC Forum, NFC\n                           Digital Protocol Technical Specification\nRFU74, bits [12:15]      - Reserved for future use. Shall be 0."
    },
    "NFCT.SHORTS": {
      "long_name": "NFCT.SHORTS (at 0x40005200, read-write)",
      "purpose": "Shortcut register\n\nFIELDDETECTED_ACTIVATE, bit [0] - Shortcut between FIELDDETECTED event and\n                                  ACTIVATE task\nFIELDLOST_SENSE, bit [1]        - Shortcut between FIELDLOST event and SENSE\n                                  task"
    },
    "NFCT.TASKS_ACTIVATE": {
      "long_name": "NFCT.TASKS_ACTIVATE (at 0x40005000, write-only)",
      "purpose": "Activate NFC peripheral for incoming and outgoing frames, change state to\nactivated"
    },
    "NFCT.TASKS_DISABLE": {
      "long_name": "NFCT.TASKS_DISABLE (at 0x40005004, write-only)",
      "purpose": "Disable NFC peripheral"
    },
    "NFCT.TASKS_ENABLERXDATA": {
      "long_name": "NFCT.TASKS_ENABLERXDATA (at 0x4000501c, write-only)",
      "purpose": "Initializes the EasyDMA for receive."
    },
    "NFCT.TASKS_GOIDLE": {
      "long_name": "NFCT.TASKS_GOIDLE (at 0x40005024, write-only)",
      "purpose": "Force state machine to IDLE state"
    },
    "NFCT.TASKS_GOSLEEP": {
      "long_name": "NFCT.TASKS_GOSLEEP (at 0x40005028, write-only)",
      "purpose": "Force state machine to SLEEP_A state"
    },
    "NFCT.TASKS_SENSE": {
      "long_name": "NFCT.TASKS_SENSE (at 0x40005008, write-only)",
      "purpose": "Enable NFC sense field mode, change state to sense mode"
    },
    "NFCT.TASKS_STARTTX": {
      "long_name": "NFCT.TASKS_STARTTX (at 0x4000500c, write-only)",
      "purpose": "Start transmission of a outgoing frame, change state to transmit"
    },
    "NFCT.TXD.AMOUNT": {
      "long_name": "NFCT.TXD.AMOUNT (at 0x4000551c, read-write)",
      "purpose": "Size of outgoing frame\n\nTXDATABITS, bits [0:2]   - Number of bits in the last or first byte read from\n                           RAM that shall be included in the frame (excluding\n                           parity bit).\nTXDATABYTES, bits [3:11] - Number of complete bytes that shall be included in\n                           the frame, excluding CRC, parity and framing"
    },
    "NFCT.TXD.FRAMECONFIG": {
      "long_name": "NFCT.TXD.FRAMECONFIG (at 0x40005518, read-write)",
      "purpose": "Configuration of outgoing frames\n\nPARITY, bit [0]      - Adding parity or not in the frame\nDISCARDMODE, bit [1] - Discarding unused bits in start or at end of a Frame\nSOF, bit [2]         - Adding SoF or not in TX frames\nCRCMODETX, bit [4]   - CRC mode for outgoing frames"
    },
    "NVIC.NVIC_IABR_<n>": {
      "long_name": "Interrupt Active Bit Register <n> (at 0xe000e300, read-only)",
      "purpose": "For a group of 32 interrupts, shows whether each interrupt is active\n\nACTIVE_%s, bit [0] - For register NVIC_IABRn, shows whether interrupt (m+(32*n))\n                     is active"
    },
    "NVIC.NVIC_ICER_<n>": {
      "long_name": "Interrupt Clear-Enable Register <n> (at 0xe000e180, read-write)",
      "purpose": "Disables, or reads the enable state of, a group of registers\n\nCLRENA_%s, bit [0] - For register NVIC_ICERn, disables or shows the current\n                     enabled state of interrupt (m+(32*n))"
    },
    "NVIC.NVIC_ICPR_<n>": {
      "long_name": "Interrupt Clear-Pending Register <n> (at 0xe000e280, read-write)",
      "purpose": "For a group of interrupts, clears the interrupt pending status, or shows the\ncurrent pending status\n\nCLRPEND_%s, bit [0] - For register NVIC_ICPRn, clears the pending state of\n                      interrupt (m+(32*n)), or shows whether the state of the\n                      interrupt is pending"
    },
    "NVIC.NVIC_IPR_<n>": {
      "long_name": "Interrupt Priority Register <n> (at 0xe000e400, read-write)",
      "purpose": "Sets or reads interrupt priorities\n\nPRI_N3, bits [31:24] - For register NVIC_IPRn, priority of interrupt number 4n+3\nPRI_N2, bits [23:16] - For register NVIC_IPRn, priority of interrupt number 4n+2\nPRI_N1, bits [15:8]  - For register NVIC_IPRn, priority of interrupt number 4n+1\nPRI_N0, bits [7:0]   - For register NVIC_IPRn, priority of interrupt number 4n"
    },
    "NVIC.NVIC_ISER_<n>": {
      "long_name": "Interrupt Set-Enable Register <n> (at 0xe000e100, read-write)",
      "purpose": "Enables, or reads the enable state of a group of interrupts\n\nSETENA_%s, bit [0] - For register NVIC_ISERn, enables or shows the current\n                     enabled state of interrupt (m+(32*n))"
    },
    "NVIC.NVIC_ISPR_<n>": {
      "long_name": "Interrupt Set-Pending Register <n> (at 0xe000e200, read-write)",
      "purpose": "For a group of interrupts, changes interrupt status to pending, or shows the\ncurrent pending status\n\nSETPEND_%s, bit [0] - For register NVIC_ISPRn, changes the state of interrupt\n                      (m+(32*n)) to pending, or shows whether the state of the\n                      interrupt is pending"
    },
    "NVMC.CONFIG": {
      "long_name": "NVMC.CONFIG (at 0x4001e504, read-write)",
      "purpose": "Configuration register\n\nWEN, bits [0:1] - Program memory access mode. It is strongly recommended to only\n                  activate erase and write modes when they are actively used.\n                  Enabling write or erase will invalidate the cache and keep it\n                  invalidated; 0 for Ren (Read only access), 1 for Wen (Write\n                  Enabled), 2 for Een (Erase enabled)"
    },
    "NVMC.ERASEALL": {
      "long_name": "NVMC.ERASEALL (at 0x4001e50c, read-write)",
      "purpose": "Register for erasing all non-volatile user memory\n\nERASEALL, bit [0] - Erase all non-volatile memory including UICR registers. Note\n                    that code erase has to be enabled by CONFIG.EEN before the\n                    UICR can be erased."
    },
    "NVMC.ERASEPAGE": {
      "long_name": "NVMC.ERASEPAGE (at 0x4001e508, read-write)",
      "purpose": "Register for erasing a page in Code area\n\nERASEPAGE, bits [0:31] - Register for starting erase of a page in Code area"
    },
    "NVMC.ERASEPCR0": {
      "long_name": "NVMC.ERASEPCR0 (at 0x4001e510, read-write)",
      "purpose": "Deprecated register -  Register for erasing a page in Code area. Equivalent to\nERASEPAGE.\n\nERASEPCR0, bits [0:31] - Register for starting erase of a page in Code area.\n                         Equivalent to ERASEPAGE."
    },
    "NVMC.ERASEPCR1": {
      "long_name": "NVMC.ERASEPCR1 (at 0x4001e508, read-write)",
      "purpose": "Deprecated register -  Register for erasing a page in Code area. Equivalent to\nERASEPAGE.\n\nERASEPCR1, bits [0:31] - Register for erasing a page in Code area. Equivalent to\n                         ERASEPAGE."
    },
    "NVMC.ERASEUICR": {
      "long_name": "NVMC.ERASEUICR (at 0x4001e514, read-write)",
      "purpose": "Register for erasing User Information Configuration Registers\n\nERASEUICR, bit [0] - Register starting erase of all User Information\n                     Configuration Registers. Note that code erase has to be\n                     enabled by CONFIG.EEN before the UICR can be erased."
    },
    "NVMC.ICACHECNF": {
      "long_name": "NVMC.ICACHECNF (at 0x4001e540, read-write)",
      "purpose": "I-Code cache configuration register.\n\nCACHEEN, bit [0]     - Cache enable\nCACHEPROFEN, bit [8] - Cache profiling enable"
    },
    "NVMC.IHIT": {
      "long_name": "NVMC.IHIT (at 0x4001e548, read-write)",
      "purpose": "I-Code cache hit counter.\n\nHITS, bits [0:31] - Number of cache hits"
    },
    "NVMC.IMISS": {
      "long_name": "NVMC.IMISS (at 0x4001e54c, read-write)",
      "purpose": "I-Code cache miss counter.\n\nMISSES, bits [0:31] - Number of cache misses"
    },
    "NVMC.READY": {
      "long_name": "NVMC.READY (at 0x4001e400, read-only)",
      "purpose": "Ready flag\n\nREADY, bit [0] - NVMC is ready or busy"
    },
    "P0.DETECTMODE": {
      "long_name": "P0.DETECTMODE (at 0x50000524, read-write)",
      "purpose": "Select between default DETECT signal behaviour and LDETECT mode\n\nDETECTMODE, bit [0] - Select between default DETECT signal behaviour and LDETECT\n                      mode"
    },
    "P0.DIR": {
      "long_name": "P0.DIR (at 0x50000514, read-write)",
      "purpose": "Direction of GPIO pins\n\nPIN0, bit [0]   - Pin 0\nPIN1, bit [1]   - Pin 1\nPIN2, bit [2]   - Pin 2\nPIN3, bit [3]   - Pin 3\nPIN4, bit [4]   - Pin 4\nPIN5, bit [5]   - Pin 5\nPIN6, bit [6]   - Pin 6\nPIN7, bit [7]   - Pin 7\nPIN8, bit [8]   - Pin 8\nPIN9, bit [9]   - Pin 9\nPIN10, bit [10] - Pin 10\nPIN11, bit [11] - Pin 11\nPIN12, bit [12] - Pin 12\nPIN13, bit [13] - Pin 13\nPIN14, bit [14] - Pin 14\nPIN15, bit [15] - Pin 15\nPIN16, bit [16] - Pin 16\nPIN17, bit [17] - Pin 17\nPIN18, bit [18] - Pin 18\nPIN19, bit [19] - Pin 19\nPIN20, bit [20] - Pin 20\nPIN21, bit [21] - Pin 21\nPIN22, bit [22] - Pin 22\nPIN23, bit [23] - Pin 23\nPIN24, bit [24] - Pin 24\nPIN25, bit [25] - Pin 25\nPIN26, bit [26] - Pin 26\nPIN27, bit [27] - Pin 27\nPIN28, bit [28] - Pin 28\nPIN29, bit [29] - Pin 29\nPIN30, bit [30] - Pin 30\nPIN31, bit [31] - Pin 31"
    },
    "P0.DIRCLR": {
      "long_name": "P0.DIRCLR (at 0x5000051c, read-write)",
      "purpose": "DIR clear register\n\nPIN0, bit [0]   - Set as input pin 0\nPIN1, bit [1]   - Set as input pin 1\nPIN2, bit [2]   - Set as input pin 2\nPIN3, bit [3]   - Set as input pin 3\nPIN4, bit [4]   - Set as input pin 4\nPIN5, bit [5]   - Set as input pin 5\nPIN6, bit [6]   - Set as input pin 6\nPIN7, bit [7]   - Set as input pin 7\nPIN8, bit [8]   - Set as input pin 8\nPIN9, bit [9]   - Set as input pin 9\nPIN10, bit [10] - Set as input pin 10\nPIN11, bit [11] - Set as input pin 11\nPIN12, bit [12] - Set as input pin 12\nPIN13, bit [13] - Set as input pin 13\nPIN14, bit [14] - Set as input pin 14\nPIN15, bit [15] - Set as input pin 15\nPIN16, bit [16] - Set as input pin 16\nPIN17, bit [17] - Set as input pin 17\nPIN18, bit [18] - Set as input pin 18\nPIN19, bit [19] - Set as input pin 19\nPIN20, bit [20] - Set as input pin 20\nPIN21, bit [21] - Set as input pin 21\nPIN22, bit [22] - Set as input pin 22\nPIN23, bit [23] - Set as input pin 23\nPIN24, bit [24] - Set as input pin 24\nPIN25, bit [25] - Set as input pin 25\nPIN26, bit [26] - Set as input pin 26\nPIN27, bit [27] - Set as input pin 27\nPIN28, bit [28] - Set as input pin 28\nPIN29, bit [29] - Set as input pin 29\nPIN30, bit [30] - Set as input pin 30\nPIN31, bit [31] - Set as input pin 31"
    },
    "P0.DIRSET": {
      "long_name": "P0.DIRSET (at 0x50000518, read-write)",
      "purpose": "DIR set register\n\nPIN0, bit [0]   - Set as output pin 0\nPIN1, bit [1]   - Set as output pin 1\nPIN2, bit [2]   - Set as output pin 2\nPIN3, bit [3]   - Set as output pin 3\nPIN4, bit [4]   - Set as output pin 4\nPIN5, bit [5]   - Set as output pin 5\nPIN6, bit [6]   - Set as output pin 6\nPIN7, bit [7]   - Set as output pin 7\nPIN8, bit [8]   - Set as output pin 8\nPIN9, bit [9]   - Set as output pin 9\nPIN10, bit [10] - Set as output pin 10\nPIN11, bit [11] - Set as output pin 11\nPIN12, bit [12] - Set as output pin 12\nPIN13, bit [13] - Set as output pin 13\nPIN14, bit [14] - Set as output pin 14\nPIN15, bit [15] - Set as output pin 15\nPIN16, bit [16] - Set as output pin 16\nPIN17, bit [17] - Set as output pin 17\nPIN18, bit [18] - Set as output pin 18\nPIN19, bit [19] - Set as output pin 19\nPIN20, bit [20] - Set as output pin 20\nPIN21, bit [21] - Set as output pin 21\nPIN22, bit [22] - Set as output pin 22\nPIN23, bit [23] - Set as output pin 23\nPIN24, bit [24] - Set as output pin 24\nPIN25, bit [25] - Set as output pin 25\nPIN26, bit [26] - Set as output pin 26\nPIN27, bit [27] - Set as output pin 27\nPIN28, bit [28] - Set as output pin 28\nPIN29, bit [29] - Set as output pin 29\nPIN30, bit [30] - Set as output pin 30\nPIN31, bit [31] - Set as output pin 31"
    },
    "P0.IN": {
      "long_name": "P0.IN (at 0x50000510, read-only)",
      "purpose": "Read GPIO port\n\nPIN0, bit [0]   - Pin 0\nPIN1, bit [1]   - Pin 1\nPIN2, bit [2]   - Pin 2\nPIN3, bit [3]   - Pin 3\nPIN4, bit [4]   - Pin 4\nPIN5, bit [5]   - Pin 5\nPIN6, bit [6]   - Pin 6\nPIN7, bit [7]   - Pin 7\nPIN8, bit [8]   - Pin 8\nPIN9, bit [9]   - Pin 9\nPIN10, bit [10] - Pin 10\nPIN11, bit [11] - Pin 11\nPIN12, bit [12] - Pin 12\nPIN13, bit [13] - Pin 13\nPIN14, bit [14] - Pin 14\nPIN15, bit [15] - Pin 15\nPIN16, bit [16] - Pin 16\nPIN17, bit [17] - Pin 17\nPIN18, bit [18] - Pin 18\nPIN19, bit [19] - Pin 19\nPIN20, bit [20] - Pin 20\nPIN21, bit [21] - Pin 21\nPIN22, bit [22] - Pin 22\nPIN23, bit [23] - Pin 23\nPIN24, bit [24] - Pin 24\nPIN25, bit [25] - Pin 25\nPIN26, bit [26] - Pin 26\nPIN27, bit [27] - Pin 27\nPIN28, bit [28] - Pin 28\nPIN29, bit [29] - Pin 29\nPIN30, bit [30] - Pin 30\nPIN31, bit [31] - Pin 31"
    },
    "P0.LATCH": {
      "long_name": "P0.LATCH (at 0x50000520, read-write)",
      "purpose": "Latch register indicating what GPIO pins that have met the criteria set in the\nPIN_CNF[n].SENSE registers\n\nPIN0, bit [0]   - Status on whether PIN0 has met criteria set in PIN_CNF0.SENSE\n                  register. Write '1' to clear.\nPIN1, bit [1]   - Status on whether PIN1 has met criteria set in PIN_CNF1.SENSE\n                  register. Write '1' to clear.\nPIN2, bit [2]   - Status on whether PIN2 has met criteria set in PIN_CNF2.SENSE\n                  register. Write '1' to clear.\nPIN3, bit [3]   - Status on whether PIN3 has met criteria set in PIN_CNF3.SENSE\n                  register. Write '1' to clear.\nPIN4, bit [4]   - Status on whether PIN4 has met criteria set in PIN_CNF4.SENSE\n                  register. Write '1' to clear.\nPIN5, bit [5]   - Status on whether PIN5 has met criteria set in PIN_CNF5.SENSE\n                  register. Write '1' to clear.\nPIN6, bit [6]   - Status on whether PIN6 has met criteria set in PIN_CNF6.SENSE\n                  register. Write '1' to clear.\nPIN7, bit [7]   - Status on whether PIN7 has met criteria set in PIN_CNF7.SENSE\n                  register. Write '1' to clear.\nPIN8, bit [8]   - Status on whether PIN8 has met criteria set in PIN_CNF8.SENSE\n                  register. Write '1' to clear.\nPIN9, bit [9]   - Status on whether PIN9 has met criteria set in PIN_CNF9.SENSE\n                  register. Write '1' to clear.\nPIN10, bit [10] - Status on whether PIN10 has met criteria set in\n                  PIN_CNF10.SENSE register. Write '1' to clear.\nPIN11, bit [11] - Status on whether PIN11 has met criteria set in\n                  PIN_CNF11.SENSE register. Write '1' to clear.\nPIN12, bit [12] - Status on whether PIN12 has met criteria set in\n                  PIN_CNF12.SENSE register. Write '1' to clear.\nPIN13, bit [13] - Status on whether PIN13 has met criteria set in\n                  PIN_CNF13.SENSE register. Write '1' to clear.\nPIN14, bit [14] - Status on whether PIN14 has met criteria set in\n                  PIN_CNF14.SENSE register. Write '1' to clear.\nPIN15, bit [15] - Status on whether PIN15 has met criteria set in\n                  PIN_CNF15.SENSE register. Write '1' to clear.\nPIN16, bit [16] - Status on whether PIN16 has met criteria set in\n                  PIN_CNF16.SENSE register. Write '1' to clear.\nPIN17, bit [17] - Status on whether PIN17 has met criteria set in\n                  PIN_CNF17.SENSE register. Write '1' to clear.\nPIN18, bit [18] - Status on whether PIN18 has met criteria set in\n                  PIN_CNF18.SENSE register. Write '1' to clear.\nPIN19, bit [19] - Status on whether PIN19 has met criteria set in\n                  PIN_CNF19.SENSE register. Write '1' to clear.\nPIN20, bit [20] - Status on whether PIN20 has met criteria set in\n                  PIN_CNF20.SENSE register. Write '1' to clear.\nPIN21, bit [21] - Status on whether PIN21 has met criteria set in\n                  PIN_CNF21.SENSE register. Write '1' to clear.\nPIN22, bit [22] - Status on whether PIN22 has met criteria set in\n                  PIN_CNF22.SENSE register. Write '1' to clear.\nPIN23, bit [23] - Status on whether PIN23 has met criteria set in\n                  PIN_CNF23.SENSE register. Write '1' to clear.\nPIN24, bit [24] - Status on whether PIN24 has met criteria set in\n                  PIN_CNF24.SENSE register. Write '1' to clear.\nPIN25, bit [25] - Status on whether PIN25 has met criteria set in\n                  PIN_CNF25.SENSE register. Write '1' to clear.\nPIN26, bit [26] - Status on whether PIN26 has met criteria set in\n                  PIN_CNF26.SENSE register. Write '1' to clear.\nPIN27, bit [27] - Status on whether PIN27 has met criteria set in\n                  PIN_CNF27.SENSE register. Write '1' to clear.\nPIN28, bit [28] - Status on whether PIN28 has met criteria set in\n                  PIN_CNF28.SENSE register. Write '1' to clear.\nPIN29, bit [29] - Status on whether PIN29 has met criteria set in\n                  PIN_CNF29.SENSE register. Write '1' to clear.\nPIN30, bit [30] - Status on whether PIN30 has met criteria set in\n                  PIN_CNF30.SENSE register. Write '1' to clear.\nPIN31, bit [31] - Status on whether PIN31 has met criteria set in\n                  PIN_CNF31.SENSE register. Write '1' to clear."
    },
    "P0.OUT": {
      "long_name": "P0.OUT (at 0x50000504, read-write)",
      "purpose": "Write GPIO port\n\nPIN0, bit [0]   - Pin 0\nPIN1, bit [1]   - Pin 1\nPIN2, bit [2]   - Pin 2\nPIN3, bit [3]   - Pin 3\nPIN4, bit [4]   - Pin 4\nPIN5, bit [5]   - Pin 5\nPIN6, bit [6]   - Pin 6\nPIN7, bit [7]   - Pin 7\nPIN8, bit [8]   - Pin 8\nPIN9, bit [9]   - Pin 9\nPIN10, bit [10] - Pin 10\nPIN11, bit [11] - Pin 11\nPIN12, bit [12] - Pin 12\nPIN13, bit [13] - Pin 13\nPIN14, bit [14] - Pin 14\nPIN15, bit [15] - Pin 15\nPIN16, bit [16] - Pin 16\nPIN17, bit [17] - Pin 17\nPIN18, bit [18] - Pin 18\nPIN19, bit [19] - Pin 19\nPIN20, bit [20] - Pin 20\nPIN21, bit [21] - Pin 21\nPIN22, bit [22] - Pin 22\nPIN23, bit [23] - Pin 23\nPIN24, bit [24] - Pin 24\nPIN25, bit [25] - Pin 25\nPIN26, bit [26] - Pin 26\nPIN27, bit [27] - Pin 27\nPIN28, bit [28] - Pin 28\nPIN29, bit [29] - Pin 29\nPIN30, bit [30] - Pin 30\nPIN31, bit [31] - Pin 31"
    },
    "P0.OUTCLR": {
      "long_name": "P0.OUTCLR (at 0x5000050c, read-write)",
      "purpose": "Clear individual bits in GPIO port\n\nPIN0, bit [0]   - Pin 0\nPIN1, bit [1]   - Pin 1\nPIN2, bit [2]   - Pin 2\nPIN3, bit [3]   - Pin 3\nPIN4, bit [4]   - Pin 4\nPIN5, bit [5]   - Pin 5\nPIN6, bit [6]   - Pin 6\nPIN7, bit [7]   - Pin 7\nPIN8, bit [8]   - Pin 8\nPIN9, bit [9]   - Pin 9\nPIN10, bit [10] - Pin 10\nPIN11, bit [11] - Pin 11\nPIN12, bit [12] - Pin 12\nPIN13, bit [13] - Pin 13\nPIN14, bit [14] - Pin 14\nPIN15, bit [15] - Pin 15\nPIN16, bit [16] - Pin 16\nPIN17, bit [17] - Pin 17\nPIN18, bit [18] - Pin 18\nPIN19, bit [19] - Pin 19\nPIN20, bit [20] - Pin 20\nPIN21, bit [21] - Pin 21\nPIN22, bit [22] - Pin 22\nPIN23, bit [23] - Pin 23\nPIN24, bit [24] - Pin 24\nPIN25, bit [25] - Pin 25\nPIN26, bit [26] - Pin 26\nPIN27, bit [27] - Pin 27\nPIN28, bit [28] - Pin 28\nPIN29, bit [29] - Pin 29\nPIN30, bit [30] - Pin 30\nPIN31, bit [31] - Pin 31"
    },
    "P0.OUTSET": {
      "long_name": "P0.OUTSET (at 0x50000508, read-write)",
      "purpose": "Set individual bits in GPIO port\n\nPIN0, bit [0]   - Pin 0\nPIN1, bit [1]   - Pin 1\nPIN2, bit [2]   - Pin 2\nPIN3, bit [3]   - Pin 3\nPIN4, bit [4]   - Pin 4\nPIN5, bit [5]   - Pin 5\nPIN6, bit [6]   - Pin 6\nPIN7, bit [7]   - Pin 7\nPIN8, bit [8]   - Pin 8\nPIN9, bit [9]   - Pin 9\nPIN10, bit [10] - Pin 10\nPIN11, bit [11] - Pin 11\nPIN12, bit [12] - Pin 12\nPIN13, bit [13] - Pin 13\nPIN14, bit [14] - Pin 14\nPIN15, bit [15] - Pin 15\nPIN16, bit [16] - Pin 16\nPIN17, bit [17] - Pin 17\nPIN18, bit [18] - Pin 18\nPIN19, bit [19] - Pin 19\nPIN20, bit [20] - Pin 20\nPIN21, bit [21] - Pin 21\nPIN22, bit [22] - Pin 22\nPIN23, bit [23] - Pin 23\nPIN24, bit [24] - Pin 24\nPIN25, bit [25] - Pin 25\nPIN26, bit [26] - Pin 26\nPIN27, bit [27] - Pin 27\nPIN28, bit [28] - Pin 28\nPIN29, bit [29] - Pin 29\nPIN30, bit [30] - Pin 30\nPIN31, bit [31] - Pin 31"
    },
    "P0.PIN_CNF<n>": {
      "long_name": "P0.PIN_CNF<n> (at 0x50000700, read-write)",
      "purpose": "Configuration of GPIO pins\n\nDIR, bit [0]        - Pin direction. Same physical register as DIR register\nINPUT, bit [1]      - Connect or disconnect input buffer\nPULL, bits [2:3]    - Pull configuration; 0 for Disabled (No pull), 1 for\n                      Pulldown (Pull down on pin), 3 for Pullup (Pull up on pin)\nDRIVE, bits [8:10]  - Drive configuration; 0 for S0S1 (Standard '0', standard\n                      '1'), 1 for H0S1 (High drive '0', standard '1'), 2 for\n                      S0H1 (Standard '0', high drive '1'), 3 for H0H1 (High\n                      drive '0', high 'drive '1''), 4 for D0S1 (Disconnect '0'\n                      standard '1' (normally used for wired-or connections)), 5\n                      for D0H1 (Disconnect '0', high drive '1' (normally used\n                      for wired-or connections)), 6 for S0D1 (Standard '0'.\n                      disconnect '1' (normally used for wired-and connections)),\n                      7 for H0D1 (High drive '0', disconnect '1' (normally used\n                      for wired-and connections))\nSENSE, bits [16:17] - Pin sensing mechanism; 0 for Disabled (Disabled), 2 for\n                      High (Sense for high level), 3 for Low (Sense for low\n                      level)"
    },
    "PDM.ENABLE": {
      "long_name": "PDM.ENABLE (at 0x4001d500, read-write)",
      "purpose": "PDM module enable register\n\nENABLE, bit [0] - Enable or disable PDM module"
    },
    "PDM.EVENTS_END": {
      "long_name": "PDM.EVENTS_END (at 0x4001d108, read-write)",
      "purpose": "The PDM has written the last sample specified by SAMPLE.MAXCNT (or the last\nsample after a STOP task has been received) to Data RAM"
    },
    "PDM.EVENTS_STARTED": {
      "long_name": "PDM.EVENTS_STARTED (at 0x4001d100, read-write)",
      "purpose": "PDM transfer has started"
    },
    "PDM.EVENTS_STOPPED": {
      "long_name": "PDM.EVENTS_STOPPED (at 0x4001d104, read-write)",
      "purpose": "PDM transfer has finished"
    },
    "PDM.GAINL": {
      "long_name": "PDM.GAINL (at 0x4001d518, read-write)",
      "purpose": "Left output gain adjustment\n\nGAINL, bits [0:6] - Left output gain adjustment, in 0.5 dB steps, around the\n                    default module gain (see electrical parameters) 0x00    -20\n                    dB gain adjust 0x01  -19.5 dB gain adjust (...) 0x27   -0.5\n                    dB gain adjust 0x28      0 dB gain adjust 0x29   +0.5 dB\n                    gain adjust (...) 0x4F  +19.5 dB gain adjust 0x50    +20 dB\n                    gain adjust; 0x00 for MinGain (-20dB gain adjustment\n                    (minimum)), 0x28 for DefaultGain (0dB gain adjustment ('2500\n                    RMS' requirement)), 0x50 for MaxGain (+20dB gain adjustment\n                    (maximum))"
    },
    "PDM.GAINR": {
      "long_name": "PDM.GAINR (at 0x4001d51c, read-write)",
      "purpose": "Right output gain adjustment\n\nGAINR, bits [0:7] - Right output gain adjustment, in 0.5 dB steps, around the\n                    default module gain (see electrical parameters); 0x00 for\n                    MinGain (-20dB gain adjustment (minimum)), 0x28 for\n                    DefaultGain (0dB gain adjustment ('2500 RMS' requirement)),\n                    0x50 for MaxGain (+20dB gain adjustment (maximum))"
    },
    "PDM.INTEN": {
      "long_name": "PDM.INTEN (at 0x4001d300, read-write)",
      "purpose": "Enable or disable interrupt\n\nSTARTED, bit [0] - Enable or disable interrupt for STARTED event\nSTOPPED, bit [1] - Enable or disable interrupt for STOPPED event\nEND, bit [2]     - Enable or disable interrupt for END event"
    },
    "PDM.INTENCLR": {
      "long_name": "PDM.INTENCLR (at 0x4001d308, read-write)",
      "purpose": "Disable interrupt\n\nSTARTED, bit [0] - Write '1' to Disable interrupt for STARTED event\nSTOPPED, bit [1] - Write '1' to Disable interrupt for STOPPED event\nEND, bit [2]     - Write '1' to Disable interrupt for END event"
    },
    "PDM.INTENSET": {
      "long_name": "PDM.INTENSET (at 0x4001d304, read-write)",
      "purpose": "Enable interrupt\n\nSTARTED, bit [0] - Write '1' to Enable interrupt for STARTED event\nSTOPPED, bit [1] - Write '1' to Enable interrupt for STOPPED event\nEND, bit [2]     - Write '1' to Enable interrupt for END event"
    },
    "PDM.MODE": {
      "long_name": "PDM.MODE (at 0x4001d508, read-write)",
      "purpose": "Defines the routing of the connected PDM microphones' signals\n\nOPERATION, bit [0] - Mono or stereo operation\nEDGE, bit [1]      - Defines on which PDM_CLK edge Left (or mono) is sampled"
    },
    "PDM.PDMCLKCTRL": {
      "long_name": "PDM.PDMCLKCTRL (at 0x4001d504, read-write)",
      "purpose": "PDM clock generator control\n\nFREQ, bits [0:31] - PDM_CLK frequency; 0x08000000 for 1000K (PDM_CLK = 32 MHz /\n                    32 = 1.000 MHz), 0x08400000 for Default (PDM_CLK = 32 MHz /\n                    31 = 1.032 MHz), 0x08800000 for 1067K (PDM_CLK = 32 MHz / 30\n                    = 1.067 MHz)"
    },
    "PDM.PSEL.CLK": {
      "long_name": "PDM.PSEL.CLK (at 0x4001d540, read-write)",
      "purpose": "Pin number configuration for PDM CLK signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "PDM.PSEL.DIN": {
      "long_name": "PDM.PSEL.DIN (at 0x4001d544, read-write)",
      "purpose": "Pin number configuration for PDM DIN signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "PDM.SAMPLE.MAXCNT": {
      "long_name": "PDM.SAMPLE.MAXCNT (at 0x4001d564, read-write)",
      "purpose": "Number of samples to allocate memory for in EasyDMA mode\n\nBUFFSIZE, bits [0:14] - Length of DMA RAM allocation in number of samples"
    },
    "PDM.SAMPLE.PTR": {
      "long_name": "PDM.SAMPLE.PTR (at 0x4001d560, read-write)",
      "purpose": "RAM address pointer to write samples to with EasyDMA\n\nSAMPLEPTR, bits [0:31] - Address to write PDM samples to over DMA"
    },
    "PDM.TASKS_START": {
      "long_name": "PDM.TASKS_START (at 0x4001d000, write-only)",
      "purpose": "Starts continuous PDM transfer"
    },
    "PDM.TASKS_STOP": {
      "long_name": "PDM.TASKS_STOP (at 0x4001d004, write-only)",
      "purpose": "Stops PDM transfer"
    },
    "POWER.DCDCEN": {
      "long_name": "POWER.DCDCEN (at 0x40000578, read-write)",
      "purpose": "DC/DC enable register\n\nDCDCEN, bit [0] - Enable or disable DC/DC converter"
    },
    "POWER.EVENTS_POFWARN": {
      "long_name": "POWER.EVENTS_POFWARN (at 0x40000108, read-write)",
      "purpose": "Power failure warning"
    },
    "POWER.EVENTS_SLEEPENTER": {
      "long_name": "POWER.EVENTS_SLEEPENTER (at 0x40000114, read-write)",
      "purpose": "CPU entered WFI/WFE sleep"
    },
    "POWER.EVENTS_SLEEPEXIT": {
      "long_name": "POWER.EVENTS_SLEEPEXIT (at 0x40000118, read-write)",
      "purpose": "CPU exited WFI/WFE sleep"
    },
    "POWER.GPREGRET": {
      "long_name": "POWER.GPREGRET (at 0x4000051c, read-write)",
      "purpose": "General purpose retention register\n\nGPREGRET, bits [0:7] - General purpose retention register"
    },
    "POWER.GPREGRET2": {
      "long_name": "POWER.GPREGRET2 (at 0x40000520, read-write)",
      "purpose": "General purpose retention register\n\nGPREGRET, bits [0:7] - General purpose retention register"
    },
    "POWER.INTENCLR": {
      "long_name": "POWER.INTENCLR (at 0x40000308, read-write)",
      "purpose": "Disable interrupt\n\nPOFWARN, bit [2]    - Write '1' to Disable interrupt for POFWARN event\nSLEEPENTER, bit [5] - Write '1' to Disable interrupt for SLEEPENTER event\nSLEEPEXIT, bit [6]  - Write '1' to Disable interrupt for SLEEPEXIT event"
    },
    "POWER.INTENSET": {
      "long_name": "POWER.INTENSET (at 0x40000304, read-write)",
      "purpose": "Enable interrupt\n\nPOFWARN, bit [2]    - Write '1' to Enable interrupt for POFWARN event\nSLEEPENTER, bit [5] - Write '1' to Enable interrupt for SLEEPENTER event\nSLEEPEXIT, bit [6]  - Write '1' to Enable interrupt for SLEEPEXIT event"
    },
    "POWER.POFCON": {
      "long_name": "POWER.POFCON (at 0x40000510, read-write)",
      "purpose": "Power failure comparator configuration\n\nPOF, bit [0]          - Enable or disable power failure comparator\nTHRESHOLD, bits [1:4] - Power failure comparator threshold setting; 4 for V17\n                        (Set threshold to 1.7 V), 5 for V18 (Set threshold to\n                        1.8 V), 6 for V19 (Set threshold to 1.9 V), 7 for V20\n                        (Set threshold to 2.0 V), 8 for V21 (Set threshold to\n                        2.1 V), 9 for V22 (Set threshold to 2.2 V), 10 for V23\n                        (Set threshold to 2.3 V), 11 for V24 (Set threshold to\n                        2.4 V), 12 for V25 (Set threshold to 2.5 V), 13 for V26\n                        (Set threshold to 2.6 V), 14 for V27 (Set threshold to\n                        2.7 V), 15 for V28 (Set threshold to 2.8 V)"
    },
    "POWER.RAM<m>.POWER": {
      "long_name": "POWER.RAM<m>.POWER (at 0x40000900, read-write)",
      "purpose": "RAM0 power control register\n\nS0POWER, bit [0]      - Keep RAM section S0 ON or OFF in System ON mode.\nS1POWER, bit [1]      - Keep RAM section S1 ON or OFF in System ON mode.\nS0RETENTION, bit [16] - Keep retention on RAM section S0 when RAM section is in\n                        OFF\nS1RETENTION, bit [17] - Keep retention on RAM section S1 when RAM section is in\n                        OFF"
    },
    "POWER.RAM<m>.POWERCLR": {
      "long_name": "POWER.RAM<m>.POWERCLR (at 0x40000908, write-only)",
      "purpose": "RAM0 power control clear register\n\nS0POWER, bit [0]      - Keep RAM section S0 of RAM0 on or off in System ON mode;\n                        1 for Off (Off)\nS1POWER, bit [1]      - Keep RAM section S1 of RAM0 on or off in System ON mode;\n                        1 for Off (Off)\nS0RETENTION, bit [16] - Keep retention on RAM section S0 when RAM section is\n                        switched off; 1 for Off (Off)\nS1RETENTION, bit [17] - Keep retention on RAM section S1 when RAM section is\n                        switched off; 1 for Off (Off)"
    },
    "POWER.RAM<m>.POWERSET": {
      "long_name": "POWER.RAM<m>.POWERSET (at 0x40000904, write-only)",
      "purpose": "RAM0 power control set register\n\nS0POWER, bit [0]      - Keep RAM section S0 of RAM0 on or off in System ON mode;\n                        1 for On (On)\nS1POWER, bit [1]      - Keep RAM section S1 of RAM0 on or off in System ON mode;\n                        1 for On (On)\nS0RETENTION, bit [16] - Keep retention on RAM section S0 when RAM section is\n                        switched off; 1 for On (On)\nS1RETENTION, bit [17] - Keep retention on RAM section S1 when RAM section is\n                        switched off; 1 for On (On)"
    },
    "POWER.RAMON": {
      "long_name": "POWER.RAMON (at 0x40000524, read-write)",
      "purpose": "Deprecated register -  RAM on/off register (this register is retained)\n\nONRAM0, bit [0]   - Keep RAM block 0 on or off in system ON Mode\nONRAM1, bit [1]   - Keep RAM block 1 on or off in system ON Mode\nOFFRAM0, bit [16] - Keep retention on RAM block 0 when RAM block is switched off\nOFFRAM1, bit [17] - Keep retention on RAM block 1 when RAM block is switched off"
    },
    "POWER.RAMONB": {
      "long_name": "POWER.RAMONB (at 0x40000554, read-write)",
      "purpose": "Deprecated register -  RAM on/off register (this register is retained)\n\nONRAM2, bit [0]   - Keep RAM block 2 on or off in system ON Mode\nONRAM3, bit [1]   - Keep RAM block 3 on or off in system ON Mode\nOFFRAM2, bit [16] - Keep retention on RAM block 2 when RAM block is switched off\nOFFRAM3, bit [17] - Keep retention on RAM block 3 when RAM block is switched off"
    },
    "POWER.RAMSTATUS": {
      "long_name": "POWER.RAMSTATUS (at 0x40000428, read-only)",
      "purpose": "Deprecated register -  RAM status register\n\nRAMBLOCK0, bit [0] - RAM block 0 is on or off/powering up\nRAMBLOCK1, bit [1] - RAM block 1 is on or off/powering up\nRAMBLOCK2, bit [2] - RAM block 2 is on or off/powering up\nRAMBLOCK3, bit [3] - RAM block 3 is on or off/powering up"
    },
    "POWER.RESETREAS": {
      "long_name": "POWER.RESETREAS (at 0x40000400, read-write)",
      "purpose": "Reset reason\n\nRESETPIN, bit [0] - Reset from pin-reset detected\nDOG, bit [1]      - Reset from watchdog detected\nSREQ, bit [2]     - Reset from soft reset detected\nLOCKUP, bit [3]   - Reset from CPU lock-up detected\nOFF, bit [16]     - Reset due to wake up from System OFF mode when wakeup is\n                    triggered from DETECT signal from GPIO\nLPCOMP, bit [17]  - Reset due to wake up from System OFF mode when wakeup is\n                    triggered from ANADETECT signal from LPCOMP\nDIF, bit [18]     - Reset due to wake up from System OFF mode when wakeup is\n                    triggered from entering into debug interface mode\nNFC, bit [19]     - Reset due to wake up from System OFF mode by NFC field\n                    detect"
    },
    "POWER.SYSTEMOFF": {
      "long_name": "POWER.SYSTEMOFF (at 0x40000500, write-only)",
      "purpose": "System OFF register\n\nSYSTEMOFF, bit [0] - Enable System OFF mode; 1 for Enter (Enable System OFF\n                     mode)"
    },
    "POWER.TASKS_CONSTLAT": {
      "long_name": "POWER.TASKS_CONSTLAT (at 0x40000078, write-only)",
      "purpose": "Enable constant latency mode"
    },
    "POWER.TASKS_LOWPWR": {
      "long_name": "POWER.TASKS_LOWPWR (at 0x4000007c, write-only)",
      "purpose": "Enable low power mode (variable latency)"
    },
    "PPI.CH<m>.EEP": {
      "long_name": "PPI.CH<m>.EEP (at 0x4001f510, read-write)",
      "purpose": "Channel <m> event end-point\n\nEEP, bits [0:31] - Pointer to event register. Accepts only addresses to\n                   registers from the Event group."
    },
    "PPI.CH<m>.TEP": {
      "long_name": "PPI.CH<m>.TEP (at 0x4001f514, read-write)",
      "purpose": "Channel <m> task end-point\n\nTEP, bits [0:31] - Pointer to task register. Accepts only addresses to registers\n                   from the Task group."
    },
    "PPI.CHEN": {
      "long_name": "PPI.CHEN (at 0x4001f500, read-write)",
      "purpose": "Channel enable register\n\nCH0, bit [0]   - Enable or disable channel 0\nCH1, bit [1]   - Enable or disable channel 1\nCH2, bit [2]   - Enable or disable channel 2\nCH3, bit [3]   - Enable or disable channel 3\nCH4, bit [4]   - Enable or disable channel 4\nCH5, bit [5]   - Enable or disable channel 5\nCH6, bit [6]   - Enable or disable channel 6\nCH7, bit [7]   - Enable or disable channel 7\nCH8, bit [8]   - Enable or disable channel 8\nCH9, bit [9]   - Enable or disable channel 9\nCH10, bit [10] - Enable or disable channel 10\nCH11, bit [11] - Enable or disable channel 11\nCH12, bit [12] - Enable or disable channel 12\nCH13, bit [13] - Enable or disable channel 13\nCH14, bit [14] - Enable or disable channel 14\nCH15, bit [15] - Enable or disable channel 15\nCH16, bit [16] - Enable or disable channel 16\nCH17, bit [17] - Enable or disable channel 17\nCH18, bit [18] - Enable or disable channel 18\nCH19, bit [19] - Enable or disable channel 19\nCH20, bit [20] - Enable or disable channel 20\nCH21, bit [21] - Enable or disable channel 21\nCH22, bit [22] - Enable or disable channel 22\nCH23, bit [23] - Enable or disable channel 23\nCH24, bit [24] - Enable or disable channel 24\nCH25, bit [25] - Enable or disable channel 25\nCH26, bit [26] - Enable or disable channel 26\nCH27, bit [27] - Enable or disable channel 27\nCH28, bit [28] - Enable or disable channel 28\nCH29, bit [29] - Enable or disable channel 29\nCH30, bit [30] - Enable or disable channel 30\nCH31, bit [31] - Enable or disable channel 31"
    },
    "PPI.CHENCLR": {
      "long_name": "PPI.CHENCLR (at 0x4001f508, read-write)",
      "purpose": "Channel enable clear register\n\nCH0, bit [0]   - Channel 0 enable clear register.  Writing '0' has no effect\nCH1, bit [1]   - Channel 1 enable clear register.  Writing '0' has no effect\nCH2, bit [2]   - Channel 2 enable clear register.  Writing '0' has no effect\nCH3, bit [3]   - Channel 3 enable clear register.  Writing '0' has no effect\nCH4, bit [4]   - Channel 4 enable clear register.  Writing '0' has no effect\nCH5, bit [5]   - Channel 5 enable clear register.  Writing '0' has no effect\nCH6, bit [6]   - Channel 6 enable clear register.  Writing '0' has no effect\nCH7, bit [7]   - Channel 7 enable clear register.  Writing '0' has no effect\nCH8, bit [8]   - Channel 8 enable clear register.  Writing '0' has no effect\nCH9, bit [9]   - Channel 9 enable clear register.  Writing '0' has no effect\nCH10, bit [10] - Channel 10 enable clear register.  Writing '0' has no effect\nCH11, bit [11] - Channel 11 enable clear register.  Writing '0' has no effect\nCH12, bit [12] - Channel 12 enable clear register.  Writing '0' has no effect\nCH13, bit [13] - Channel 13 enable clear register.  Writing '0' has no effect\nCH14, bit [14] - Channel 14 enable clear register.  Writing '0' has no effect\nCH15, bit [15] - Channel 15 enable clear register.  Writing '0' has no effect\nCH16, bit [16] - Channel 16 enable clear register.  Writing '0' has no effect\nCH17, bit [17] - Channel 17 enable clear register.  Writing '0' has no effect\nCH18, bit [18] - Channel 18 enable clear register.  Writing '0' has no effect\nCH19, bit [19] - Channel 19 enable clear register.  Writing '0' has no effect\nCH20, bit [20] - Channel 20 enable clear register.  Writing '0' has no effect\nCH21, bit [21] - Channel 21 enable clear register.  Writing '0' has no effect\nCH22, bit [22] - Channel 22 enable clear register.  Writing '0' has no effect\nCH23, bit [23] - Channel 23 enable clear register.  Writing '0' has no effect\nCH24, bit [24] - Channel 24 enable clear register.  Writing '0' has no effect\nCH25, bit [25] - Channel 25 enable clear register.  Writing '0' has no effect\nCH26, bit [26] - Channel 26 enable clear register.  Writing '0' has no effect\nCH27, bit [27] - Channel 27 enable clear register.  Writing '0' has no effect\nCH28, bit [28] - Channel 28 enable clear register.  Writing '0' has no effect\nCH29, bit [29] - Channel 29 enable clear register.  Writing '0' has no effect\nCH30, bit [30] - Channel 30 enable clear register.  Writing '0' has no effect\nCH31, bit [31] - Channel 31 enable clear register.  Writing '0' has no effect"
    },
    "PPI.CHENSET": {
      "long_name": "PPI.CHENSET (at 0x4001f504, read-write)",
      "purpose": "Channel enable set register\n\nCH0, bit [0]   - Channel 0 enable set register.  Writing '0' has no effect\nCH1, bit [1]   - Channel 1 enable set register.  Writing '0' has no effect\nCH2, bit [2]   - Channel 2 enable set register.  Writing '0' has no effect\nCH3, bit [3]   - Channel 3 enable set register.  Writing '0' has no effect\nCH4, bit [4]   - Channel 4 enable set register.  Writing '0' has no effect\nCH5, bit [5]   - Channel 5 enable set register.  Writing '0' has no effect\nCH6, bit [6]   - Channel 6 enable set register.  Writing '0' has no effect\nCH7, bit [7]   - Channel 7 enable set register.  Writing '0' has no effect\nCH8, bit [8]   - Channel 8 enable set register.  Writing '0' has no effect\nCH9, bit [9]   - Channel 9 enable set register.  Writing '0' has no effect\nCH10, bit [10] - Channel 10 enable set register.  Writing '0' has no effect\nCH11, bit [11] - Channel 11 enable set register.  Writing '0' has no effect\nCH12, bit [12] - Channel 12 enable set register.  Writing '0' has no effect\nCH13, bit [13] - Channel 13 enable set register.  Writing '0' has no effect\nCH14, bit [14] - Channel 14 enable set register.  Writing '0' has no effect\nCH15, bit [15] - Channel 15 enable set register.  Writing '0' has no effect\nCH16, bit [16] - Channel 16 enable set register.  Writing '0' has no effect\nCH17, bit [17] - Channel 17 enable set register.  Writing '0' has no effect\nCH18, bit [18] - Channel 18 enable set register.  Writing '0' has no effect\nCH19, bit [19] - Channel 19 enable set register.  Writing '0' has no effect\nCH20, bit [20] - Channel 20 enable set register.  Writing '0' has no effect\nCH21, bit [21] - Channel 21 enable set register.  Writing '0' has no effect\nCH22, bit [22] - Channel 22 enable set register.  Writing '0' has no effect\nCH23, bit [23] - Channel 23 enable set register.  Writing '0' has no effect\nCH24, bit [24] - Channel 24 enable set register.  Writing '0' has no effect\nCH25, bit [25] - Channel 25 enable set register.  Writing '0' has no effect\nCH26, bit [26] - Channel 26 enable set register.  Writing '0' has no effect\nCH27, bit [27] - Channel 27 enable set register.  Writing '0' has no effect\nCH28, bit [28] - Channel 28 enable set register.  Writing '0' has no effect\nCH29, bit [29] - Channel 29 enable set register.  Writing '0' has no effect\nCH30, bit [30] - Channel 30 enable set register.  Writing '0' has no effect\nCH31, bit [31] - Channel 31 enable set register.  Writing '0' has no effect"
    },
    "PPI.CHG<n>": {
      "long_name": "PPI.CHG<n> (at 0x4001f800, read-write)",
      "purpose": "Channel group <n>\n\nCH0, bit [0]   - Include or exclude channel 0\nCH1, bit [1]   - Include or exclude channel 1\nCH2, bit [2]   - Include or exclude channel 2\nCH3, bit [3]   - Include or exclude channel 3\nCH4, bit [4]   - Include or exclude channel 4\nCH5, bit [5]   - Include or exclude channel 5\nCH6, bit [6]   - Include or exclude channel 6\nCH7, bit [7]   - Include or exclude channel 7\nCH8, bit [8]   - Include or exclude channel 8\nCH9, bit [9]   - Include or exclude channel 9\nCH10, bit [10] - Include or exclude channel 10\nCH11, bit [11] - Include or exclude channel 11\nCH12, bit [12] - Include or exclude channel 12\nCH13, bit [13] - Include or exclude channel 13\nCH14, bit [14] - Include or exclude channel 14\nCH15, bit [15] - Include or exclude channel 15\nCH16, bit [16] - Include or exclude channel 16\nCH17, bit [17] - Include or exclude channel 17\nCH18, bit [18] - Include or exclude channel 18\nCH19, bit [19] - Include or exclude channel 19\nCH20, bit [20] - Include or exclude channel 20\nCH21, bit [21] - Include or exclude channel 21\nCH22, bit [22] - Include or exclude channel 22\nCH23, bit [23] - Include or exclude channel 23\nCH24, bit [24] - Include or exclude channel 24\nCH25, bit [25] - Include or exclude channel 25\nCH26, bit [26] - Include or exclude channel 26\nCH27, bit [27] - Include or exclude channel 27\nCH28, bit [28] - Include or exclude channel 28\nCH29, bit [29] - Include or exclude channel 29\nCH30, bit [30] - Include or exclude channel 30\nCH31, bit [31] - Include or exclude channel 31"
    },
    "PPI.FORK<m>.TEP": {
      "long_name": "PPI.FORK<m>.TEP (at 0x4001f910, read-write)",
      "purpose": "Channel <m> task end-point\n\nTEP, bits [0:31] - Pointer to task register"
    },
    "PPI.TASKS_CHG<m>.DIS": {
      "long_name": "PPI.TASKS_CHG<m>.DIS (at 0x4001f004, write-only)",
      "purpose": "Disable channel group <m>"
    },
    "PPI.TASKS_CHG<m>.EN": {
      "long_name": "PPI.TASKS_CHG<m>.EN (at 0x4001f000, write-only)",
      "purpose": "Enable channel group <m>"
    },
    "PRIMASK": {
      "long_name": "Priority mask register (PRIMASK)",
      "purpose": "PriMask, bit [0] - Prevent the activation of all exceptions with configurable\n                   priority"
    },
    "PSP": {
      "long_name": "Process stack pointer (PSP)",
      "purpose": ""
    },
    "PWM0.COUNTERTOP": {
      "long_name": "PWM0.COUNTERTOP (at 0x4001c508, read-write)",
      "purpose": "Value up to which the pulse generator counter counts\n\nCOUNTERTOP, bits [0:14] - Value up to which the pulse generator counter counts.\n                          This register is ignored when DECODER.MODE=WaveForm\n                          and only values from RAM will be used."
    },
    "PWM0.DECODER": {
      "long_name": "PWM0.DECODER (at 0x4001c510, read-write)",
      "purpose": "Configuration of the decoder\n\nLOAD, bits [0:1] - How a sequence is read from RAM and spread to the compare\n                   register; 0 for Common (1st half word (16-bit) used in all\n                   PWM channels 0..3), 1 for Grouped (1st half word (16-bit)\n                   used in channel 0..1; 2nd word in channel 2..3), 2 for\n                   Individual (1st half word (16-bit) in ch.0; 2nd in ch.1; ...;\n                   4th in ch.3), 3 for WaveForm (1st half word (16-bit) in ch.0;\n                   2nd in ch.1; ...; 4th in COUNTERTOP)\nMODE, bit [8]    - Selects source for advancing the active sequence"
    },
    "PWM0.ENABLE": {
      "long_name": "PWM0.ENABLE (at 0x4001c500, read-write)",
      "purpose": "PWM module enable register\n\nENABLE, bit [0] - Enable or disable PWM module"
    },
    "PWM0.EVENTS_LOOPSDONE": {
      "long_name": "PWM0.EVENTS_LOOPSDONE (at 0x4001c11c, read-write)",
      "purpose": "Concatenated sequences have been played the amount of times defined in LOOP.CNT"
    },
    "PWM0.EVENTS_PWMPERIODEND": {
      "long_name": "PWM0.EVENTS_PWMPERIODEND (at 0x4001c118, read-write)",
      "purpose": "Emitted at the end of each PWM period"
    },
    "PWM0.EVENTS_SEQEND<n>": {
      "long_name": "PWM0.EVENTS_SEQEND<n> (at 0x4001c110, read-write)",
      "purpose": "Emitted at end of every sequence <n>, when last value from RAM has been applied\nto wave counter"
    },
    "PWM0.EVENTS_SEQSTARTED<n>": {
      "long_name": "PWM0.EVENTS_SEQSTARTED<n> (at 0x4001c108, read-write)",
      "purpose": "First PWM period started on sequence <n>"
    },
    "PWM0.EVENTS_STOPPED": {
      "long_name": "PWM0.EVENTS_STOPPED (at 0x4001c104, read-write)",
      "purpose": "Response to STOP task, emitted when PWM pulses are no longer generated"
    },
    "PWM0.INTEN": {
      "long_name": "PWM0.INTEN (at 0x4001c300, read-write)",
      "purpose": "Enable or disable interrupt\n\nSTOPPED, bit [1]      - Enable or disable interrupt for STOPPED event\nSEQSTARTED0, bit [2]  - Enable or disable interrupt for SEQSTARTED[0] event\nSEQSTARTED1, bit [3]  - Enable or disable interrupt for SEQSTARTED[1] event\nSEQEND0, bit [4]      - Enable or disable interrupt for SEQEND[0] event\nSEQEND1, bit [5]      - Enable or disable interrupt for SEQEND[1] event\nPWMPERIODEND, bit [6] - Enable or disable interrupt for PWMPERIODEND event\nLOOPSDONE, bit [7]    - Enable or disable interrupt for LOOPSDONE event"
    },
    "PWM0.INTENCLR": {
      "long_name": "PWM0.INTENCLR (at 0x4001c308, read-write)",
      "purpose": "Disable interrupt\n\nSTOPPED, bit [1]      - Write '1' to Disable interrupt for STOPPED event\nSEQSTARTED0, bit [2]  - Write '1' to Disable interrupt for SEQSTARTED[0] event\nSEQSTARTED1, bit [3]  - Write '1' to Disable interrupt for SEQSTARTED[1] event\nSEQEND0, bit [4]      - Write '1' to Disable interrupt for SEQEND[0] event\nSEQEND1, bit [5]      - Write '1' to Disable interrupt for SEQEND[1] event\nPWMPERIODEND, bit [6] - Write '1' to Disable interrupt for PWMPERIODEND event\nLOOPSDONE, bit [7]    - Write '1' to Disable interrupt for LOOPSDONE event"
    },
    "PWM0.INTENSET": {
      "long_name": "PWM0.INTENSET (at 0x4001c304, read-write)",
      "purpose": "Enable interrupt\n\nSTOPPED, bit [1]      - Write '1' to Enable interrupt for STOPPED event\nSEQSTARTED0, bit [2]  - Write '1' to Enable interrupt for SEQSTARTED[0] event\nSEQSTARTED1, bit [3]  - Write '1' to Enable interrupt for SEQSTARTED[1] event\nSEQEND0, bit [4]      - Write '1' to Enable interrupt for SEQEND[0] event\nSEQEND1, bit [5]      - Write '1' to Enable interrupt for SEQEND[1] event\nPWMPERIODEND, bit [6] - Write '1' to Enable interrupt for PWMPERIODEND event\nLOOPSDONE, bit [7]    - Write '1' to Enable interrupt for LOOPSDONE event"
    },
    "PWM0.LOOP": {
      "long_name": "PWM0.LOOP (at 0x4001c514, read-write)",
      "purpose": "Amount of playback of a loop\n\nCNT, bits [0:15] - Amount of playback of pattern cycles; 0 for Disabled (Looping\n                   disabled (stop at the end of the sequence))"
    },
    "PWM0.MODE": {
      "long_name": "PWM0.MODE (at 0x4001c504, read-write)",
      "purpose": "Selects operating mode of the wave counter\n\nUPDOWN, bit [0] - Selects up or up and down as wave counter mode"
    },
    "PWM0.PRESCALER": {
      "long_name": "PWM0.PRESCALER (at 0x4001c50c, read-write)",
      "purpose": "Configuration for PWM_CLK\n\nPRESCALER, bits [0:2] - Pre-scaler of PWM_CLK; 0 for DIV_1 (Divide by   1\n                        (16MHz)), 1 for DIV_2 (Divide by   2 ( 8MHz)), 2 for\n                        DIV_4 (Divide by   4 ( 4MHz)), 3 for DIV_8 (Divide by\n                        8 ( 2MHz)), 4 for DIV_16 (Divide by  16 ( 1MHz)), 5 for\n                        DIV_32 (Divide by  32 ( 500kHz)), 6 for DIV_64 (Divide\n                        by  64 ( 250kHz)), 7 for DIV_128 (Divide by 128 (\n                        125kHz))"
    },
    "PWM0.PSEL.OUT<n>": {
      "long_name": "PWM0.PSEL.OUT<n> (at 0x4001c560, read-write)",
      "purpose": "Output pin select for PWM channel <n>\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "PWM0.SEQ<m>.CNT": {
      "long_name": "PWM0.SEQ<m>.CNT (at 0x4001c524, read-write)",
      "purpose": "Amount of values (duty cycles) in this sequence\n\nCNT, bits [0:14] - Amount of values (duty cycles) in this sequence; 0 for\n                   Disabled (Sequence is disabled, and shall not be started as\n                   it is empty)"
    },
    "PWM0.SEQ<m>.ENDDELAY": {
      "long_name": "PWM0.SEQ<m>.ENDDELAY (at 0x4001c52c, read-write)",
      "purpose": "Time added after the sequence\n\nCNT, bits [0:23] - Time added after the sequence in PWM periods"
    },
    "PWM0.SEQ<m>.PTR": {
      "long_name": "PWM0.SEQ<m>.PTR (at 0x4001c520, read-write)",
      "purpose": "Beginning address in Data RAM of this sequence\n\nPTR, bits [0:31] - Beginning address in Data RAM of this sequence"
    },
    "PWM0.SEQ<m>.REFRESH": {
      "long_name": "PWM0.SEQ<m>.REFRESH (at 0x4001c528, read-write)",
      "purpose": "Amount of additional PWM periods between samples loaded into compare register\n\nCNT, bits [0:23] - Amount of additional PWM periods between samples loaded into\n                   compare register (load every REFRESH.CNT+1 PWM periods); 0\n                   for Continuous (Update every PWM period)"
    },
    "PWM0.SHORTS": {
      "long_name": "PWM0.SHORTS (at 0x4001c200, read-write)",
      "purpose": "Shortcut register\n\nSEQEND0_STOP, bit [0]        - Shortcut between SEQEND[0] event and STOP task\nSEQEND1_STOP, bit [1]        - Shortcut between SEQEND[1] event and STOP task\nLOOPSDONE_SEQSTART0, bit [2] - Shortcut between LOOPSDONE event and SEQSTART[0]\n                               task\nLOOPSDONE_SEQSTART1, bit [3] - Shortcut between LOOPSDONE event and SEQSTART[1]\n                               task\nLOOPSDONE_STOP, bit [4]      - Shortcut between LOOPSDONE event and STOP task"
    },
    "PWM0.TASKS_NEXTSTEP": {
      "long_name": "PWM0.TASKS_NEXTSTEP (at 0x4001c010, write-only)",
      "purpose": "Steps by one value in the current sequence on all enabled channels if\nDECODER.MODE=NextStep. Does not cause PWM generation to start it was not\nrunning."
    },
    "PWM0.TASKS_SEQSTART<n>": {
      "long_name": "PWM0.TASKS_SEQSTART<n> (at 0x4001c008, write-only)",
      "purpose": "Loads the first PWM value on all enabled channels from sequence <n>, and starts\nplaying that sequence at the rate defined in SEQ<n>REFRESH and/or DECODER.MODE.\nCauses PWM generation to start it was not running."
    },
    "PWM0.TASKS_STOP": {
      "long_name": "PWM0.TASKS_STOP (at 0x4001c004, write-only)",
      "purpose": "Stops PWM pulse generation on all channels at the end of current PWM period, and\nstops sequence playback"
    },
    "PWM1.COUNTERTOP": {
      "long_name": "PWM1.COUNTERTOP (at 0x40021508, read-write)",
      "purpose": "Value up to which the pulse generator counter counts\n\nCOUNTERTOP, bits [0:14] - Value up to which the pulse generator counter counts.\n                          This register is ignored when DECODER.MODE=WaveForm\n                          and only values from RAM will be used."
    },
    "PWM1.DECODER": {
      "long_name": "PWM1.DECODER (at 0x40021510, read-write)",
      "purpose": "Configuration of the decoder\n\nLOAD, bits [0:1] - How a sequence is read from RAM and spread to the compare\n                   register; 0 for Common (1st half word (16-bit) used in all\n                   PWM channels 0..3), 1 for Grouped (1st half word (16-bit)\n                   used in channel 0..1; 2nd word in channel 2..3), 2 for\n                   Individual (1st half word (16-bit) in ch.0; 2nd in ch.1; ...;\n                   4th in ch.3), 3 for WaveForm (1st half word (16-bit) in ch.0;\n                   2nd in ch.1; ...; 4th in COUNTERTOP)\nMODE, bit [8]    - Selects source for advancing the active sequence"
    },
    "PWM1.ENABLE": {
      "long_name": "PWM1.ENABLE (at 0x40021500, read-write)",
      "purpose": "PWM module enable register\n\nENABLE, bit [0] - Enable or disable PWM module"
    },
    "PWM1.EVENTS_LOOPSDONE": {
      "long_name": "PWM1.EVENTS_LOOPSDONE (at 0x4002111c, read-write)",
      "purpose": "Concatenated sequences have been played the amount of times defined in LOOP.CNT"
    },
    "PWM1.EVENTS_PWMPERIODEND": {
      "long_name": "PWM1.EVENTS_PWMPERIODEND (at 0x40021118, read-write)",
      "purpose": "Emitted at the end of each PWM period"
    },
    "PWM1.EVENTS_SEQEND<n>": {
      "long_name": "PWM1.EVENTS_SEQEND<n> (at 0x40021110, read-write)",
      "purpose": "Emitted at end of every sequence <n>, when last value from RAM has been applied\nto wave counter"
    },
    "PWM1.EVENTS_SEQSTARTED<n>": {
      "long_name": "PWM1.EVENTS_SEQSTARTED<n> (at 0x40021108, read-write)",
      "purpose": "First PWM period started on sequence <n>"
    },
    "PWM1.EVENTS_STOPPED": {
      "long_name": "PWM1.EVENTS_STOPPED (at 0x40021104, read-write)",
      "purpose": "Response to STOP task, emitted when PWM pulses are no longer generated"
    },
    "PWM1.INTEN": {
      "long_name": "PWM1.INTEN (at 0x40021300, read-write)",
      "purpose": "Enable or disable interrupt\n\nSTOPPED, bit [1]      - Enable or disable interrupt for STOPPED event\nSEQSTARTED0, bit [2]  - Enable or disable interrupt for SEQSTARTED[0] event\nSEQSTARTED1, bit [3]  - Enable or disable interrupt for SEQSTARTED[1] event\nSEQEND0, bit [4]      - Enable or disable interrupt for SEQEND[0] event\nSEQEND1, bit [5]      - Enable or disable interrupt for SEQEND[1] event\nPWMPERIODEND, bit [6] - Enable or disable interrupt for PWMPERIODEND event\nLOOPSDONE, bit [7]    - Enable or disable interrupt for LOOPSDONE event"
    },
    "PWM1.INTENCLR": {
      "long_name": "PWM1.INTENCLR (at 0x40021308, read-write)",
      "purpose": "Disable interrupt\n\nSTOPPED, bit [1]      - Write '1' to Disable interrupt for STOPPED event\nSEQSTARTED0, bit [2]  - Write '1' to Disable interrupt for SEQSTARTED[0] event\nSEQSTARTED1, bit [3]  - Write '1' to Disable interrupt for SEQSTARTED[1] event\nSEQEND0, bit [4]      - Write '1' to Disable interrupt for SEQEND[0] event\nSEQEND1, bit [5]      - Write '1' to Disable interrupt for SEQEND[1] event\nPWMPERIODEND, bit [6] - Write '1' to Disable interrupt for PWMPERIODEND event\nLOOPSDONE, bit [7]    - Write '1' to Disable interrupt for LOOPSDONE event"
    },
    "PWM1.INTENSET": {
      "long_name": "PWM1.INTENSET (at 0x40021304, read-write)",
      "purpose": "Enable interrupt\n\nSTOPPED, bit [1]      - Write '1' to Enable interrupt for STOPPED event\nSEQSTARTED0, bit [2]  - Write '1' to Enable interrupt for SEQSTARTED[0] event\nSEQSTARTED1, bit [3]  - Write '1' to Enable interrupt for SEQSTARTED[1] event\nSEQEND0, bit [4]      - Write '1' to Enable interrupt for SEQEND[0] event\nSEQEND1, bit [5]      - Write '1' to Enable interrupt for SEQEND[1] event\nPWMPERIODEND, bit [6] - Write '1' to Enable interrupt for PWMPERIODEND event\nLOOPSDONE, bit [7]    - Write '1' to Enable interrupt for LOOPSDONE event"
    },
    "PWM1.LOOP": {
      "long_name": "PWM1.LOOP (at 0x40021514, read-write)",
      "purpose": "Amount of playback of a loop\n\nCNT, bits [0:15] - Amount of playback of pattern cycles; 0 for Disabled (Looping\n                   disabled (stop at the end of the sequence))"
    },
    "PWM1.MODE": {
      "long_name": "PWM1.MODE (at 0x40021504, read-write)",
      "purpose": "Selects operating mode of the wave counter\n\nUPDOWN, bit [0] - Selects up or up and down as wave counter mode"
    },
    "PWM1.PRESCALER": {
      "long_name": "PWM1.PRESCALER (at 0x4002150c, read-write)",
      "purpose": "Configuration for PWM_CLK\n\nPRESCALER, bits [0:2] - Pre-scaler of PWM_CLK; 0 for DIV_1 (Divide by   1\n                        (16MHz)), 1 for DIV_2 (Divide by   2 ( 8MHz)), 2 for\n                        DIV_4 (Divide by   4 ( 4MHz)), 3 for DIV_8 (Divide by\n                        8 ( 2MHz)), 4 for DIV_16 (Divide by  16 ( 1MHz)), 5 for\n                        DIV_32 (Divide by  32 ( 500kHz)), 6 for DIV_64 (Divide\n                        by  64 ( 250kHz)), 7 for DIV_128 (Divide by 128 (\n                        125kHz))"
    },
    "PWM1.PSEL.OUT<n>": {
      "long_name": "PWM1.PSEL.OUT<n> (at 0x40021560, read-write)",
      "purpose": "Output pin select for PWM channel <n>\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "PWM1.SEQ<m>.CNT": {
      "long_name": "PWM1.SEQ<m>.CNT (at 0x40021524, read-write)",
      "purpose": "Amount of values (duty cycles) in this sequence\n\nCNT, bits [0:14] - Amount of values (duty cycles) in this sequence; 0 for\n                   Disabled (Sequence is disabled, and shall not be started as\n                   it is empty)"
    },
    "PWM1.SEQ<m>.ENDDELAY": {
      "long_name": "PWM1.SEQ<m>.ENDDELAY (at 0x4002152c, read-write)",
      "purpose": "Time added after the sequence\n\nCNT, bits [0:23] - Time added after the sequence in PWM periods"
    },
    "PWM1.SEQ<m>.PTR": {
      "long_name": "PWM1.SEQ<m>.PTR (at 0x40021520, read-write)",
      "purpose": "Beginning address in Data RAM of this sequence\n\nPTR, bits [0:31] - Beginning address in Data RAM of this sequence"
    },
    "PWM1.SEQ<m>.REFRESH": {
      "long_name": "PWM1.SEQ<m>.REFRESH (at 0x40021528, read-write)",
      "purpose": "Amount of additional PWM periods between samples loaded into compare register\n\nCNT, bits [0:23] - Amount of additional PWM periods between samples loaded into\n                   compare register (load every REFRESH.CNT+1 PWM periods); 0\n                   for Continuous (Update every PWM period)"
    },
    "PWM1.SHORTS": {
      "long_name": "PWM1.SHORTS (at 0x40021200, read-write)",
      "purpose": "Shortcut register\n\nSEQEND0_STOP, bit [0]        - Shortcut between SEQEND[0] event and STOP task\nSEQEND1_STOP, bit [1]        - Shortcut between SEQEND[1] event and STOP task\nLOOPSDONE_SEQSTART0, bit [2] - Shortcut between LOOPSDONE event and SEQSTART[0]\n                               task\nLOOPSDONE_SEQSTART1, bit [3] - Shortcut between LOOPSDONE event and SEQSTART[1]\n                               task\nLOOPSDONE_STOP, bit [4]      - Shortcut between LOOPSDONE event and STOP task"
    },
    "PWM1.TASKS_NEXTSTEP": {
      "long_name": "PWM1.TASKS_NEXTSTEP (at 0x40021010, write-only)",
      "purpose": "Steps by one value in the current sequence on all enabled channels if\nDECODER.MODE=NextStep. Does not cause PWM generation to start it was not\nrunning."
    },
    "PWM1.TASKS_SEQSTART<n>": {
      "long_name": "PWM1.TASKS_SEQSTART<n> (at 0x40021008, write-only)",
      "purpose": "Loads the first PWM value on all enabled channels from sequence <n>, and starts\nplaying that sequence at the rate defined in SEQ<n>REFRESH and/or DECODER.MODE.\nCauses PWM generation to start it was not running."
    },
    "PWM1.TASKS_STOP": {
      "long_name": "PWM1.TASKS_STOP (at 0x40021004, write-only)",
      "purpose": "Stops PWM pulse generation on all channels at the end of current PWM period, and\nstops sequence playback"
    },
    "PWM2.COUNTERTOP": {
      "long_name": "PWM2.COUNTERTOP (at 0x40022508, read-write)",
      "purpose": "Value up to which the pulse generator counter counts\n\nCOUNTERTOP, bits [0:14] - Value up to which the pulse generator counter counts.\n                          This register is ignored when DECODER.MODE=WaveForm\n                          and only values from RAM will be used."
    },
    "PWM2.DECODER": {
      "long_name": "PWM2.DECODER (at 0x40022510, read-write)",
      "purpose": "Configuration of the decoder\n\nLOAD, bits [0:1] - How a sequence is read from RAM and spread to the compare\n                   register; 0 for Common (1st half word (16-bit) used in all\n                   PWM channels 0..3), 1 for Grouped (1st half word (16-bit)\n                   used in channel 0..1; 2nd word in channel 2..3), 2 for\n                   Individual (1st half word (16-bit) in ch.0; 2nd in ch.1; ...;\n                   4th in ch.3), 3 for WaveForm (1st half word (16-bit) in ch.0;\n                   2nd in ch.1; ...; 4th in COUNTERTOP)\nMODE, bit [8]    - Selects source for advancing the active sequence"
    },
    "PWM2.ENABLE": {
      "long_name": "PWM2.ENABLE (at 0x40022500, read-write)",
      "purpose": "PWM module enable register\n\nENABLE, bit [0] - Enable or disable PWM module"
    },
    "PWM2.EVENTS_LOOPSDONE": {
      "long_name": "PWM2.EVENTS_LOOPSDONE (at 0x4002211c, read-write)",
      "purpose": "Concatenated sequences have been played the amount of times defined in LOOP.CNT"
    },
    "PWM2.EVENTS_PWMPERIODEND": {
      "long_name": "PWM2.EVENTS_PWMPERIODEND (at 0x40022118, read-write)",
      "purpose": "Emitted at the end of each PWM period"
    },
    "PWM2.EVENTS_SEQEND<n>": {
      "long_name": "PWM2.EVENTS_SEQEND<n> (at 0x40022110, read-write)",
      "purpose": "Emitted at end of every sequence <n>, when last value from RAM has been applied\nto wave counter"
    },
    "PWM2.EVENTS_SEQSTARTED<n>": {
      "long_name": "PWM2.EVENTS_SEQSTARTED<n> (at 0x40022108, read-write)",
      "purpose": "First PWM period started on sequence <n>"
    },
    "PWM2.EVENTS_STOPPED": {
      "long_name": "PWM2.EVENTS_STOPPED (at 0x40022104, read-write)",
      "purpose": "Response to STOP task, emitted when PWM pulses are no longer generated"
    },
    "PWM2.INTEN": {
      "long_name": "PWM2.INTEN (at 0x40022300, read-write)",
      "purpose": "Enable or disable interrupt\n\nSTOPPED, bit [1]      - Enable or disable interrupt for STOPPED event\nSEQSTARTED0, bit [2]  - Enable or disable interrupt for SEQSTARTED[0] event\nSEQSTARTED1, bit [3]  - Enable or disable interrupt for SEQSTARTED[1] event\nSEQEND0, bit [4]      - Enable or disable interrupt for SEQEND[0] event\nSEQEND1, bit [5]      - Enable or disable interrupt for SEQEND[1] event\nPWMPERIODEND, bit [6] - Enable or disable interrupt for PWMPERIODEND event\nLOOPSDONE, bit [7]    - Enable or disable interrupt for LOOPSDONE event"
    },
    "PWM2.INTENCLR": {
      "long_name": "PWM2.INTENCLR (at 0x40022308, read-write)",
      "purpose": "Disable interrupt\n\nSTOPPED, bit [1]      - Write '1' to Disable interrupt for STOPPED event\nSEQSTARTED0, bit [2]  - Write '1' to Disable interrupt for SEQSTARTED[0] event\nSEQSTARTED1, bit [3]  - Write '1' to Disable interrupt for SEQSTARTED[1] event\nSEQEND0, bit [4]      - Write '1' to Disable interrupt for SEQEND[0] event\nSEQEND1, bit [5]      - Write '1' to Disable interrupt for SEQEND[1] event\nPWMPERIODEND, bit [6] - Write '1' to Disable interrupt for PWMPERIODEND event\nLOOPSDONE, bit [7]    - Write '1' to Disable interrupt for LOOPSDONE event"
    },
    "PWM2.INTENSET": {
      "long_name": "PWM2.INTENSET (at 0x40022304, read-write)",
      "purpose": "Enable interrupt\n\nSTOPPED, bit [1]      - Write '1' to Enable interrupt for STOPPED event\nSEQSTARTED0, bit [2]  - Write '1' to Enable interrupt for SEQSTARTED[0] event\nSEQSTARTED1, bit [3]  - Write '1' to Enable interrupt for SEQSTARTED[1] event\nSEQEND0, bit [4]      - Write '1' to Enable interrupt for SEQEND[0] event\nSEQEND1, bit [5]      - Write '1' to Enable interrupt for SEQEND[1] event\nPWMPERIODEND, bit [6] - Write '1' to Enable interrupt for PWMPERIODEND event\nLOOPSDONE, bit [7]    - Write '1' to Enable interrupt for LOOPSDONE event"
    },
    "PWM2.LOOP": {
      "long_name": "PWM2.LOOP (at 0x40022514, read-write)",
      "purpose": "Amount of playback of a loop\n\nCNT, bits [0:15] - Amount of playback of pattern cycles; 0 for Disabled (Looping\n                   disabled (stop at the end of the sequence))"
    },
    "PWM2.MODE": {
      "long_name": "PWM2.MODE (at 0x40022504, read-write)",
      "purpose": "Selects operating mode of the wave counter\n\nUPDOWN, bit [0] - Selects up or up and down as wave counter mode"
    },
    "PWM2.PRESCALER": {
      "long_name": "PWM2.PRESCALER (at 0x4002250c, read-write)",
      "purpose": "Configuration for PWM_CLK\n\nPRESCALER, bits [0:2] - Pre-scaler of PWM_CLK; 0 for DIV_1 (Divide by   1\n                        (16MHz)), 1 for DIV_2 (Divide by   2 ( 8MHz)), 2 for\n                        DIV_4 (Divide by   4 ( 4MHz)), 3 for DIV_8 (Divide by\n                        8 ( 2MHz)), 4 for DIV_16 (Divide by  16 ( 1MHz)), 5 for\n                        DIV_32 (Divide by  32 ( 500kHz)), 6 for DIV_64 (Divide\n                        by  64 ( 250kHz)), 7 for DIV_128 (Divide by 128 (\n                        125kHz))"
    },
    "PWM2.PSEL.OUT<n>": {
      "long_name": "PWM2.PSEL.OUT<n> (at 0x40022560, read-write)",
      "purpose": "Output pin select for PWM channel <n>\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "PWM2.SEQ<m>.CNT": {
      "long_name": "PWM2.SEQ<m>.CNT (at 0x40022524, read-write)",
      "purpose": "Amount of values (duty cycles) in this sequence\n\nCNT, bits [0:14] - Amount of values (duty cycles) in this sequence; 0 for\n                   Disabled (Sequence is disabled, and shall not be started as\n                   it is empty)"
    },
    "PWM2.SEQ<m>.ENDDELAY": {
      "long_name": "PWM2.SEQ<m>.ENDDELAY (at 0x4002252c, read-write)",
      "purpose": "Time added after the sequence\n\nCNT, bits [0:23] - Time added after the sequence in PWM periods"
    },
    "PWM2.SEQ<m>.PTR": {
      "long_name": "PWM2.SEQ<m>.PTR (at 0x40022520, read-write)",
      "purpose": "Beginning address in Data RAM of this sequence\n\nPTR, bits [0:31] - Beginning address in Data RAM of this sequence"
    },
    "PWM2.SEQ<m>.REFRESH": {
      "long_name": "PWM2.SEQ<m>.REFRESH (at 0x40022528, read-write)",
      "purpose": "Amount of additional PWM periods between samples loaded into compare register\n\nCNT, bits [0:23] - Amount of additional PWM periods between samples loaded into\n                   compare register (load every REFRESH.CNT+1 PWM periods); 0\n                   for Continuous (Update every PWM period)"
    },
    "PWM2.SHORTS": {
      "long_name": "PWM2.SHORTS (at 0x40022200, read-write)",
      "purpose": "Shortcut register\n\nSEQEND0_STOP, bit [0]        - Shortcut between SEQEND[0] event and STOP task\nSEQEND1_STOP, bit [1]        - Shortcut between SEQEND[1] event and STOP task\nLOOPSDONE_SEQSTART0, bit [2] - Shortcut between LOOPSDONE event and SEQSTART[0]\n                               task\nLOOPSDONE_SEQSTART1, bit [3] - Shortcut between LOOPSDONE event and SEQSTART[1]\n                               task\nLOOPSDONE_STOP, bit [4]      - Shortcut between LOOPSDONE event and STOP task"
    },
    "PWM2.TASKS_NEXTSTEP": {
      "long_name": "PWM2.TASKS_NEXTSTEP (at 0x40022010, write-only)",
      "purpose": "Steps by one value in the current sequence on all enabled channels if\nDECODER.MODE=NextStep. Does not cause PWM generation to start it was not\nrunning."
    },
    "PWM2.TASKS_SEQSTART<n>": {
      "long_name": "PWM2.TASKS_SEQSTART<n> (at 0x40022008, write-only)",
      "purpose": "Loads the first PWM value on all enabled channels from sequence <n>, and starts\nplaying that sequence at the rate defined in SEQ<n>REFRESH and/or DECODER.MODE.\nCauses PWM generation to start it was not running."
    },
    "PWM2.TASKS_STOP": {
      "long_name": "PWM2.TASKS_STOP (at 0x40022004, write-only)",
      "purpose": "Stops PWM pulse generation on all channels at the end of current PWM period, and\nstops sequence playback"
    },
    "QDEC.ACC": {
      "long_name": "QDEC.ACC (at 0x40012514, read-only)",
      "purpose": "Register accumulating the valid transitions\n\nACC, bits [0:31] - Register accumulating all valid samples (not double\n                   transition) read from the SAMPLE register"
    },
    "QDEC.ACCDBL": {
      "long_name": "QDEC.ACCDBL (at 0x40012544, read-only)",
      "purpose": "Register accumulating the number of detected double transitions\n\nACCDBL, bits [0:3] - Register accumulating the number of detected double or\n                     illegal transitions. ( SAMPLE = 2 )."
    },
    "QDEC.ACCDBLREAD": {
      "long_name": "QDEC.ACCDBLREAD (at 0x40012548, read-only)",
      "purpose": "Snapshot of the ACCDBL, updated by the READCLRACC or RDCLRDBL task\n\nACCDBLREAD, bits [0:3] - Snapshot of the ACCDBL register. This field is updated\n                         when the READCLRACC or RDCLRDBL task is triggered."
    },
    "QDEC.ACCREAD": {
      "long_name": "QDEC.ACCREAD (at 0x40012518, read-only)",
      "purpose": "Snapshot of the ACC register, updated by the READCLRACC or RDCLRACC task\n\nACCREAD, bits [0:31] - Snapshot of the ACC register."
    },
    "QDEC.DBFEN": {
      "long_name": "QDEC.DBFEN (at 0x40012528, read-write)",
      "purpose": "Enable input debounce filters\n\nDBFEN, bit [0] - Enable input debounce filters"
    },
    "QDEC.ENABLE": {
      "long_name": "QDEC.ENABLE (at 0x40012500, read-write)",
      "purpose": "Enable the quadrature decoder\n\nENABLE, bit [0] - Enable or disable the quadrature decoder"
    },
    "QDEC.EVENTS_ACCOF": {
      "long_name": "QDEC.EVENTS_ACCOF (at 0x40012108, read-write)",
      "purpose": "ACC or ACCDBL register overflow"
    },
    "QDEC.EVENTS_DBLRDY": {
      "long_name": "QDEC.EVENTS_DBLRDY (at 0x4001210c, read-write)",
      "purpose": "Double displacement(s) detected"
    },
    "QDEC.EVENTS_REPORTRDY": {
      "long_name": "QDEC.EVENTS_REPORTRDY (at 0x40012104, read-write)",
      "purpose": "Non-null report ready"
    },
    "QDEC.EVENTS_SAMPLERDY": {
      "long_name": "QDEC.EVENTS_SAMPLERDY (at 0x40012100, read-write)",
      "purpose": "Event being generated for every new sample value written to the SAMPLE register"
    },
    "QDEC.EVENTS_STOPPED": {
      "long_name": "QDEC.EVENTS_STOPPED (at 0x40012110, read-write)",
      "purpose": "QDEC has been stopped"
    },
    "QDEC.INTENCLR": {
      "long_name": "QDEC.INTENCLR (at 0x40012308, read-write)",
      "purpose": "Disable interrupt\n\nSAMPLERDY, bit [0] - Write '1' to Disable interrupt for SAMPLERDY event\nREPORTRDY, bit [1] - Write '1' to Disable interrupt for REPORTRDY event\nACCOF, bit [2]     - Write '1' to Disable interrupt for ACCOF event\nDBLRDY, bit [3]    - Write '1' to Disable interrupt for DBLRDY event\nSTOPPED, bit [4]   - Write '1' to Disable interrupt for STOPPED event"
    },
    "QDEC.INTENSET": {
      "long_name": "QDEC.INTENSET (at 0x40012304, read-write)",
      "purpose": "Enable interrupt\n\nSAMPLERDY, bit [0] - Write '1' to Enable interrupt for SAMPLERDY event\nREPORTRDY, bit [1] - Write '1' to Enable interrupt for REPORTRDY event\nACCOF, bit [2]     - Write '1' to Enable interrupt for ACCOF event\nDBLRDY, bit [3]    - Write '1' to Enable interrupt for DBLRDY event\nSTOPPED, bit [4]   - Write '1' to Enable interrupt for STOPPED event"
    },
    "QDEC.LEDPOL": {
      "long_name": "QDEC.LEDPOL (at 0x40012504, read-write)",
      "purpose": "LED output pin polarity\n\nLEDPOL, bit [0] - LED output pin polarity"
    },
    "QDEC.LEDPRE": {
      "long_name": "QDEC.LEDPRE (at 0x40012540, read-write)",
      "purpose": "Time period the LED is switched ON prior to sampling\n\nLEDPRE, bits [0:8] - Period in us the LED is switched on prior to sampling"
    },
    "QDEC.PSEL.A": {
      "long_name": "QDEC.PSEL.A (at 0x40012520, read-write)",
      "purpose": "Pin select for A signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "QDEC.PSEL.B": {
      "long_name": "QDEC.PSEL.B (at 0x40012524, read-write)",
      "purpose": "Pin select for B signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "QDEC.PSEL.LED": {
      "long_name": "QDEC.PSEL.LED (at 0x4001251c, read-write)",
      "purpose": "Pin select for LED signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "QDEC.REPORTPER": {
      "long_name": "QDEC.REPORTPER (at 0x40012510, read-write)",
      "purpose": "Number of samples to be taken before REPORTRDY and DBLRDY events can be\ngenerated\n\nREPORTPER, bits [0:3] - Specifies the number of samples to be accumulated in the\n                        ACC register before the REPORTRDY and DBLRDY events can\n                        be generated; 0 for 10Smpl (10 samples / report), 1 for\n                        40Smpl (40 samples / report), 2 for 80Smpl (80 samples /\n                        report), 3 for 120Smpl (120 samples / report), 4 for\n                        160Smpl (160 samples / report), 5 for 200Smpl (200\n                        samples / report), 6 for 240Smpl (240 samples / report),\n                        7 for 280Smpl (280 samples / report), 8 for 1Smpl (1\n                        sample / report)"
    },
    "QDEC.SAMPLE": {
      "long_name": "QDEC.SAMPLE (at 0x4001250c, read-only)",
      "purpose": "Motion sample value\n\nSAMPLE, bits [0:31] - Last motion sample"
    },
    "QDEC.SAMPLEPER": {
      "long_name": "QDEC.SAMPLEPER (at 0x40012508, read-write)",
      "purpose": "Sample period\n\nSAMPLEPER, bits [0:3] - Sample period. The SAMPLE register will be updated for\n                        every new sample; 0 for 128us (128 us), 1 for 256us (256\n                        us), 2 for 512us (512 us), 3 for 1024us (1024 us), 4 for\n                        2048us (2048 us), 5 for 4096us (4096 us), 6 for 8192us\n                        (8192 us), 7 for 16384us (16384 us), 8 for 32ms (32768\n                        us), 9 for 65ms (65536 us), 10 for 131ms (131072 us)"
    },
    "QDEC.SHORTS": {
      "long_name": "QDEC.SHORTS (at 0x40012200, read-write)",
      "purpose": "Shortcut register\n\nREPORTRDY_READCLRACC, bit [0] - Shortcut between REPORTRDY event and READCLRACC\n                                task\nSAMPLERDY_STOP, bit [1]       - Shortcut between SAMPLERDY event and STOP task\nREPORTRDY_RDCLRACC, bit [2]   - Shortcut between REPORTRDY event and RDCLRACC\n                                task\nREPORTRDY_STOP, bit [3]       - Shortcut between REPORTRDY event and STOP task\nDBLRDY_RDCLRDBL, bit [4]      - Shortcut between DBLRDY event and RDCLRDBL task\nDBLRDY_STOP, bit [5]          - Shortcut between DBLRDY event and STOP task\nSAMPLERDY_READCLRACC, bit [6] - Shortcut between SAMPLERDY event and READCLRACC\n                                task"
    },
    "QDEC.TASKS_RDCLRACC": {
      "long_name": "QDEC.TASKS_RDCLRACC (at 0x4001200c, write-only)",
      "purpose": "Read and clear ACC"
    },
    "QDEC.TASKS_RDCLRDBL": {
      "long_name": "QDEC.TASKS_RDCLRDBL (at 0x40012010, write-only)",
      "purpose": "Read and clear ACCDBL"
    },
    "QDEC.TASKS_READCLRACC": {
      "long_name": "QDEC.TASKS_READCLRACC (at 0x40012008, write-only)",
      "purpose": "Read and clear ACC and ACCDBL"
    },
    "QDEC.TASKS_START": {
      "long_name": "QDEC.TASKS_START (at 0x40012000, write-only)",
      "purpose": "Task starting the quadrature decoder"
    },
    "QDEC.TASKS_STOP": {
      "long_name": "QDEC.TASKS_STOP (at 0x40012004, write-only)",
      "purpose": "Task stopping the quadrature decoder"
    },
    "RADIO.BASE0": {
      "long_name": "RADIO.BASE0 (at 0x4000151c, read-write)",
      "purpose": "Base address 0\n\nBASE0, bits [0:31] - Base address 0"
    },
    "RADIO.BASE1": {
      "long_name": "RADIO.BASE1 (at 0x40001520, read-write)",
      "purpose": "Base address 1\n\nBASE1, bits [0:31] - Base address 1"
    },
    "RADIO.BCC": {
      "long_name": "RADIO.BCC (at 0x40001560, read-write)",
      "purpose": "Bit counter compare\n\nBCC, bits [0:31] - Bit counter compare"
    },
    "RADIO.CRCCNF": {
      "long_name": "RADIO.CRCCNF (at 0x40001534, read-write)",
      "purpose": "CRC configuration\n\nLEN, bits [0:1]   - CRC length in number of bytes; 0 for Disabled (CRC length is\n                    zero and CRC calculation is disabled), 1 for One (CRC length\n                    is one byte and CRC calculation is enabled), 2 for Two (CRC\n                    length is two bytes and CRC calculation is enabled), 3 for\n                    Three (CRC length is three bytes and CRC calculation is\n                    enabled)\nSKIPADDR, bit [8] - Include or exclude packet address field out of CRC\n                    calculation."
    },
    "RADIO.CRCINIT": {
      "long_name": "RADIO.CRCINIT (at 0x4000153c, read-write)",
      "purpose": "CRC initial value\n\nCRCINIT, bits [0:23] - CRC initial value"
    },
    "RADIO.CRCPOLY": {
      "long_name": "RADIO.CRCPOLY (at 0x40001538, read-write)",
      "purpose": "CRC polynomial\n\nCRCPOLY, bits [0:23] - CRC polynomial"
    },
    "RADIO.CRCSTATUS": {
      "long_name": "RADIO.CRCSTATUS (at 0x40001400, read-only)",
      "purpose": "CRC status\n\nCRCSTATUS, bit [0] - CRC status of packet received"
    },
    "RADIO.DAB<n>": {
      "long_name": "RADIO.DAB<n> (at 0x40001600, read-write)",
      "purpose": "Device address base segment <n>\n\nDAB, bits [0:31] - Device address base segment 0"
    },
    "RADIO.DACNF": {
      "long_name": "RADIO.DACNF (at 0x40001640, read-write)",
      "purpose": "Device address match configuration\n\nENA0, bit [0]    - Enable or disable device address matching using device\n                   address 0\nENA1, bit [1]    - Enable or disable device address matching using device\n                   address 1\nENA2, bit [2]    - Enable or disable device address matching using device\n                   address 2\nENA3, bit [3]    - Enable or disable device address matching using device\n                   address 3\nENA4, bit [4]    - Enable or disable device address matching using device\n                   address 4\nENA5, bit [5]    - Enable or disable device address matching using device\n                   address 5\nENA6, bit [6]    - Enable or disable device address matching using device\n                   address 6\nENA7, bit [7]    - Enable or disable device address matching using device\n                   address 7\nTXADD0, bit [8]  - TxAdd for device address 0\nTXADD1, bit [9]  - TxAdd for device address 1\nTXADD2, bit [10] - TxAdd for device address 2\nTXADD3, bit [11] - TxAdd for device address 3\nTXADD4, bit [12] - TxAdd for device address 4\nTXADD5, bit [13] - TxAdd for device address 5\nTXADD6, bit [14] - TxAdd for device address 6\nTXADD7, bit [15] - TxAdd for device address 7"
    },
    "RADIO.DAI": {
      "long_name": "RADIO.DAI (at 0x40001410, read-only)",
      "purpose": "Device address match index\n\nDAI, bits [0:2] - Device address match index"
    },
    "RADIO.DAP<n>": {
      "long_name": "RADIO.DAP<n> (at 0x40001620, read-write)",
      "purpose": "Device address prefix <n>\n\nDAP, bits [0:15] - Device address prefix 0"
    },
    "RADIO.DATAWHITEIV": {
      "long_name": "RADIO.DATAWHITEIV (at 0x40001554, read-write)",
      "purpose": "Data whitening initial value\n\nDATAWHITEIV, bits [0:6] - Data whitening initial value. Bit 6 is hard-wired to\n                          '1', writing '0' to it has no effect, and it will\n                          always be read back and used by the device as '1'."
    },
    "RADIO.EVENTS_ADDRESS": {
      "long_name": "RADIO.EVENTS_ADDRESS (at 0x40001104, read-write)",
      "purpose": "Address sent or received"
    },
    "RADIO.EVENTS_BCMATCH": {
      "long_name": "RADIO.EVENTS_BCMATCH (at 0x40001128, read-write)",
      "purpose": "Bit counter reached bit count value."
    },
    "RADIO.EVENTS_CRCERROR": {
      "long_name": "RADIO.EVENTS_CRCERROR (at 0x40001134, read-write)",
      "purpose": "Packet received with CRC error"
    },
    "RADIO.EVENTS_CRCOK": {
      "long_name": "RADIO.EVENTS_CRCOK (at 0x40001130, read-write)",
      "purpose": "Packet received with CRC ok"
    },
    "RADIO.EVENTS_DEVMATCH": {
      "long_name": "RADIO.EVENTS_DEVMATCH (at 0x40001114, read-write)",
      "purpose": "A device address match occurred on the last received packet"
    },
    "RADIO.EVENTS_DEVMISS": {
      "long_name": "RADIO.EVENTS_DEVMISS (at 0x40001118, read-write)",
      "purpose": "No device address match occurred on the last received packet"
    },
    "RADIO.EVENTS_DISABLED": {
      "long_name": "RADIO.EVENTS_DISABLED (at 0x40001110, read-write)",
      "purpose": "RADIO has been disabled"
    },
    "RADIO.EVENTS_END": {
      "long_name": "RADIO.EVENTS_END (at 0x4000110c, read-write)",
      "purpose": "Packet sent or received"
    },
    "RADIO.EVENTS_PAYLOAD": {
      "long_name": "RADIO.EVENTS_PAYLOAD (at 0x40001108, read-write)",
      "purpose": "Packet payload sent or received"
    },
    "RADIO.EVENTS_READY": {
      "long_name": "RADIO.EVENTS_READY (at 0x40001100, read-write)",
      "purpose": "RADIO has ramped up and is ready to be started"
    },
    "RADIO.EVENTS_RSSIEND": {
      "long_name": "RADIO.EVENTS_RSSIEND (at 0x4000111c, read-write)",
      "purpose": "Sampling of receive signal strength complete."
    },
    "RADIO.FREQUENCY": {
      "long_name": "RADIO.FREQUENCY (at 0x40001508, read-write)",
      "purpose": "Frequency\n\nFREQUENCY, bits [0:6] - Radio channel frequency\nMAP, bit [8]          - Channel map selection."
    },
    "RADIO.INTENCLR": {
      "long_name": "RADIO.INTENCLR (at 0x40001308, read-write)",
      "purpose": "Disable interrupt\n\nREADY, bit [0]     - Write '1' to Disable interrupt for READY event\nADDRESS, bit [1]   - Write '1' to Disable interrupt for ADDRESS event\nPAYLOAD, bit [2]   - Write '1' to Disable interrupt for PAYLOAD event\nEND, bit [3]       - Write '1' to Disable interrupt for END event\nDISABLED, bit [4]  - Write '1' to Disable interrupt for DISABLED event\nDEVMATCH, bit [5]  - Write '1' to Disable interrupt for DEVMATCH event\nDEVMISS, bit [6]   - Write '1' to Disable interrupt for DEVMISS event\nRSSIEND, bit [7]   - Write '1' to Disable interrupt for RSSIEND event\nBCMATCH, bit [10]  - Write '1' to Disable interrupt for BCMATCH event\nCRCOK, bit [12]    - Write '1' to Disable interrupt for CRCOK event\nCRCERROR, bit [13] - Write '1' to Disable interrupt for CRCERROR event"
    },
    "RADIO.INTENSET": {
      "long_name": "RADIO.INTENSET (at 0x40001304, read-write)",
      "purpose": "Enable interrupt\n\nREADY, bit [0]     - Write '1' to Enable interrupt for READY event\nADDRESS, bit [1]   - Write '1' to Enable interrupt for ADDRESS event\nPAYLOAD, bit [2]   - Write '1' to Enable interrupt for PAYLOAD event\nEND, bit [3]       - Write '1' to Enable interrupt for END event\nDISABLED, bit [4]  - Write '1' to Enable interrupt for DISABLED event\nDEVMATCH, bit [5]  - Write '1' to Enable interrupt for DEVMATCH event\nDEVMISS, bit [6]   - Write '1' to Enable interrupt for DEVMISS event\nRSSIEND, bit [7]   - Write '1' to Enable interrupt for RSSIEND event\nBCMATCH, bit [10]  - Write '1' to Enable interrupt for BCMATCH event\nCRCOK, bit [12]    - Write '1' to Enable interrupt for CRCOK event\nCRCERROR, bit [13] - Write '1' to Enable interrupt for CRCERROR event"
    },
    "RADIO.MODE": {
      "long_name": "RADIO.MODE (at 0x40001510, read-write)",
      "purpose": "Data rate and modulation\n\nMODE, bits [0:3] - Radio data rate and modulation setting. The radio supports\n                   Frequency-shift Keying (FSK) modulation; 0 for Nrf_1Mbit (1\n                   Mbit/s Nordic proprietary radio mode), 1 for Nrf_2Mbit (2\n                   Mbit/s Nordic proprietary radio mode), 2 for Nrf_250Kbit\n                   (Deprecated enumerator -  250 kbit/s Nordic proprietary radio\n                   mode), 3 for Ble_1Mbit (1 Mbit/s Bluetooth Low Energy), 4 for\n                   Ble_2Mbit (2 Mbit/s Bluetooth Low Energy)"
    },
    "RADIO.MODECNF0": {
      "long_name": "RADIO.MODECNF0 (at 0x40001650, read-write)",
      "purpose": "Radio mode configuration register 0\n\nRU, bit [0]     - Radio ramp-up time\nDTX, bits [8:9] - Default TX value; 0 for B1 (Transmit '1'), 1 for B0 (Transmit\n                  '0'), 2 for Center (Transmit center frequency)"
    },
    "RADIO.PACKETPTR": {
      "long_name": "RADIO.PACKETPTR (at 0x40001504, read-write)",
      "purpose": "Packet pointer\n\nPACKETPTR, bits [0:31] - Packet pointer"
    },
    "RADIO.PCNF0": {
      "long_name": "RADIO.PCNF0 (at 0x40001514, read-write)",
      "purpose": "Packet configuration register 0\n\nLFLEN, bits [0:3]   - Length on air of LENGTH field in number of bits.\nS0LEN, bit [8]      - Length on air of S0 field in number of bytes.\nS1LEN, bits [16:19] - Length on air of S1 field in number of bits.\nS1INCL, bit [20]    - Include or exclude S1 field in RAM\nPLEN, bit [24]      - Length of preamble on air. Decision point: TASKS_START\n                      task"
    },
    "RADIO.PCNF1": {
      "long_name": "RADIO.PCNF1 (at 0x40001518, read-write)",
      "purpose": "Packet configuration register 1\n\nMAXLEN, bits [0:7]   - Maximum length of packet payload. If the packet payload\n                       is larger than MAXLEN, the radio will truncate the\n                       payload to MAXLEN.\nSTATLEN, bits [8:15] - Static length in number of bytes\nBALEN, bits [16:18]  - Base address length in number of bytes\nENDIAN, bit [24]     - On air endianness of packet, this applies to the S0,\n                       LENGTH, S1 and the PAYLOAD fields.\nWHITEEN, bit [25]    - Enable or disable packet whitening"
    },
    "RADIO.POWER": {
      "long_name": "RADIO.POWER (at 0x40001ffc, read-write)",
      "purpose": "Peripheral power control\n\nPOWER, bit [0] - Peripheral power control. The peripheral and its registers will\n                 be reset to its initial state by switching the peripheral off\n                 and then back on again."
    },
    "RADIO.PREFIX0": {
      "long_name": "RADIO.PREFIX0 (at 0x40001524, read-write)",
      "purpose": "Prefixes bytes for logical addresses 0-3\n\nAP0, bits [0:7]   - Address prefix 0.\nAP1, bits [8:15]  - Address prefix 1.\nAP2, bits [16:23] - Address prefix 2.\nAP3, bits [24:31] - Address prefix 3."
    },
    "RADIO.PREFIX1": {
      "long_name": "RADIO.PREFIX1 (at 0x40001528, read-write)",
      "purpose": "Prefixes bytes for logical addresses 4-7\n\nAP4, bits [0:7]   - Address prefix 4.\nAP5, bits [8:15]  - Address prefix 5.\nAP6, bits [16:23] - Address prefix 6.\nAP7, bits [24:31] - Address prefix 7."
    },
    "RADIO.RSSISAMPLE": {
      "long_name": "RADIO.RSSISAMPLE (at 0x40001548, read-only)",
      "purpose": "RSSI sample\n\nRSSISAMPLE, bits [0:6] - RSSI sample"
    },
    "RADIO.RXADDRESSES": {
      "long_name": "RADIO.RXADDRESSES (at 0x40001530, read-write)",
      "purpose": "Receive address select\n\nADDR0, bit [0] - Enable or disable reception on logical address 0.\nADDR1, bit [1] - Enable or disable reception on logical address 1.\nADDR2, bit [2] - Enable or disable reception on logical address 2.\nADDR3, bit [3] - Enable or disable reception on logical address 3.\nADDR4, bit [4] - Enable or disable reception on logical address 4.\nADDR5, bit [5] - Enable or disable reception on logical address 5.\nADDR6, bit [6] - Enable or disable reception on logical address 6.\nADDR7, bit [7] - Enable or disable reception on logical address 7."
    },
    "RADIO.RXCRC": {
      "long_name": "RADIO.RXCRC (at 0x4000140c, read-only)",
      "purpose": "CRC field of previously received packet\n\nRXCRC, bits [0:23] - CRC field of previously received packet"
    },
    "RADIO.RXMATCH": {
      "long_name": "RADIO.RXMATCH (at 0x40001408, read-only)",
      "purpose": "Received address\n\nRXMATCH, bits [0:2] - Received address"
    },
    "RADIO.SHORTS": {
      "long_name": "RADIO.SHORTS (at 0x40001200, read-write)",
      "purpose": "Shortcut register\n\nREADY_START, bit [0]       - Shortcut between READY event and START task\nEND_DISABLE, bit [1]       - Shortcut between END event and DISABLE task\nDISABLED_TXEN, bit [2]     - Shortcut between DISABLED event and TXEN task\nDISABLED_RXEN, bit [3]     - Shortcut between DISABLED event and RXEN task\nADDRESS_RSSISTART, bit [4] - Shortcut between ADDRESS event and RSSISTART task\nEND_START, bit [5]         - Shortcut between END event and START task\nADDRESS_BCSTART, bit [6]   - Shortcut between ADDRESS event and BCSTART task\nDISABLED_RSSISTOP, bit [8] - Shortcut between DISABLED event and RSSISTOP task"
    },
    "RADIO.STATE": {
      "long_name": "RADIO.STATE (at 0x40001550, read-only)",
      "purpose": "Current radio state\n\nSTATE, bits [0:3] - Current radio state; 0 for Disabled (RADIO is in the\n                    Disabled state), 1 for RxRu (RADIO is in the RXRU state), 2\n                    for RxIdle (RADIO is in the RXIDLE state), 3 for Rx (RADIO\n                    is in the RX state), 4 for RxDisable (RADIO is in the\n                    RXDISABLED state), 9 for TxRu (RADIO is in the TXRU state),\n                    10 for TxIdle (RADIO is in the TXIDLE state), 11 for Tx\n                    (RADIO is in the TX state), 12 for TxDisable (RADIO is in\n                    the TXDISABLED state)"
    },
    "RADIO.TASKS_BCSTART": {
      "long_name": "RADIO.TASKS_BCSTART (at 0x4000101c, write-only)",
      "purpose": "Start the bit counter"
    },
    "RADIO.TASKS_BCSTOP": {
      "long_name": "RADIO.TASKS_BCSTOP (at 0x40001020, write-only)",
      "purpose": "Stop the bit counter"
    },
    "RADIO.TASKS_DISABLE": {
      "long_name": "RADIO.TASKS_DISABLE (at 0x40001010, write-only)",
      "purpose": "Disable RADIO"
    },
    "RADIO.TASKS_RSSISTART": {
      "long_name": "RADIO.TASKS_RSSISTART (at 0x40001014, write-only)",
      "purpose": "Start the RSSI and take one single sample of the receive signal strength."
    },
    "RADIO.TASKS_RSSISTOP": {
      "long_name": "RADIO.TASKS_RSSISTOP (at 0x40001018, write-only)",
      "purpose": "Stop the RSSI measurement"
    },
    "RADIO.TASKS_RXEN": {
      "long_name": "RADIO.TASKS_RXEN (at 0x40001004, write-only)",
      "purpose": "Enable RADIO in RX mode"
    },
    "RADIO.TASKS_START": {
      "long_name": "RADIO.TASKS_START (at 0x40001008, write-only)",
      "purpose": "Start RADIO"
    },
    "RADIO.TASKS_STOP": {
      "long_name": "RADIO.TASKS_STOP (at 0x4000100c, write-only)",
      "purpose": "Stop RADIO"
    },
    "RADIO.TASKS_TXEN": {
      "long_name": "RADIO.TASKS_TXEN (at 0x40001000, write-only)",
      "purpose": "Enable RADIO in TX mode"
    },
    "RADIO.TIFS": {
      "long_name": "RADIO.TIFS (at 0x40001544, read-write)",
      "purpose": "Inter Frame Spacing in us\n\nTIFS, bits [0:7] - Inter Frame Spacing in us"
    },
    "RADIO.TXADDRESS": {
      "long_name": "RADIO.TXADDRESS (at 0x4000152c, read-write)",
      "purpose": "Transmit address select\n\nTXADDRESS, bits [0:2] - Transmit address select"
    },
    "RADIO.TXPOWER": {
      "long_name": "RADIO.TXPOWER (at 0x4000150c, read-write)",
      "purpose": "Output power\n\nTXPOWER, bits [0:7] - RADIO output power; 0x04 for Pos4dBm (+4 dBm), 0x03 for\n                      Pos3dBm (+3 dBm), 0x00 for 0dBm (0 dBm), 0xFC for Neg4dBm\n                      (-4 dBm), 0xF8 for Neg8dBm (-8 dBm), 0xF4 for Neg12dBm\n                      (-12 dBm), 0xF0 for Neg16dBm (-16 dBm), 0xEC for Neg20dBm\n                      (-20 dBm), 0xFF for Neg30dBm (Deprecated enumerator -  -40\n                      dBm), 0xD8 for Neg40dBm (-40 dBm)"
    },
    "RADIO.UNUSED0": {
      "long_name": "RADIO.UNUSED0 (at 0x40001540, read-write)",
      "purpose": "Unspecified"
    },
    "RNG.CONFIG": {
      "long_name": "RNG.CONFIG (at 0x4000d504, read-write)",
      "purpose": "Configuration register\n\nDERCEN, bit [0] - Bias correction"
    },
    "RNG.EVENTS_VALRDY": {
      "long_name": "RNG.EVENTS_VALRDY (at 0x4000d100, read-write)",
      "purpose": "Event being generated for every new random number written to the VALUE register"
    },
    "RNG.INTENCLR": {
      "long_name": "RNG.INTENCLR (at 0x4000d308, read-write)",
      "purpose": "Disable interrupt\n\nVALRDY, bit [0] - Write '1' to Disable interrupt for VALRDY event"
    },
    "RNG.INTENSET": {
      "long_name": "RNG.INTENSET (at 0x4000d304, read-write)",
      "purpose": "Enable interrupt\n\nVALRDY, bit [0] - Write '1' to Enable interrupt for VALRDY event"
    },
    "RNG.SHORTS": {
      "long_name": "RNG.SHORTS (at 0x4000d200, read-write)",
      "purpose": "Shortcut register\n\nVALRDY_STOP, bit [0] - Shortcut between VALRDY event and STOP task"
    },
    "RNG.TASKS_START": {
      "long_name": "RNG.TASKS_START (at 0x4000d000, write-only)",
      "purpose": "Task starting the random number generator"
    },
    "RNG.TASKS_STOP": {
      "long_name": "RNG.TASKS_STOP (at 0x4000d004, write-only)",
      "purpose": "Task stopping the random number generator"
    },
    "RNG.VALUE": {
      "long_name": "RNG.VALUE (at 0x4000d508, read-only)",
      "purpose": "Output random number\n\nVALUE, bits [0:7] - Generated random number"
    },
    "RTC0.CC<n>": {
      "long_name": "RTC0.CC<n> (at 0x4000b540, read-write)",
      "purpose": "Compare register <n>\n\nCOMPARE, bits [0:23] - Compare value"
    },
    "RTC0.COUNTER": {
      "long_name": "RTC0.COUNTER (at 0x4000b504, read-only)",
      "purpose": "Current COUNTER value\n\nCOUNTER, bits [0:23] - Counter value"
    },
    "RTC0.EVENTS_COMPARE<n>": {
      "long_name": "RTC0.EVENTS_COMPARE<n> (at 0x4000b140, read-write)",
      "purpose": "Compare event on CC<n> match"
    },
    "RTC0.EVENTS_OVRFLW": {
      "long_name": "RTC0.EVENTS_OVRFLW (at 0x4000b104, read-write)",
      "purpose": "Event on COUNTER overflow"
    },
    "RTC0.EVENTS_TICK": {
      "long_name": "RTC0.EVENTS_TICK (at 0x4000b100, read-write)",
      "purpose": "Event on COUNTER increment"
    },
    "RTC0.EVTEN": {
      "long_name": "RTC0.EVTEN (at 0x4000b340, read-write)",
      "purpose": "Enable or disable event routing\n\nTICK, bit [0]      - Enable or disable event routing for TICK event\nOVRFLW, bit [1]    - Enable or disable event routing for OVRFLW event\nCOMPARE0, bit [16] - Enable or disable event routing for COMPARE[0] event\nCOMPARE1, bit [17] - Enable or disable event routing for COMPARE[1] event\nCOMPARE2, bit [18] - Enable or disable event routing for COMPARE[2] event\nCOMPARE3, bit [19] - Enable or disable event routing for COMPARE[3] event"
    },
    "RTC0.EVTENCLR": {
      "long_name": "RTC0.EVTENCLR (at 0x4000b348, read-write)",
      "purpose": "Disable event routing\n\nTICK, bit [0]      - Write '1' to Disable event routing for TICK event\nOVRFLW, bit [1]    - Write '1' to Disable event routing for OVRFLW event\nCOMPARE0, bit [16] - Write '1' to Disable event routing for COMPARE[0] event\nCOMPARE1, bit [17] - Write '1' to Disable event routing for COMPARE[1] event\nCOMPARE2, bit [18] - Write '1' to Disable event routing for COMPARE[2] event\nCOMPARE3, bit [19] - Write '1' to Disable event routing for COMPARE[3] event"
    },
    "RTC0.EVTENSET": {
      "long_name": "RTC0.EVTENSET (at 0x4000b344, read-write)",
      "purpose": "Enable event routing\n\nTICK, bit [0]      - Write '1' to Enable event routing for TICK event\nOVRFLW, bit [1]    - Write '1' to Enable event routing for OVRFLW event\nCOMPARE0, bit [16] - Write '1' to Enable event routing for COMPARE[0] event\nCOMPARE1, bit [17] - Write '1' to Enable event routing for COMPARE[1] event\nCOMPARE2, bit [18] - Write '1' to Enable event routing for COMPARE[2] event\nCOMPARE3, bit [19] - Write '1' to Enable event routing for COMPARE[3] event"
    },
    "RTC0.INTENCLR": {
      "long_name": "RTC0.INTENCLR (at 0x4000b308, read-write)",
      "purpose": "Disable interrupt\n\nTICK, bit [0]      - Write '1' to Disable interrupt for TICK event\nOVRFLW, bit [1]    - Write '1' to Disable interrupt for OVRFLW event\nCOMPARE0, bit [16] - Write '1' to Disable interrupt for COMPARE[0] event\nCOMPARE1, bit [17] - Write '1' to Disable interrupt for COMPARE[1] event\nCOMPARE2, bit [18] - Write '1' to Disable interrupt for COMPARE[2] event\nCOMPARE3, bit [19] - Write '1' to Disable interrupt for COMPARE[3] event"
    },
    "RTC0.INTENSET": {
      "long_name": "RTC0.INTENSET (at 0x4000b304, read-write)",
      "purpose": "Enable interrupt\n\nTICK, bit [0]      - Write '1' to Enable interrupt for TICK event\nOVRFLW, bit [1]    - Write '1' to Enable interrupt for OVRFLW event\nCOMPARE0, bit [16] - Write '1' to Enable interrupt for COMPARE[0] event\nCOMPARE1, bit [17] - Write '1' to Enable interrupt for COMPARE[1] event\nCOMPARE2, bit [18] - Write '1' to Enable interrupt for COMPARE[2] event\nCOMPARE3, bit [19] - Write '1' to Enable interrupt for COMPARE[3] event"
    },
    "RTC0.PRESCALER": {
      "long_name": "RTC0.PRESCALER (at 0x4000b508, read-write)",
      "purpose": "12 bit prescaler for COUNTER frequency (32768/(PRESCALER+1)).Must be written\nwhen RTC is stopped\n\nPRESCALER, bits [0:11] - Prescaler value"
    },
    "RTC0.TASKS_CLEAR": {
      "long_name": "RTC0.TASKS_CLEAR (at 0x4000b008, write-only)",
      "purpose": "Clear RTC COUNTER"
    },
    "RTC0.TASKS_START": {
      "long_name": "RTC0.TASKS_START (at 0x4000b000, write-only)",
      "purpose": "Start RTC COUNTER"
    },
    "RTC0.TASKS_STOP": {
      "long_name": "RTC0.TASKS_STOP (at 0x4000b004, write-only)",
      "purpose": "Stop RTC COUNTER"
    },
    "RTC0.TASKS_TRIGOVRFLW": {
      "long_name": "RTC0.TASKS_TRIGOVRFLW (at 0x4000b00c, write-only)",
      "purpose": "Set COUNTER to 0xFFFFF0"
    },
    "RTC1.CC<n>": {
      "long_name": "RTC1.CC<n> (at 0x40011540, read-write)",
      "purpose": "Compare register <n>\n\nCOMPARE, bits [0:23] - Compare value"
    },
    "RTC1.COUNTER": {
      "long_name": "RTC1.COUNTER (at 0x40011504, read-only)",
      "purpose": "Current COUNTER value\n\nCOUNTER, bits [0:23] - Counter value"
    },
    "RTC1.EVENTS_COMPARE<n>": {
      "long_name": "RTC1.EVENTS_COMPARE<n> (at 0x40011140, read-write)",
      "purpose": "Compare event on CC<n> match"
    },
    "RTC1.EVENTS_OVRFLW": {
      "long_name": "RTC1.EVENTS_OVRFLW (at 0x40011104, read-write)",
      "purpose": "Event on COUNTER overflow"
    },
    "RTC1.EVENTS_TICK": {
      "long_name": "RTC1.EVENTS_TICK (at 0x40011100, read-write)",
      "purpose": "Event on COUNTER increment"
    },
    "RTC1.EVTEN": {
      "long_name": "RTC1.EVTEN (at 0x40011340, read-write)",
      "purpose": "Enable or disable event routing\n\nTICK, bit [0]      - Enable or disable event routing for TICK event\nOVRFLW, bit [1]    - Enable or disable event routing for OVRFLW event\nCOMPARE0, bit [16] - Enable or disable event routing for COMPARE[0] event\nCOMPARE1, bit [17] - Enable or disable event routing for COMPARE[1] event\nCOMPARE2, bit [18] - Enable or disable event routing for COMPARE[2] event\nCOMPARE3, bit [19] - Enable or disable event routing for COMPARE[3] event"
    },
    "RTC1.EVTENCLR": {
      "long_name": "RTC1.EVTENCLR (at 0x40011348, read-write)",
      "purpose": "Disable event routing\n\nTICK, bit [0]      - Write '1' to Disable event routing for TICK event\nOVRFLW, bit [1]    - Write '1' to Disable event routing for OVRFLW event\nCOMPARE0, bit [16] - Write '1' to Disable event routing for COMPARE[0] event\nCOMPARE1, bit [17] - Write '1' to Disable event routing for COMPARE[1] event\nCOMPARE2, bit [18] - Write '1' to Disable event routing for COMPARE[2] event\nCOMPARE3, bit [19] - Write '1' to Disable event routing for COMPARE[3] event"
    },
    "RTC1.EVTENSET": {
      "long_name": "RTC1.EVTENSET (at 0x40011344, read-write)",
      "purpose": "Enable event routing\n\nTICK, bit [0]      - Write '1' to Enable event routing for TICK event\nOVRFLW, bit [1]    - Write '1' to Enable event routing for OVRFLW event\nCOMPARE0, bit [16] - Write '1' to Enable event routing for COMPARE[0] event\nCOMPARE1, bit [17] - Write '1' to Enable event routing for COMPARE[1] event\nCOMPARE2, bit [18] - Write '1' to Enable event routing for COMPARE[2] event\nCOMPARE3, bit [19] - Write '1' to Enable event routing for COMPARE[3] event"
    },
    "RTC1.INTENCLR": {
      "long_name": "RTC1.INTENCLR (at 0x40011308, read-write)",
      "purpose": "Disable interrupt\n\nTICK, bit [0]      - Write '1' to Disable interrupt for TICK event\nOVRFLW, bit [1]    - Write '1' to Disable interrupt for OVRFLW event\nCOMPARE0, bit [16] - Write '1' to Disable interrupt for COMPARE[0] event\nCOMPARE1, bit [17] - Write '1' to Disable interrupt for COMPARE[1] event\nCOMPARE2, bit [18] - Write '1' to Disable interrupt for COMPARE[2] event\nCOMPARE3, bit [19] - Write '1' to Disable interrupt for COMPARE[3] event"
    },
    "RTC1.INTENSET": {
      "long_name": "RTC1.INTENSET (at 0x40011304, read-write)",
      "purpose": "Enable interrupt\n\nTICK, bit [0]      - Write '1' to Enable interrupt for TICK event\nOVRFLW, bit [1]    - Write '1' to Enable interrupt for OVRFLW event\nCOMPARE0, bit [16] - Write '1' to Enable interrupt for COMPARE[0] event\nCOMPARE1, bit [17] - Write '1' to Enable interrupt for COMPARE[1] event\nCOMPARE2, bit [18] - Write '1' to Enable interrupt for COMPARE[2] event\nCOMPARE3, bit [19] - Write '1' to Enable interrupt for COMPARE[3] event"
    },
    "RTC1.PRESCALER": {
      "long_name": "RTC1.PRESCALER (at 0x40011508, read-write)",
      "purpose": "12 bit prescaler for COUNTER frequency (32768/(PRESCALER+1)).Must be written\nwhen RTC is stopped\n\nPRESCALER, bits [0:11] - Prescaler value"
    },
    "RTC1.TASKS_CLEAR": {
      "long_name": "RTC1.TASKS_CLEAR (at 0x40011008, write-only)",
      "purpose": "Clear RTC COUNTER"
    },
    "RTC1.TASKS_START": {
      "long_name": "RTC1.TASKS_START (at 0x40011000, write-only)",
      "purpose": "Start RTC COUNTER"
    },
    "RTC1.TASKS_STOP": {
      "long_name": "RTC1.TASKS_STOP (at 0x40011004, write-only)",
      "purpose": "Stop RTC COUNTER"
    },
    "RTC1.TASKS_TRIGOVRFLW": {
      "long_name": "RTC1.TASKS_TRIGOVRFLW (at 0x4001100c, write-only)",
      "purpose": "Set COUNTER to 0xFFFFF0"
    },
    "RTC2.CC<n>": {
      "long_name": "RTC2.CC<n> (at 0x40024540, read-write)",
      "purpose": "Compare register <n>\n\nCOMPARE, bits [0:23] - Compare value"
    },
    "RTC2.COUNTER": {
      "long_name": "RTC2.COUNTER (at 0x40024504, read-only)",
      "purpose": "Current COUNTER value\n\nCOUNTER, bits [0:23] - Counter value"
    },
    "RTC2.EVENTS_COMPARE<n>": {
      "long_name": "RTC2.EVENTS_COMPARE<n> (at 0x40024140, read-write)",
      "purpose": "Compare event on CC<n> match"
    },
    "RTC2.EVENTS_OVRFLW": {
      "long_name": "RTC2.EVENTS_OVRFLW (at 0x40024104, read-write)",
      "purpose": "Event on COUNTER overflow"
    },
    "RTC2.EVENTS_TICK": {
      "long_name": "RTC2.EVENTS_TICK (at 0x40024100, read-write)",
      "purpose": "Event on COUNTER increment"
    },
    "RTC2.EVTEN": {
      "long_name": "RTC2.EVTEN (at 0x40024340, read-write)",
      "purpose": "Enable or disable event routing\n\nTICK, bit [0]      - Enable or disable event routing for TICK event\nOVRFLW, bit [1]    - Enable or disable event routing for OVRFLW event\nCOMPARE0, bit [16] - Enable or disable event routing for COMPARE[0] event\nCOMPARE1, bit [17] - Enable or disable event routing for COMPARE[1] event\nCOMPARE2, bit [18] - Enable or disable event routing for COMPARE[2] event\nCOMPARE3, bit [19] - Enable or disable event routing for COMPARE[3] event"
    },
    "RTC2.EVTENCLR": {
      "long_name": "RTC2.EVTENCLR (at 0x40024348, read-write)",
      "purpose": "Disable event routing\n\nTICK, bit [0]      - Write '1' to Disable event routing for TICK event\nOVRFLW, bit [1]    - Write '1' to Disable event routing for OVRFLW event\nCOMPARE0, bit [16] - Write '1' to Disable event routing for COMPARE[0] event\nCOMPARE1, bit [17] - Write '1' to Disable event routing for COMPARE[1] event\nCOMPARE2, bit [18] - Write '1' to Disable event routing for COMPARE[2] event\nCOMPARE3, bit [19] - Write '1' to Disable event routing for COMPARE[3] event"
    },
    "RTC2.EVTENSET": {
      "long_name": "RTC2.EVTENSET (at 0x40024344, read-write)",
      "purpose": "Enable event routing\n\nTICK, bit [0]      - Write '1' to Enable event routing for TICK event\nOVRFLW, bit [1]    - Write '1' to Enable event routing for OVRFLW event\nCOMPARE0, bit [16] - Write '1' to Enable event routing for COMPARE[0] event\nCOMPARE1, bit [17] - Write '1' to Enable event routing for COMPARE[1] event\nCOMPARE2, bit [18] - Write '1' to Enable event routing for COMPARE[2] event\nCOMPARE3, bit [19] - Write '1' to Enable event routing for COMPARE[3] event"
    },
    "RTC2.INTENCLR": {
      "long_name": "RTC2.INTENCLR (at 0x40024308, read-write)",
      "purpose": "Disable interrupt\n\nTICK, bit [0]      - Write '1' to Disable interrupt for TICK event\nOVRFLW, bit [1]    - Write '1' to Disable interrupt for OVRFLW event\nCOMPARE0, bit [16] - Write '1' to Disable interrupt for COMPARE[0] event\nCOMPARE1, bit [17] - Write '1' to Disable interrupt for COMPARE[1] event\nCOMPARE2, bit [18] - Write '1' to Disable interrupt for COMPARE[2] event\nCOMPARE3, bit [19] - Write '1' to Disable interrupt for COMPARE[3] event"
    },
    "RTC2.INTENSET": {
      "long_name": "RTC2.INTENSET (at 0x40024304, read-write)",
      "purpose": "Enable interrupt\n\nTICK, bit [0]      - Write '1' to Enable interrupt for TICK event\nOVRFLW, bit [1]    - Write '1' to Enable interrupt for OVRFLW event\nCOMPARE0, bit [16] - Write '1' to Enable interrupt for COMPARE[0] event\nCOMPARE1, bit [17] - Write '1' to Enable interrupt for COMPARE[1] event\nCOMPARE2, bit [18] - Write '1' to Enable interrupt for COMPARE[2] event\nCOMPARE3, bit [19] - Write '1' to Enable interrupt for COMPARE[3] event"
    },
    "RTC2.PRESCALER": {
      "long_name": "RTC2.PRESCALER (at 0x40024508, read-write)",
      "purpose": "12 bit prescaler for COUNTER frequency (32768/(PRESCALER+1)).Must be written\nwhen RTC is stopped\n\nPRESCALER, bits [0:11] - Prescaler value"
    },
    "RTC2.TASKS_CLEAR": {
      "long_name": "RTC2.TASKS_CLEAR (at 0x40024008, write-only)",
      "purpose": "Clear RTC COUNTER"
    },
    "RTC2.TASKS_START": {
      "long_name": "RTC2.TASKS_START (at 0x40024000, write-only)",
      "purpose": "Start RTC COUNTER"
    },
    "RTC2.TASKS_STOP": {
      "long_name": "RTC2.TASKS_STOP (at 0x40024004, write-only)",
      "purpose": "Stop RTC COUNTER"
    },
    "RTC2.TASKS_TRIGOVRFLW": {
      "long_name": "RTC2.TASKS_TRIGOVRFLW (at 0x4002400c, write-only)",
      "purpose": "Set COUNTER to 0xFFFFF0"
    },
    "SAADC.CH<m>.CONFIG": {
      "long_name": "SAADC.CH<m>.CONFIG (at 0x40007518, read-write)",
      "purpose": "Input configuration for CH<m>\n\nRESP, bits [0:1]   - Positive channel resistor control; 0 for Bypass (Bypass\n                     resistor ladder), 1 for Pulldown (Pull-down to GND), 2 for\n                     Pullup (Pull-up to VDD), 3 for VDD1_2 (Set input at VDD/2)\nRESN, bits [4:5]   - Negative channel resistor control; 0 for Bypass (Bypass\n                     resistor ladder), 1 for Pulldown (Pull-down to GND), 2 for\n                     Pullup (Pull-up to VDD), 3 for VDD1_2 (Set input at VDD/2)\nGAIN, bits [8:10]  - Gain control; 0 for Gain1_6 (1/6), 1 for Gain1_5 (1/5), 2\n                     for Gain1_4 (1/4), 3 for Gain1_3 (1/3), 4 for Gain1_2\n                     (1/2), 5 for Gain1 (1), 6 for Gain2 (2), 7 for Gain4 (4)\nREFSEL, bit [12]   - Reference control\nTACQ, bits [16:18] - Acquisition time, the time the ADC uses to sample the input\n                     voltage; 0 for 3us (3 us), 1 for 5us (5 us), 2 for 10us (10\n                     us), 3 for 15us (15 us), 4 for 20us (20 us), 5 for 40us (40\n                     us)\nMODE, bit [20]     - Enable differential mode\nBURST, bit [24]    - Enable burst mode"
    },
    "SAADC.CH<m>.LIMIT": {
      "long_name": "SAADC.CH<m>.LIMIT (at 0x4000751c, read-write)",
      "purpose": "High/low limits for event monitoring a channel\n\nLOW, bits [0:15]   - Low level limit\nHIGH, bits [16:31] - High level limit"
    },
    "SAADC.CH<m>.PSELN": {
      "long_name": "SAADC.CH<m>.PSELN (at 0x40007514, read-write)",
      "purpose": "Input negative pin selection for CH<m>\n\nPSELN, bits [0:4] - Analog negative input, enables differential channel; 0 for\n                    NC (Not connected), 1 for AnalogInput0 (AIN0), 2 for\n                    AnalogInput1 (AIN1), 3 for AnalogInput2 (AIN2), 4 for\n                    AnalogInput3 (AIN3), 5 for AnalogInput4 (AIN4), 6 for\n                    AnalogInput5 (AIN5), 7 for AnalogInput6 (AIN6), 8 for\n                    AnalogInput7 (AIN7), 9 for VDD (VDD)"
    },
    "SAADC.CH<m>.PSELP": {
      "long_name": "SAADC.CH<m>.PSELP (at 0x40007510, read-write)",
      "purpose": "Input positive pin selection for CH<m>\n\nPSELP, bits [0:4] - Analog positive input channel; 0 for NC (Not connected), 1\n                    for AnalogInput0 (AIN0), 2 for AnalogInput1 (AIN1), 3 for\n                    AnalogInput2 (AIN2), 4 for AnalogInput3 (AIN3), 5 for\n                    AnalogInput4 (AIN4), 6 for AnalogInput5 (AIN5), 7 for\n                    AnalogInput6 (AIN6), 8 for AnalogInput7 (AIN7), 9 for VDD\n                    (VDD)"
    },
    "SAADC.ENABLE": {
      "long_name": "SAADC.ENABLE (at 0x40007500, read-write)",
      "purpose": "Enable or disable ADC\n\nENABLE, bit [0] - Enable or disable ADC"
    },
    "SAADC.EVENTS_CALIBRATEDONE": {
      "long_name": "SAADC.EVENTS_CALIBRATEDONE (at 0x40007110, read-write)",
      "purpose": "Calibration is complete"
    },
    "SAADC.EVENTS_CH<m>.LIMITH": {
      "long_name": "SAADC.EVENTS_CH<m>.LIMITH (at 0x40007118, read-write)",
      "purpose": "Last results is equal or above CH<m>.LIMIT.HIGH"
    },
    "SAADC.EVENTS_CH<m>.LIMITL": {
      "long_name": "SAADC.EVENTS_CH<m>.LIMITL (at 0x4000711c, read-write)",
      "purpose": "Last results is equal or below CH<m>.LIMIT.LOW"
    },
    "SAADC.EVENTS_DONE": {
      "long_name": "SAADC.EVENTS_DONE (at 0x40007108, read-write)",
      "purpose": "A conversion task has been completed. Depending on the mode, multiple\nconversions might be needed for a result to be transferred to RAM."
    },
    "SAADC.EVENTS_END": {
      "long_name": "SAADC.EVENTS_END (at 0x40007104, read-write)",
      "purpose": "The ADC has filled up the Result buffer"
    },
    "SAADC.EVENTS_RESULTDONE": {
      "long_name": "SAADC.EVENTS_RESULTDONE (at 0x4000710c, read-write)",
      "purpose": "A result is ready to get transferred to RAM."
    },
    "SAADC.EVENTS_STARTED": {
      "long_name": "SAADC.EVENTS_STARTED (at 0x40007100, read-write)",
      "purpose": "The ADC has started"
    },
    "SAADC.EVENTS_STOPPED": {
      "long_name": "SAADC.EVENTS_STOPPED (at 0x40007114, read-write)",
      "purpose": "The ADC has stopped"
    },
    "SAADC.INTEN": {
      "long_name": "SAADC.INTEN (at 0x40007300, read-write)",
      "purpose": "Enable or disable interrupt\n\nSTARTED, bit [0]       - Enable or disable interrupt for STARTED event\nEND, bit [1]           - Enable or disable interrupt for END event\nDONE, bit [2]          - Enable or disable interrupt for DONE event\nRESULTDONE, bit [3]    - Enable or disable interrupt for RESULTDONE event\nCALIBRATEDONE, bit [4] - Enable or disable interrupt for CALIBRATEDONE event\nSTOPPED, bit [5]       - Enable or disable interrupt for STOPPED event\nCH0LIMITH, bit [6]     - Enable or disable interrupt for CH[0].LIMITH event\nCH0LIMITL, bit [7]     - Enable or disable interrupt for CH[0].LIMITL event\nCH1LIMITH, bit [8]     - Enable or disable interrupt for CH[1].LIMITH event\nCH1LIMITL, bit [9]     - Enable or disable interrupt for CH[1].LIMITL event\nCH2LIMITH, bit [10]    - Enable or disable interrupt for CH[2].LIMITH event\nCH2LIMITL, bit [11]    - Enable or disable interrupt for CH[2].LIMITL event\nCH3LIMITH, bit [12]    - Enable or disable interrupt for CH[3].LIMITH event\nCH3LIMITL, bit [13]    - Enable or disable interrupt for CH[3].LIMITL event\nCH4LIMITH, bit [14]    - Enable or disable interrupt for CH[4].LIMITH event\nCH4LIMITL, bit [15]    - Enable or disable interrupt for CH[4].LIMITL event\nCH5LIMITH, bit [16]    - Enable or disable interrupt for CH[5].LIMITH event\nCH5LIMITL, bit [17]    - Enable or disable interrupt for CH[5].LIMITL event\nCH6LIMITH, bit [18]    - Enable or disable interrupt for CH[6].LIMITH event\nCH6LIMITL, bit [19]    - Enable or disable interrupt for CH[6].LIMITL event\nCH7LIMITH, bit [20]    - Enable or disable interrupt for CH[7].LIMITH event\nCH7LIMITL, bit [21]    - Enable or disable interrupt for CH[7].LIMITL event"
    },
    "SAADC.INTENCLR": {
      "long_name": "SAADC.INTENCLR (at 0x40007308, read-write)",
      "purpose": "Disable interrupt\n\nSTARTED, bit [0]       - Write '1' to Disable interrupt for STARTED event\nEND, bit [1]           - Write '1' to Disable interrupt for END event\nDONE, bit [2]          - Write '1' to Disable interrupt for DONE event\nRESULTDONE, bit [3]    - Write '1' to Disable interrupt for RESULTDONE event\nCALIBRATEDONE, bit [4] - Write '1' to Disable interrupt for CALIBRATEDONE event\nSTOPPED, bit [5]       - Write '1' to Disable interrupt for STOPPED event\nCH0LIMITH, bit [6]     - Write '1' to Disable interrupt for CH[0].LIMITH event\nCH0LIMITL, bit [7]     - Write '1' to Disable interrupt for CH[0].LIMITL event\nCH1LIMITH, bit [8]     - Write '1' to Disable interrupt for CH[1].LIMITH event\nCH1LIMITL, bit [9]     - Write '1' to Disable interrupt for CH[1].LIMITL event\nCH2LIMITH, bit [10]    - Write '1' to Disable interrupt for CH[2].LIMITH event\nCH2LIMITL, bit [11]    - Write '1' to Disable interrupt for CH[2].LIMITL event\nCH3LIMITH, bit [12]    - Write '1' to Disable interrupt for CH[3].LIMITH event\nCH3LIMITL, bit [13]    - Write '1' to Disable interrupt for CH[3].LIMITL event\nCH4LIMITH, bit [14]    - Write '1' to Disable interrupt for CH[4].LIMITH event\nCH4LIMITL, bit [15]    - Write '1' to Disable interrupt for CH[4].LIMITL event\nCH5LIMITH, bit [16]    - Write '1' to Disable interrupt for CH[5].LIMITH event\nCH5LIMITL, bit [17]    - Write '1' to Disable interrupt for CH[5].LIMITL event\nCH6LIMITH, bit [18]    - Write '1' to Disable interrupt for CH[6].LIMITH event\nCH6LIMITL, bit [19]    - Write '1' to Disable interrupt for CH[6].LIMITL event\nCH7LIMITH, bit [20]    - Write '1' to Disable interrupt for CH[7].LIMITH event\nCH7LIMITL, bit [21]    - Write '1' to Disable interrupt for CH[7].LIMITL event"
    },
    "SAADC.INTENSET": {
      "long_name": "SAADC.INTENSET (at 0x40007304, read-write)",
      "purpose": "Enable interrupt\n\nSTARTED, bit [0]       - Write '1' to Enable interrupt for STARTED event\nEND, bit [1]           - Write '1' to Enable interrupt for END event\nDONE, bit [2]          - Write '1' to Enable interrupt for DONE event\nRESULTDONE, bit [3]    - Write '1' to Enable interrupt for RESULTDONE event\nCALIBRATEDONE, bit [4] - Write '1' to Enable interrupt for CALIBRATEDONE event\nSTOPPED, bit [5]       - Write '1' to Enable interrupt for STOPPED event\nCH0LIMITH, bit [6]     - Write '1' to Enable interrupt for CH[0].LIMITH event\nCH0LIMITL, bit [7]     - Write '1' to Enable interrupt for CH[0].LIMITL event\nCH1LIMITH, bit [8]     - Write '1' to Enable interrupt for CH[1].LIMITH event\nCH1LIMITL, bit [9]     - Write '1' to Enable interrupt for CH[1].LIMITL event\nCH2LIMITH, bit [10]    - Write '1' to Enable interrupt for CH[2].LIMITH event\nCH2LIMITL, bit [11]    - Write '1' to Enable interrupt for CH[2].LIMITL event\nCH3LIMITH, bit [12]    - Write '1' to Enable interrupt for CH[3].LIMITH event\nCH3LIMITL, bit [13]    - Write '1' to Enable interrupt for CH[3].LIMITL event\nCH4LIMITH, bit [14]    - Write '1' to Enable interrupt for CH[4].LIMITH event\nCH4LIMITL, bit [15]    - Write '1' to Enable interrupt for CH[4].LIMITL event\nCH5LIMITH, bit [16]    - Write '1' to Enable interrupt for CH[5].LIMITH event\nCH5LIMITL, bit [17]    - Write '1' to Enable interrupt for CH[5].LIMITL event\nCH6LIMITH, bit [18]    - Write '1' to Enable interrupt for CH[6].LIMITH event\nCH6LIMITL, bit [19]    - Write '1' to Enable interrupt for CH[6].LIMITL event\nCH7LIMITH, bit [20]    - Write '1' to Enable interrupt for CH[7].LIMITH event\nCH7LIMITL, bit [21]    - Write '1' to Enable interrupt for CH[7].LIMITL event"
    },
    "SAADC.OVERSAMPLE": {
      "long_name": "SAADC.OVERSAMPLE (at 0x400075f4, read-write)",
      "purpose": "Oversampling configuration. OVERSAMPLE should not be combined with SCAN. The\nRESOLUTION is applied before averaging, thus for high OVERSAMPLE a higher\nRESOLUTION should be used.\n\nOVERSAMPLE, bits [0:3] - Oversample control; 0 for Bypass (Bypass oversampling),\n                         1 for Over2x (Oversample 2x), 2 for Over4x (Oversample\n                         4x), 3 for Over8x (Oversample 8x), 4 for Over16x\n                         (Oversample 16x), 5 for Over32x (Oversample 32x), 6 for\n                         Over64x (Oversample 64x), 7 for Over128x (Oversample\n                         128x), 8 for Over256x (Oversample 256x)"
    },
    "SAADC.RESOLUTION": {
      "long_name": "SAADC.RESOLUTION (at 0x400075f0, read-write)",
      "purpose": "Resolution configuration\n\nVAL, bits [0:2] - Set the resolution; 0 for 8bit (8 bit), 1 for 10bit (10 bit),\n                  2 for 12bit (12 bit), 3 for 14bit (14 bit)"
    },
    "SAADC.RESULT.AMOUNT": {
      "long_name": "SAADC.RESULT.AMOUNT (at 0x40007634, read-only)",
      "purpose": "Number of buffer words transferred since last START\n\nAMOUNT, bits [0:14] - Number of buffer words transferred since last START. This\n                      register can be read after an END or STOPPED event."
    },
    "SAADC.RESULT.MAXCNT": {
      "long_name": "SAADC.RESULT.MAXCNT (at 0x40007630, read-write)",
      "purpose": "Maximum number of buffer words to transfer\n\nMAXCNT, bits [0:14] - Maximum number of buffer words to transfer"
    },
    "SAADC.RESULT.PTR": {
      "long_name": "SAADC.RESULT.PTR (at 0x4000762c, read-write)",
      "purpose": "Data pointer\n\nPTR, bits [0:31] - Data pointer"
    },
    "SAADC.SAMPLERATE": {
      "long_name": "SAADC.SAMPLERATE (at 0x400075f8, read-write)",
      "purpose": "Controls normal or continuous sample rate\n\nCC, bits [0:10] - Capture and compare value. Sample rate is 16 MHz/CC\nMODE, bit [12]  - Select mode for sample rate control"
    },
    "SAADC.STATUS": {
      "long_name": "SAADC.STATUS (at 0x40007400, read-only)",
      "purpose": "Status\n\nSTATUS, bit [0] - Status"
    },
    "SAADC.TASKS_CALIBRATEOFFSET": {
      "long_name": "SAADC.TASKS_CALIBRATEOFFSET (at 0x4000700c, write-only)",
      "purpose": "Starts offset auto-calibration"
    },
    "SAADC.TASKS_SAMPLE": {
      "long_name": "SAADC.TASKS_SAMPLE (at 0x40007004, write-only)",
      "purpose": "Take one ADC sample, if scan is enabled all channels are sampled"
    },
    "SAADC.TASKS_START": {
      "long_name": "SAADC.TASKS_START (at 0x40007000, write-only)",
      "purpose": "Start the ADC and prepare the result buffer in RAM"
    },
    "SAADC.TASKS_STOP": {
      "long_name": "SAADC.TASKS_STOP (at 0x40007008, write-only)",
      "purpose": "Stop the ADC and terminate any on-going conversion"
    },
    "SCB.AFSR": {
      "long_name": "Auxiliary Fault Status Register (at 0xe000ed3c, read-write)",
      "purpose": "Provides implementation-specific fault status information and control"
    },
    "SCB.AIRCR": {
      "long_name": "Application Interrupt and Reset Control Register (at 0xe000ed0c, read-write)",
      "purpose": "Sets or returns interrupt control data\n\nENDIANNESS, bit [15]   - Indicates the memory system endianness\nPRIGROUP, bits [10:8]  - Priority grouping, indicates the binary point position\nSYSRESETREQ, bit [2]   - System Reset Request\nVECTCLRACTIVE, bit [1] - Writing 1 to this bit clears all active state\n                         information for fixed and configurable exceptions\nVECTRESET, bit [0]     - Writing 1 to this bit causes a local system reset, see\n                         Reset management on page B1-615 for more information"
    },
    "SCB.BFAR": {
      "long_name": "BusFault Address Register (at 0xe000ed38, read-write)",
      "purpose": "Shows the address associated with a precise data access fault\n\nADDRESS, bits [31:0] - Data address for a precise bus fault"
    },
    "SCB.CCR": {
      "long_name": "Configuration and Control Register (at 0xe000ed14, read-write)",
      "purpose": "Sets or returns configuration and control data, and provides control over\ncaching and branch prediction\n\nBP, bit [18]            - Branch prediction enable bit\nIC, bit [17]            - Instruction cache enable bit\nDC, bit [16]            - Cache enable bit\nSTKALIGN, bit [9]       - Determines whether the exception entry sequence\n                          guarantees 8-byte stack frame alignment, adjusting the\n                          SP if necessary before saving state\nBFHFNMIGN, bit [8]      - Determines the effect of precise data access faults on\n                          handlers running at priority -1 or priority -2\nDIV_0_TRP, bit [4]      - Controls the trap on divide by 0\nUNALIGN_TRP, bit [3]    - Controls the trapping of unaligned word or halfword\n                          accesses\nUSERSETMPEND, bit [1]   - Controls whether unprivileged software can access the\n                          STIR\nNONBASETHRDENA, bit [0] - Controls whether the processor can enter Thread mode\n                          with exceptions active"
    },
    "SCB.CCSIDR": {
      "long_name": "Cache Size ID Registers (at 0xe000ed80, read-only)",
      "purpose": "The CCSIDR provides information about the architecture of the caches\n\nWT, bit [31]               - Indicates whether the cache level supports write-\n                             through, see Table B4-4\nWB, bit [30]               - Indicates whether the cache level supports write-\n                             back, see Table B4-4\nRA, bit [29]               - Indicates whether the cache level supports read-\n                             allocation, see Table B4-4\nWA, bit [28]               - Indicates whether the cache level supports write-\n                             allocation, see Table B4-4\nNumSets, bits [27:13]      - (Number of sets in cache)-1, therefore a value of 0\n                             indicates 1 set in the cache\nAssociativity, bits [12:3] - (Associativity of cache)-1, therefore a value of 0\n                             indicates an associativity of 1\nLineSize, bits [2:0]       - (Log2(Number of words in cache line))-2"
    },
    "SCB.CFSR": {
      "long_name": "Configurable Fault Status Register (at 0xe000ed28, read-write)",
      "purpose": "Contains the three Configurable Fault Status Registers\n\nUsageFault, bits [31:16] - Provides information on UsageFault exceptions\nBusFault, bits [15:8]    - Provides information on BusFault exceptions\nMemManage, bits [7:0]    - Provides information on MemManage exceptions"
    },
    "SCB.CLIDR": {
      "long_name": "Cache Level ID Register (at 0xe000ed78, read-only)",
      "purpose": "The CLIDR identifies: ? The type of cache, or caches, implemented at each level,\nup to a maximum of seven levels\n\nLoUU, bits [29:27]   - Level of Unification Uniprocessor for the cache\n                       hierarchy, see Terminology for Clean, Invalidate, and\n                       Clean and Invalidate operations on page B2-631\nLoC, bits [26:24]    - Level of Coherency for the cache hierarchy\nLoUIS, bits [23:21]  - Level of Unification Inner Shareable for the cache\n                       hierarchy\nCType_%s, bits [1:0] - Indicates the type of cache implemented at each level; 0\n                       for None (No cache), 1 for None (Instruction cache only),\n                       2 for None (Data cache only), 3 for None (Separate\n                       instruction and data caches), 4 for None (Unified cache)"
    },
    "SCB.CPACR": {
      "long_name": "Coprocessor Access Control Register (at 0xe000ed88, read-write)",
      "purpose": "Specifies the access privileges for coprocessors\n\nCP_%s, bits [1:0] - for n values 0-7, 10 and 11 Access privileges for\n                    coprocessor n, see the register diagram; 0 for None (Access\n                    denied. Any attempted access generates a NOCP UsageFault), 1\n                    for None (Privileged access only. An unprivileged access\n                    generates a NOCP UsageFault), 2 for None (Reserved), 3 for\n                    None (Full access)"
    },
    "SCB.CPUID": {
      "long_name": "CPUID Base Register (at 0xe000ed00, read-only)",
      "purpose": "Provides identification information for the processor\n\nIMPLEMENTER, bits [31:24]  - Implementer code assigned by ARM\nVARIANT, bits [23:20]      - IMPLEMENTATION DEFINED variant number\nARCHITECTURE, bits [19:16] - Reads as 0xF\nPARTNO, bits [15:4]        - IMPLEMENTATION DEFINED part number\nREVISION, bits [3:0]       - IMPLEMENTATION DEFINED revision number"
    },
    "SCB.CSSELR": {
      "long_name": "Cache Size Selection Register (at 0xe000ed84, read-only)",
      "purpose": "The CSSELR selects the current CCSIDR by specifying the required cache level\n\nLevel, bits [3:1] - Cache level of required cache\nInD, bit [0]      - Instruction not data bit"
    },
    "SCB.CTR": {
      "long_name": "Cache Type Register (at 0xe000ed7c, read-only)",
      "purpose": "The CTR provides information about the architecture of the caches\n\nFormat, bits [31:29]   - Indicates the implemented CTR format; 4 for None (ARMv7\n                         format. This is the format described in this section)\nCWG, bits [27:24]      - Cache Write-back Granule\nERG, bits [23:20]      - Exclusives Reservation Granule\nDminLine, bits [19:16] - Log2 of the number of words in the smallest cache line\n                         of all the data caches and unified caches that are\n                         controlled by the processor\nIminLine, bits [3:0]   - Log2 of the number of words in the smallest cache line\n                         of all the instruction caches that are controlled by\n                         the processor"
    },
    "SCB.DFSR": {
      "long_name": "Debug Fault Status Register (at 0xe000ed30, read-write)",
      "purpose": "Shows which debug event occurred\n\nEXTERNAL, bit [4] - Indicates a debug event generated because of the assertion\n                    of an external debug request\nVCATCH, bit [3]   - Indicates triggering of a Vector catch\nDWTTRAP, bit [2]  - Indicates a debug event generated by the DWT\nBKPT, bit [1]     - Indicates a debug event generated by BKPT instruction\n                    execution or a breakpoint match in FPB\nHALTED, bit [0]   - Indicates a debug event generated by either"
    },
    "SCB.HFSR": {
      "long_name": "HardFault Status Register (at 0xe000ed2c, read-write)",
      "purpose": "Shows the cause of any HardFault\n\nDEBUGEVT, bit [31] - Indicates when a Debug event has occurred\nFORCED, bit [30]   - Indicates that a fault with configurable priority has been\n                     escalated to a HardFault exception, because it could not be\n                     made active, because of priority or because it was disabled\nVECTTBL, bit [1]   - Indicates when a fault has occurred because of a vector\n                     table read error on exception processing"
    },
    "SCB.ICSR": {
      "long_name": "Interrupt Control and State Register (at 0xe000ed04, read-write)",
      "purpose": "Provides software control of the NMI, PendSV, and SysTick exceptions, and\nprovides interrupt status information\n\nNMIPENDSET, bit [31]      - On writes, makes the NMI exception active\nPENDSVSET, bit [28]       - On writes, sets the PendSV exception as pending\nPENDSVCLR, bit [27]       - Removes the pending status of the PendSV exception\nPENDSTSET, bit [26]       - On writes, sets the SysTick exception as pending\nPENDSTCLR, bit [25]       - Removes the pending status of the SysTick exception\nISRPREEMPT, bit [23]      - Indicates whether a pending exception will be\n                            serviced on exit from debug halt state\nISRPENDING, bit [22]      - Indicates whether an external interrupt, generated\n                            by the NVIC, is pending\nVECTPENDING, bits [20:12] - The exception number of the highest priority pending\n                            and enabled interrupt\nRETTOBASE, bit [11]       - In Handler mode, indicates whether there is an\n                            active exception other than the exception indicated\n                            by the current value of the IPSR\nVECTACTIVE, bits [8:0]    - The exception number of the current executing\n                            exception"
    },
    "SCB.ID_AFR0": {
      "long_name": "Auxiliary Feature Register 0 (at 0xe000ed4c, read-only)",
      "purpose": "Gives information about the IMPLEMENTATION DEFINED features of a processor\nimplementation"
    },
    "SCB.ID_DFR0": {
      "long_name": "Debug Feature Register 0 (at 0xe000ed48, read-only)",
      "purpose": "Gives top-level information about the debug system used in the processor\n\nDebug model, M profile, bits [23:20] - Support for memory-mapped debug model for\n                                       M profile processors"
    },
    "SCB.ID_ISAR0": {
      "long_name": "Instruction Set Attribute Register 0 (at 0xe000ed60, read-only)",
      "purpose": "Gives information about the instruction sets implemented by the processor\n\nDivide_instrs, bits [27:24]    - Indicates the supported Divide instructions\nDebug_instrs, bits [23:20]     - Indicates the supported Debug instructions\nCoproc_instrs, bits [19:16]    - Indicates the supported Coprocessor\n                                 instructions; 0 for None (None supported,\n                                 except for separately attributed architectures,\n                                 for example the Floating-point extension), 1\n                                 for None (Adds support for generic CDP, LDC,\n                                 MCR, MRC, and STC instructions), 2 for None (As\n                                 for 1, and adds support for generic CDP2, LDC2,\n                                 MCR2, MRC2, and STC2 instructions), 3 for None\n                                 (As for 2, and adds support for generic MCRR\n                                 and MRRC instructions, 4 As for 3, and adds\n                                 support for generic MCRR2 and MRRC2 inst)\nCmpBranch_instrs, bits [15:12] - Indicates the supported combined Compare and\n                                 Branch instructions\nBitfield_instrs, bits [11:8]   - Indicates the supported BitField instructions\nBitCount_instrs, bits [7:4]    - Indicates the supported Bit Counting\n                                 instructions"
    },
    "SCB.ID_ISAR1": {
      "long_name": "Instruction Set Attribute Register 1 (at 0xe000ed64, read-only)",
      "purpose": "Gives information about the instruction sets implemented by the processor\n\nInterwork_instrs, bits [27:24] - Indicates the supported Interworking\n                                 instructions; 0 for None (None supported,\n                                 ARMv7-M reserved), 1 for None (Adds support for\n                                 the BX instruction, and the T bit in the PSR),\n                                 2 for None (As for 1, and adds support for the\n                                 BLX instruction, and PC loads have BX-like\n                                 behavior), 3 for None (ARMv7-M reserved)\nImmediate_instrs, bits [23:20] - Indicates the support for data-processing\n                                 instructions with long immediates\nIfThen_instrs, bits [19:16]    - Indicates the supported IfThen instructions\nExtend_instrs, bits [15:12]    - Indicates the supported Extend instructions; 0\n                                 for None (None supported, ARMv7-M reserved), 1\n                                 for None (Adds support for the SXTB, SXTH,\n                                 UXTB, and UXTH instructions), 2 for None (As\n                                 for 1, and adds support for the SXTAB, SXTAB16,\n                                 SXTAH, SXTB16, UXTAB, UXTAB16, UXTAH, and\n                                 UXTB16 instructions)"
    },
    "SCB.ID_ISAR2": {
      "long_name": "Instruction Set Attribute Register 2 (at 0xe000ed68, read-only)",
      "purpose": "Gives information about the instruction sets implemented by the processor\n\nReversal_instrs, bits [31:28]      - Indicates the supported Reversal\n                                     instructions; 0 for None (None supported,\n                                     ARMv7-M reserved), 1 for None (Adds support\n                                     for the REV, REV16, and REVSH instructions,\n                                     ARMv7-M reserved), 2 for None (As for 1,\n                                     and adds support for the RBIT instruction)\nMultU_instrs, bits [23:20]         - Indicates the supported advanced unsigned\n                                     Multiply instructions; 0 for None (None\n                                     supported, ARMv7-M reserved), 1 for None\n                                     (Adds support for the UMULL and UMLAL\n                                     instructions), 2 for None (As for 1, and\n                                     adds support for the UMAAL instruction)\nMultS_instrs, bits [19:16]         - Indicates the supported advanced signed\n                                     Multiply instructions; 0 for None (None\n                                     supported, ARMv7-M reserved), 1 for None\n                                     (Adds support for the SMULL and SMLAL\n                                     instructions), 2 for None (As for 1, and\n                                     adds support for the SMLABB, SMLABT,\n                                     SMLALBB, SMLALBT, SMLALTB, SMLALTT, SMLATB,\n                                     SMLATT, SMLAWB, SMLAWT, SMULBB, S), 3 for\n                                     None (As for 2, and adds support for the\n                                     SMLAD, SMLADX, SMLALD, SMLALDX, SMLSD,\n                                     SMLSDX, SMLSLD, SMLSLDX, SMMLA, SMMLAR,\n                                     SMMLS, SMMLSR,)\nMult_instrs, bits [15:12]          - Indicates the supported additional Multiply\n                                     instructions; 0 for None (None supported.\n                                     This means only MUL is supported. ARMv7-M\n                                     reserved), 1 for None (Adds support for the\n                                     MLA instruction, ARMv7-M reserved), 2 for\n                                     None (As for 1, and adds support for the\n                                     MLS instruction)\nMultiAccessInt_instrs, bits [11:8] - Indicates the support for multi-access\n                                     interruptible instructions; 0 for None\n                                     (None supported. This means the LDM and STM\n                                     instructions are not interruptible), 1 for\n                                     None (LDM and STM instructions are\n                                     restartable), 2 for None (LDM and STM\n                                     instructions are continuable)\nMemHint_instrs, bits [7:4]         - Indicates the supported Memory Hint\n                                     instructions; 0 for None (None supported,\n                                     ARMv7-M reserved), 2 for None (Adds support\n                                     for the PLD instruction), 3 for None (As\n                                     for 1 or 2, and adds support for the PLI\n                                     instruction)\nLoadStore_instrs, bits [3:0]       - Indicates the supported additional load and\n                                     store instructions"
    },
    "SCB.ID_ISAR3": {
      "long_name": "Instruction Set Attribute Register 3 (at 0xe000ed6c, read-only)",
      "purpose": "Gives information about the instruction sets implemented by the processor\n\nTrueNOP_instrs, bits [27:24]   - Indicates the support for a true NOP\n                                 instruction\nThumbCopy_instrs, bits [23:20] - Indicates the supported non flag-setting MOV\n                                 instructions\nTabBranch_instrs, bits [19:16] - Indicates the supported Table Branch\n                                 instructions\nSynchPrim_instrs, bits [15:12] - Must be interpreted with the ID_ISAR4\nSVC_instrs, bits [11:8]        - Indicates the supported SVC instructions\nSIMD_instrs, bits [7:4]        - Indicates the supported SIMD instructions; 0\n                                 for None (None supported, ARMv7-M reserved), 1\n                                 for None (Adds support for the SSAT and USAT\n                                 instructions, and for the Q bit in the PSRs), 2\n                                 for None (Reserved), 3 for None (As for 1, and\n                                 adds support for the PKHBT, PKHTB, QADD16,\n                                 QADD8, QASX, QSUB16, QSUB8, QSAX, SADD16,\n                                 SADD8, SASX, SEL, SHADD16, SH)\nSaturate_instrs, bits [3:0]    - Indicates the supported Saturate instructions"
    },
    "SCB.ID_ISAR4": {
      "long_name": "Instruction Set Attribute Register 4 (at 0xe000ed70, read-only)",
      "purpose": "Gives information about the instruction sets implemented by the processor\n\nPSR_M_instrs, bits [27:24]          - Indicates the supported M profile\n                                      instructions to modify the PSRs\nSynchPrim_instrs_frac, bits [23:20] - Must be interpreted with the ID_ISAR3\nBarrier_instrs, bits [19:16]        - Indicates the supported Barrier\n                                      instructions\nWriteback_instrs, bits [11:8]       - Indicates the support for Writeback\n                                      addressing modes\nWithShifts_instrs, bits [7:4]       - Indicates the support for instructions\n                                      with shifts; 0 for None (Nonzero shifts\n                                      supported only in MOV and shift\n                                      instructions), 1 for None (Adds support\n                                      for shifts of loads and stores over the\n                                      range LSL 0-3), 2 for None (Reserved), 3\n                                      for None (As for 1, and adds support for\n                                      other constant shift options, on loads,\n                                      stores, and other instructions), 4 for\n                                      None (ARMv7-M reserved)\nUnpriv_instrs, bits [3:0]           - Indicates the supported unprivileged\n                                      instructions; 0 for None (None supported,\n                                      ARMv7-M reserved), 1 for None (Adds\n                                      support for the LDRBT, LDRT, STRBT, and\n                                      STRT instructions), 2 for None (As for 1,\n                                      and adds support for the LDRHT, LDRSBT,\n                                      LDRSHT, and STRHT instructions)"
    },
    "SCB.ID_MMFR0": {
      "long_name": "Memory Model Feature Register 0 (at 0xe000ed50, read-only)",
      "purpose": "Gives information about the implemented memory model and memory management\nsupport\n\nAuxiliary registers, bits [23:20]   - Indicates the support for Auxiliary\n                                      registers; 0 for None (Not supported), 1\n                                      for None (Support for Auxiliary Control\n                                      Register only), 2 for None (ARMv7-M\n                                      reserved)\nTCM support, bits [19:16]           - Indicates the support for Tightly Coupled\n                                      Memory (TCM); 0 for None (No tightly\n                                      coupled memories implemented), 1 for None\n                                      (Tightly coupled memories implemented with\n                                      IMPLEMENTATION DEFINED control), 2 for\n                                      None (ARMv7-M reserved)\nShareability levels, bits [15:12]   - Indicates the number of shareability\n                                      levels implemented\nOutermost shareability, bits [11:8] - Indicates the outermost shareability\n                                      domain implemented; 0 for None\n                                      (Implemented as Non-cacheable), 1 for None\n                                      (ARMv7-M reserved), 15 for None\n                                      (Shareability ignored)\nPMSA support, bits [7:4]            - Indicates support for a PMSA; 0 for None\n                                      (Not supported), 3 for None (PMSAv7,\n                                      providing support for a base region and\n                                      subregions)"
    },
    "SCB.ID_MMFR1": {
      "long_name": "Memory Model Feature Register 1 (at 0xe000ed54, read-only)",
      "purpose": "Gives information about the implemented memory model and memory management\nsupport"
    },
    "SCB.ID_MMFR2": {
      "long_name": "Memory Model Feature Register 2 (at 0xe000ed58, read-only)",
      "purpose": "Gives information about the implemented memory model and memory management\nsupport\n\nWFI stall, bits [27:24] - Indicates the support for Wait For Interrupt (WFI)\n                          stalling"
    },
    "SCB.ID_MMFR3": {
      "long_name": "Memory Model Feature Register 3 (at 0xe000ed5c, read-only)",
      "purpose": "Gives information about the implemented memory model and memory management\nsupport"
    },
    "SCB.ID_PFR0": {
      "long_name": "Processor Feature Register 0 (at 0xe000ed40, read-only)",
      "purpose": "Gives top-level information about the instruction sets supported by the\nprocessor\n\nState3, bits [15:12] - ARMv7-M reserved\nState2, bits [11:8]  - ARMv7-M reserved\nState1, bits [7:4]   - Thumb instruction set support; 3 for None (Support for\n                       Thumb encoding including Thumb-2 technology, with all\n                       basic 16-bit and 32-bit instructions)\nState0, bits [3:0]   - ARM instruction set support"
    },
    "SCB.ID_PFR1": {
      "long_name": "Processor Feature Register 1 (at 0xe000ed44, read-only)",
      "purpose": "Gives top-level information about the instruction sets supported by the\nprocessor\n\nM profile programmers model, bits [11:8] - 0 for None (ARMv7-M reserved), 1 for\n                                           None (Reserved), 2 for None (Two-\n                                           stack programmers model supported)"
    },
    "SCB.MMFAR": {
      "long_name": "MemManage Fault Address Register (at 0xe000ed34, read-write)",
      "purpose": "Shows the address of the memory location that caused an MPU fault\n\nADDRESS, bits [31:0] - Data address for an MPU fault"
    },
    "SCB.SCR": {
      "long_name": "System Control Register (at 0xe000ed10, read-write)",
      "purpose": "Sets or returns system control data\n\nSEVONPEND, bit [4]   - Determines whether an interrupt transition from inactive\n                       state to pending state is a wakeup event\nSLEEPDEEP, bit [2]   - Provides a qualifying hint indicating that waking from\n                       sleep might take longer\nSLEEPONEXIT, bit [1] - Determines whether, on an exit from an ISR that returns\n                       to the base level of execution priority, the processor\n                       enters a sleep state"
    },
    "SCB.SHCSR": {
      "long_name": "System Handler Control and State Register (at 0xe000ed24, read-write)",
      "purpose": "Controls and provides the active and pending status of system exceptions\n\nUSGFAULTENA, bit [18]    - 0 for None (Disable UsageFault), 1 for None (Enable\n                           UsageFault)\nBUSFAULTENA, bit [17]    - 0 for None (Disable BusFault), 1 for None (Enable\n                           BusFault)\nMEMFAULTENA, bit [16]    - 0 for None (Disable MemManage fault), 1 for None\n                           (Enable MemManage fault)\nSVCALLPENDED, bit [15]   - 0 for None (SVCall is not pending), 1 for None\n                           (SVCall is pending)\nBUSFAULTPENDED, bit [14] - 0 for None (BusFault is not pending), 1 for None\n                           (BusFault is pending)\nMEMFAULTPENDED, bit [13] - 0 for None (MemManage is not pending), 1 for None\n                           (MemManage is pending)\nUSGFAULTPENDED, bit [12] - 0 for None (UsageFault is not pending), 1 for None\n                           (UsageFault is pending)\nSYSTICKACT, bit [11]     - 0 for None (SysTick is not active), 1 for None\n                           (SysTick is active)\nPENDSVACT, bit [10]      - 0 for None (PendSV is not active), 1 for None (PendSV\n                           is active)\nMONITORACT, bit [8]      - 0 for None (Monitor is not active), 1 for None\n                           (Monitor is active)\nSVCALLACT, bit [7]       - 0 for None (SVCall is not active), 1 for None (SVCall\n                           is active)\nUSGFAULTACT, bit [3]     - 0 for None (UsageFault is not active), 1 for None\n                           (UsageFault is active)\nBUSFAULTACT, bit [1]     - 0 for None (BusFault is not active), 1 for None\n                           (BusFault is active)\nMEMFAULTACT, bit [0]     - 0 for None (MemManage is not active), 1 for None\n                           (MemManage is active)"
    },
    "SCB.SHPR1": {
      "long_name": "System Handler Priority Register 1 (at 0xe000ed18, read-write)",
      "purpose": "Sets or returns priority for system handlers 4-7\n\nPRI_7, bits [31:24] - Reserved for priority of system handler 7\nPRI_6, bits [23:16] - Priority of system handler 6, UsageFault\nPRI_5, bits [15:8]  - Priority of system handler 5, BusFault\nPRI_4, bits [7:0]   - Priority of system handler 4, MemManage"
    },
    "SCB.SHPR2": {
      "long_name": "System Handler Priority Register 2 (at 0xe000ed1c, read-write)",
      "purpose": "Sets or returns priority for system handlers 8-11\n\nPRI_11, bits [31:24] - Priority of system handler 11, SVCall\nPRI_10, bits [23:16] - Reserved for priority of system handler 10\nPRI_9, bits [15:8]   - Reserved for priority of system handler 9\nPRI_8, bits [7:0]    - Reserved for priority of system handler 8"
    },
    "SCB.SHPR3": {
      "long_name": "System Handler Priority Register 3 (at 0xe000ed20, read-write)",
      "purpose": "Sets or returns priority for system handlers 12-15\n\nPRI_15, bits [31:24] - Priority of system handler 15, SysTick\nPRI_14, bits [23:16] - Priority of system handler 14, PendSV\nPRI_13, bits [15:8]  - Reserved for priority of system handler 13\nPRI_12, bits [7:0]   - Priority of system handler 12, DebugMonitor"
    },
    "SCB.VTOR": {
      "long_name": "Vector Table Offset Register (at 0xe000ed08, read-write)",
      "purpose": "Holds the vector table address\n\nTBLOFF, bits [31:7] - Bits[31:7] of the vector table address"
    },
    "SIG.STIR": {
      "long_name": "Software Triggered Interrupt Register (at 0xe000ef00, write-only)",
      "purpose": "Provides a mechanism for software to generate an interrupt\n\nINTID, bits [8:0] - Indicates the interrupt to be triggered"
    },
    "SPI0.CONFIG": {
      "long_name": "SPI0.CONFIG (at 0x40003554, read-write)",
      "purpose": "Configuration register\n\nORDER, bit [0] - Bit order\nCPHA, bit [1]  - Serial clock (SCK) phase\nCPOL, bit [2]  - Serial clock (SCK) polarity"
    },
    "SPI0.ENABLE": {
      "long_name": "SPI0.ENABLE (at 0x40003500, read-write)",
      "purpose": "Enable SPI\n\nENABLE, bits [0:3] - Enable or disable SPI"
    },
    "SPI0.EVENTS_READY": {
      "long_name": "SPI0.EVENTS_READY (at 0x40003108, read-write)",
      "purpose": "TXD byte sent and RXD byte received"
    },
    "SPI0.FREQUENCY": {
      "long_name": "SPI0.FREQUENCY (at 0x40003524, read-write)",
      "purpose": "SPI frequency\n\nFREQUENCY, bits [0:31] - SPI master data rate; 0x02000000 for K125 (125 kbps),\n                         0x04000000 for K250 (250 kbps), 0x08000000 for K500\n                         (500 kbps), 0x10000000 for M1 (1 Mbps), 0x20000000 for\n                         M2 (2 Mbps), 0x40000000 for M4 (4 Mbps), 0x80000000 for\n                         M8 (8 Mbps)"
    },
    "SPI0.INTENCLR": {
      "long_name": "SPI0.INTENCLR (at 0x40003308, read-write)",
      "purpose": "Disable interrupt\n\nREADY, bit [2] - Write '1' to Disable interrupt for READY event"
    },
    "SPI0.INTENSET": {
      "long_name": "SPI0.INTENSET (at 0x40003304, read-write)",
      "purpose": "Enable interrupt\n\nREADY, bit [2] - Write '1' to Enable interrupt for READY event"
    },
    "SPI0.PSEL.MISO": {
      "long_name": "SPI0.PSEL.MISO (at 0x40003510, read-write)",
      "purpose": "Pin select for MISO\n\nPSELMISO, bits [0:31] - Pin number configuration for SPI MISO signal; 0xFFFFFFFF\n                        for Disconnected (Disconnect)"
    },
    "SPI0.PSEL.MOSI": {
      "long_name": "SPI0.PSEL.MOSI (at 0x4000350c, read-write)",
      "purpose": "Pin select for MOSI\n\nPSELMOSI, bits [0:31] - Pin number configuration for SPI MOSI signal; 0xFFFFFFFF\n                        for Disconnected (Disconnect)"
    },
    "SPI0.PSEL.SCK": {
      "long_name": "SPI0.PSEL.SCK (at 0x40003508, read-write)",
      "purpose": "Pin select for SCK\n\nPSELSCK, bits [0:31] - Pin number configuration for SPI SCK signal; 0xFFFFFFFF\n                       for Disconnected (Disconnect)"
    },
    "SPI0.RXD": {
      "long_name": "SPI0.RXD (at 0x40003518, read-only)",
      "purpose": "RXD register\n\nRXD, bits [0:7] - RX data received. Double buffered"
    },
    "SPI0.TXD": {
      "long_name": "SPI0.TXD (at 0x4000351c, read-write)",
      "purpose": "TXD register\n\nTXD, bits [0:7] - TX data to send. Double buffered"
    },
    "SPI1.CONFIG": {
      "long_name": "SPI1.CONFIG (at 0x40004554, read-write)",
      "purpose": "Configuration register\n\nORDER, bit [0] - Bit order\nCPHA, bit [1]  - Serial clock (SCK) phase\nCPOL, bit [2]  - Serial clock (SCK) polarity"
    },
    "SPI1.ENABLE": {
      "long_name": "SPI1.ENABLE (at 0x40004500, read-write)",
      "purpose": "Enable SPI\n\nENABLE, bits [0:3] - Enable or disable SPI"
    },
    "SPI1.EVENTS_READY": {
      "long_name": "SPI1.EVENTS_READY (at 0x40004108, read-write)",
      "purpose": "TXD byte sent and RXD byte received"
    },
    "SPI1.FREQUENCY": {
      "long_name": "SPI1.FREQUENCY (at 0x40004524, read-write)",
      "purpose": "SPI frequency\n\nFREQUENCY, bits [0:31] - SPI master data rate; 0x02000000 for K125 (125 kbps),\n                         0x04000000 for K250 (250 kbps), 0x08000000 for K500\n                         (500 kbps), 0x10000000 for M1 (1 Mbps), 0x20000000 for\n                         M2 (2 Mbps), 0x40000000 for M4 (4 Mbps), 0x80000000 for\n                         M8 (8 Mbps)"
    },
    "SPI1.INTENCLR": {
      "long_name": "SPI1.INTENCLR (at 0x40004308, read-write)",
      "purpose": "Disable interrupt\n\nREADY, bit [2] - Write '1' to Disable interrupt for READY event"
    },
    "SPI1.INTENSET": {
      "long_name": "SPI1.INTENSET (at 0x40004304, read-write)",
      "purpose": "Enable interrupt\n\nREADY, bit [2] - Write '1' to Enable interrupt for READY event"
    },
    "SPI1.PSEL.MISO": {
      "long_name": "SPI1.PSEL.MISO (at 0x40004510, read-write)",
      "purpose": "Pin select for MISO\n\nPSELMISO, bits [0:31] - Pin number configuration for SPI MISO signal; 0xFFFFFFFF\n                        for Disconnected (Disconnect)"
    },
    "SPI1.PSEL.MOSI": {
      "long_name": "SPI1.PSEL.MOSI (at 0x4000450c, read-write)",
      "purpose": "Pin select for MOSI\n\nPSELMOSI, bits [0:31] - Pin number configuration for SPI MOSI signal; 0xFFFFFFFF\n                        for Disconnected (Disconnect)"
    },
    "SPI1.PSEL.SCK": {
      "long_name": "SPI1.PSEL.SCK (at 0x40004508, read-write)",
      "purpose": "Pin select for SCK\n\nPSELSCK, bits [0:31] - Pin number configuration for SPI SCK signal; 0xFFFFFFFF\n                       for Disconnected (Disconnect)"
    },
    "SPI1.RXD": {
      "long_name": "SPI1.RXD (at 0x40004518, read-only)",
      "purpose": "RXD register\n\nRXD, bits [0:7] - RX data received. Double buffered"
    },
    "SPI1.TXD": {
      "long_name": "SPI1.TXD (at 0x4000451c, read-write)",
      "purpose": "TXD register\n\nTXD, bits [0:7] - TX data to send. Double buffered"
    },
    "SPI2.CONFIG": {
      "long_name": "SPI2.CONFIG (at 0x40023554, read-write)",
      "purpose": "Configuration register\n\nORDER, bit [0] - Bit order\nCPHA, bit [1]  - Serial clock (SCK) phase\nCPOL, bit [2]  - Serial clock (SCK) polarity"
    },
    "SPI2.ENABLE": {
      "long_name": "SPI2.ENABLE (at 0x40023500, read-write)",
      "purpose": "Enable SPI\n\nENABLE, bits [0:3] - Enable or disable SPI"
    },
    "SPI2.EVENTS_READY": {
      "long_name": "SPI2.EVENTS_READY (at 0x40023108, read-write)",
      "purpose": "TXD byte sent and RXD byte received"
    },
    "SPI2.FREQUENCY": {
      "long_name": "SPI2.FREQUENCY (at 0x40023524, read-write)",
      "purpose": "SPI frequency\n\nFREQUENCY, bits [0:31] - SPI master data rate; 0x02000000 for K125 (125 kbps),\n                         0x04000000 for K250 (250 kbps), 0x08000000 for K500\n                         (500 kbps), 0x10000000 for M1 (1 Mbps), 0x20000000 for\n                         M2 (2 Mbps), 0x40000000 for M4 (4 Mbps), 0x80000000 for\n                         M8 (8 Mbps)"
    },
    "SPI2.INTENCLR": {
      "long_name": "SPI2.INTENCLR (at 0x40023308, read-write)",
      "purpose": "Disable interrupt\n\nREADY, bit [2] - Write '1' to Disable interrupt for READY event"
    },
    "SPI2.INTENSET": {
      "long_name": "SPI2.INTENSET (at 0x40023304, read-write)",
      "purpose": "Enable interrupt\n\nREADY, bit [2] - Write '1' to Enable interrupt for READY event"
    },
    "SPI2.PSEL.MISO": {
      "long_name": "SPI2.PSEL.MISO (at 0x40023510, read-write)",
      "purpose": "Pin select for MISO\n\nPSELMISO, bits [0:31] - Pin number configuration for SPI MISO signal; 0xFFFFFFFF\n                        for Disconnected (Disconnect)"
    },
    "SPI2.PSEL.MOSI": {
      "long_name": "SPI2.PSEL.MOSI (at 0x4002350c, read-write)",
      "purpose": "Pin select for MOSI\n\nPSELMOSI, bits [0:31] - Pin number configuration for SPI MOSI signal; 0xFFFFFFFF\n                        for Disconnected (Disconnect)"
    },
    "SPI2.PSEL.SCK": {
      "long_name": "SPI2.PSEL.SCK (at 0x40023508, read-write)",
      "purpose": "Pin select for SCK\n\nPSELSCK, bits [0:31] - Pin number configuration for SPI SCK signal; 0xFFFFFFFF\n                       for Disconnected (Disconnect)"
    },
    "SPI2.RXD": {
      "long_name": "SPI2.RXD (at 0x40023518, read-only)",
      "purpose": "RXD register\n\nRXD, bits [0:7] - RX data received. Double buffered"
    },
    "SPI2.TXD": {
      "long_name": "SPI2.TXD (at 0x4002351c, read-write)",
      "purpose": "TXD register\n\nTXD, bits [0:7] - TX data to send. Double buffered"
    },
    "SPIM0.CONFIG": {
      "long_name": "SPIM0.CONFIG (at 0x40003554, read-write)",
      "purpose": "Configuration register\n\nORDER, bit [0] - Bit order\nCPHA, bit [1]  - Serial clock (SCK) phase\nCPOL, bit [2]  - Serial clock (SCK) polarity"
    },
    "SPIM0.ENABLE": {
      "long_name": "SPIM0.ENABLE (at 0x40003500, read-write)",
      "purpose": "Enable SPIM\n\nENABLE, bits [0:3] - Enable or disable SPIM; 0 for Disabled (Disable SPIM), 7\n                     for Enabled (Enable SPIM)"
    },
    "SPIM0.EVENTS_END": {
      "long_name": "SPIM0.EVENTS_END (at 0x40003118, read-write)",
      "purpose": "End of RXD buffer and TXD buffer reached"
    },
    "SPIM0.EVENTS_ENDRX": {
      "long_name": "SPIM0.EVENTS_ENDRX (at 0x40003110, read-write)",
      "purpose": "End of RXD buffer reached"
    },
    "SPIM0.EVENTS_ENDTX": {
      "long_name": "SPIM0.EVENTS_ENDTX (at 0x40003120, read-write)",
      "purpose": "End of TXD buffer reached"
    },
    "SPIM0.EVENTS_STARTED": {
      "long_name": "SPIM0.EVENTS_STARTED (at 0x4000314c, read-write)",
      "purpose": "Transaction started"
    },
    "SPIM0.EVENTS_STOPPED": {
      "long_name": "SPIM0.EVENTS_STOPPED (at 0x40003104, read-write)",
      "purpose": "SPI transaction has stopped"
    },
    "SPIM0.FREQUENCY": {
      "long_name": "SPIM0.FREQUENCY (at 0x40003524, read-write)",
      "purpose": "SPI frequency. Accuracy depends on the HFCLK source selected.\n\nFREQUENCY, bits [0:31] - SPI master data rate; 0x02000000 for K125 (125 kbps),\n                         0x04000000 for K250 (250 kbps), 0x08000000 for K500\n                         (500 kbps), 0x10000000 for M1 (1 Mbps), 0x20000000 for\n                         M2 (2 Mbps), 0x40000000 for M4 (4 Mbps), 0x80000000 for\n                         M8 (8 Mbps)"
    },
    "SPIM0.INTENCLR": {
      "long_name": "SPIM0.INTENCLR (at 0x40003308, read-write)",
      "purpose": "Disable interrupt\n\nSTOPPED, bit [1]  - Write '1' to Disable interrupt for STOPPED event\nENDRX, bit [4]    - Write '1' to Disable interrupt for ENDRX event\nEND, bit [6]      - Write '1' to Disable interrupt for END event\nENDTX, bit [8]    - Write '1' to Disable interrupt for ENDTX event\nSTARTED, bit [19] - Write '1' to Disable interrupt for STARTED event"
    },
    "SPIM0.INTENSET": {
      "long_name": "SPIM0.INTENSET (at 0x40003304, read-write)",
      "purpose": "Enable interrupt\n\nSTOPPED, bit [1]  - Write '1' to Enable interrupt for STOPPED event\nENDRX, bit [4]    - Write '1' to Enable interrupt for ENDRX event\nEND, bit [6]      - Write '1' to Enable interrupt for END event\nENDTX, bit [8]    - Write '1' to Enable interrupt for ENDTX event\nSTARTED, bit [19] - Write '1' to Enable interrupt for STARTED event"
    },
    "SPIM0.ORC": {
      "long_name": "SPIM0.ORC (at 0x400035c0, read-write)",
      "purpose": "Over-read character. Character clocked out in case and over-read of the TXD\nbuffer.\n\nORC, bits [0:7] - Over-read character. Character clocked out in case and over-\n                  read of the TXD buffer."
    },
    "SPIM0.PSEL.MISO": {
      "long_name": "SPIM0.PSEL.MISO (at 0x40003510, read-write)",
      "purpose": "Pin select for MISO signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "SPIM0.PSEL.MOSI": {
      "long_name": "SPIM0.PSEL.MOSI (at 0x4000350c, read-write)",
      "purpose": "Pin select for MOSI signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "SPIM0.PSEL.SCK": {
      "long_name": "SPIM0.PSEL.SCK (at 0x40003508, read-write)",
      "purpose": "Pin select for SCK\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "SPIM0.RXD.AMOUNT": {
      "long_name": "SPIM0.RXD.AMOUNT (at 0x4000353c, read-only)",
      "purpose": "Number of bytes transferred in the last transaction\n\nAMOUNT, bits [0:7] - Number of bytes transferred in the last transaction"
    },
    "SPIM0.RXD.LIST": {
      "long_name": "SPIM0.RXD.LIST (at 0x40003540, read-write)",
      "purpose": "EasyDMA list type\n\nLIST, bits [0:2] - List type"
    },
    "SPIM0.RXD.MAXCNT": {
      "long_name": "SPIM0.RXD.MAXCNT (at 0x40003538, read-write)",
      "purpose": "Maximum number of bytes in receive buffer\n\nMAXCNT, bits [0:7] - Maximum number of bytes in receive buffer"
    },
    "SPIM0.RXD.PTR": {
      "long_name": "SPIM0.RXD.PTR (at 0x40003534, read-write)",
      "purpose": "Data pointer\n\nPTR, bits [0:31] - Data pointer"
    },
    "SPIM0.SHORTS": {
      "long_name": "SPIM0.SHORTS (at 0x40003200, read-write)",
      "purpose": "Shortcut register\n\nEND_START, bit [17] - Shortcut between END event and START task"
    },
    "SPIM0.TASKS_RESUME": {
      "long_name": "SPIM0.TASKS_RESUME (at 0x40003020, write-only)",
      "purpose": "Resume SPI transaction"
    },
    "SPIM0.TASKS_START": {
      "long_name": "SPIM0.TASKS_START (at 0x40003010, write-only)",
      "purpose": "Start SPI transaction"
    },
    "SPIM0.TASKS_STOP": {
      "long_name": "SPIM0.TASKS_STOP (at 0x40003014, write-only)",
      "purpose": "Stop SPI transaction"
    },
    "SPIM0.TASKS_SUSPEND": {
      "long_name": "SPIM0.TASKS_SUSPEND (at 0x4000301c, write-only)",
      "purpose": "Suspend SPI transaction"
    },
    "SPIM0.TXD.AMOUNT": {
      "long_name": "SPIM0.TXD.AMOUNT (at 0x4000354c, read-only)",
      "purpose": "Number of bytes transferred in the last transaction\n\nAMOUNT, bits [0:7] - Number of bytes transferred in the last transaction"
    },
    "SPIM0.TXD.LIST": {
      "long_name": "SPIM0.TXD.LIST (at 0x40003550, read-write)",
      "purpose": "EasyDMA list type\n\nLIST, bits [0:2] - List type"
    },
    "SPIM0.TXD.MAXCNT": {
      "long_name": "SPIM0.TXD.MAXCNT (at 0x40003548, read-write)",
      "purpose": "Maximum number of bytes in transmit buffer\n\nMAXCNT, bits [0:7] - Maximum number of bytes in transmit buffer"
    },
    "SPIM0.TXD.PTR": {
      "long_name": "SPIM0.TXD.PTR (at 0x40003544, read-write)",
      "purpose": "Data pointer\n\nPTR, bits [0:31] - Data pointer"
    },
    "SPIM1.CONFIG": {
      "long_name": "SPIM1.CONFIG (at 0x40004554, read-write)",
      "purpose": "Configuration register\n\nORDER, bit [0] - Bit order\nCPHA, bit [1]  - Serial clock (SCK) phase\nCPOL, bit [2]  - Serial clock (SCK) polarity"
    },
    "SPIM1.ENABLE": {
      "long_name": "SPIM1.ENABLE (at 0x40004500, read-write)",
      "purpose": "Enable SPIM\n\nENABLE, bits [0:3] - Enable or disable SPIM; 0 for Disabled (Disable SPIM), 7\n                     for Enabled (Enable SPIM)"
    },
    "SPIM1.EVENTS_END": {
      "long_name": "SPIM1.EVENTS_END (at 0x40004118, read-write)",
      "purpose": "End of RXD buffer and TXD buffer reached"
    },
    "SPIM1.EVENTS_ENDRX": {
      "long_name": "SPIM1.EVENTS_ENDRX (at 0x40004110, read-write)",
      "purpose": "End of RXD buffer reached"
    },
    "SPIM1.EVENTS_ENDTX": {
      "long_name": "SPIM1.EVENTS_ENDTX (at 0x40004120, read-write)",
      "purpose": "End of TXD buffer reached"
    },
    "SPIM1.EVENTS_STARTED": {
      "long_name": "SPIM1.EVENTS_STARTED (at 0x4000414c, read-write)",
      "purpose": "Transaction started"
    },
    "SPIM1.EVENTS_STOPPED": {
      "long_name": "SPIM1.EVENTS_STOPPED (at 0x40004104, read-write)",
      "purpose": "SPI transaction has stopped"
    },
    "SPIM1.FREQUENCY": {
      "long_name": "SPIM1.FREQUENCY (at 0x40004524, read-write)",
      "purpose": "SPI frequency. Accuracy depends on the HFCLK source selected.\n\nFREQUENCY, bits [0:31] - SPI master data rate; 0x02000000 for K125 (125 kbps),\n                         0x04000000 for K250 (250 kbps), 0x08000000 for K500\n                         (500 kbps), 0x10000000 for M1 (1 Mbps), 0x20000000 for\n                         M2 (2 Mbps), 0x40000000 for M4 (4 Mbps), 0x80000000 for\n                         M8 (8 Mbps)"
    },
    "SPIM1.INTENCLR": {
      "long_name": "SPIM1.INTENCLR (at 0x40004308, read-write)",
      "purpose": "Disable interrupt\n\nSTOPPED, bit [1]  - Write '1' to Disable interrupt for STOPPED event\nENDRX, bit [4]    - Write '1' to Disable interrupt for ENDRX event\nEND, bit [6]      - Write '1' to Disable interrupt for END event\nENDTX, bit [8]    - Write '1' to Disable interrupt for ENDTX event\nSTARTED, bit [19] - Write '1' to Disable interrupt for STARTED event"
    },
    "SPIM1.INTENSET": {
      "long_name": "SPIM1.INTENSET (at 0x40004304, read-write)",
      "purpose": "Enable interrupt\n\nSTOPPED, bit [1]  - Write '1' to Enable interrupt for STOPPED event\nENDRX, bit [4]    - Write '1' to Enable interrupt for ENDRX event\nEND, bit [6]      - Write '1' to Enable interrupt for END event\nENDTX, bit [8]    - Write '1' to Enable interrupt for ENDTX event\nSTARTED, bit [19] - Write '1' to Enable interrupt for STARTED event"
    },
    "SPIM1.ORC": {
      "long_name": "SPIM1.ORC (at 0x400045c0, read-write)",
      "purpose": "Over-read character. Character clocked out in case and over-read of the TXD\nbuffer.\n\nORC, bits [0:7] - Over-read character. Character clocked out in case and over-\n                  read of the TXD buffer."
    },
    "SPIM1.PSEL.MISO": {
      "long_name": "SPIM1.PSEL.MISO (at 0x40004510, read-write)",
      "purpose": "Pin select for MISO signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "SPIM1.PSEL.MOSI": {
      "long_name": "SPIM1.PSEL.MOSI (at 0x4000450c, read-write)",
      "purpose": "Pin select for MOSI signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "SPIM1.PSEL.SCK": {
      "long_name": "SPIM1.PSEL.SCK (at 0x40004508, read-write)",
      "purpose": "Pin select for SCK\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "SPIM1.RXD.AMOUNT": {
      "long_name": "SPIM1.RXD.AMOUNT (at 0x4000453c, read-only)",
      "purpose": "Number of bytes transferred in the last transaction\n\nAMOUNT, bits [0:7] - Number of bytes transferred in the last transaction"
    },
    "SPIM1.RXD.LIST": {
      "long_name": "SPIM1.RXD.LIST (at 0x40004540, read-write)",
      "purpose": "EasyDMA list type\n\nLIST, bits [0:2] - List type"
    },
    "SPIM1.RXD.MAXCNT": {
      "long_name": "SPIM1.RXD.MAXCNT (at 0x40004538, read-write)",
      "purpose": "Maximum number of bytes in receive buffer\n\nMAXCNT, bits [0:7] - Maximum number of bytes in receive buffer"
    },
    "SPIM1.RXD.PTR": {
      "long_name": "SPIM1.RXD.PTR (at 0x40004534, read-write)",
      "purpose": "Data pointer\n\nPTR, bits [0:31] - Data pointer"
    },
    "SPIM1.SHORTS": {
      "long_name": "SPIM1.SHORTS (at 0x40004200, read-write)",
      "purpose": "Shortcut register\n\nEND_START, bit [17] - Shortcut between END event and START task"
    },
    "SPIM1.TASKS_RESUME": {
      "long_name": "SPIM1.TASKS_RESUME (at 0x40004020, write-only)",
      "purpose": "Resume SPI transaction"
    },
    "SPIM1.TASKS_START": {
      "long_name": "SPIM1.TASKS_START (at 0x40004010, write-only)",
      "purpose": "Start SPI transaction"
    },
    "SPIM1.TASKS_STOP": {
      "long_name": "SPIM1.TASKS_STOP (at 0x40004014, write-only)",
      "purpose": "Stop SPI transaction"
    },
    "SPIM1.TASKS_SUSPEND": {
      "long_name": "SPIM1.TASKS_SUSPEND (at 0x4000401c, write-only)",
      "purpose": "Suspend SPI transaction"
    },
    "SPIM1.TXD.AMOUNT": {
      "long_name": "SPIM1.TXD.AMOUNT (at 0x4000454c, read-only)",
      "purpose": "Number of bytes transferred in the last transaction\n\nAMOUNT, bits [0:7] - Number of bytes transferred in the last transaction"
    },
    "SPIM1.TXD.LIST": {
      "long_name": "SPIM1.TXD.LIST (at 0x40004550, read-write)",
      "purpose": "EasyDMA list type\n\nLIST, bits [0:2] - List type"
    },
    "SPIM1.TXD.MAXCNT": {
      "long_name": "SPIM1.TXD.MAXCNT (at 0x40004548, read-write)",
      "purpose": "Maximum number of bytes in transmit buffer\n\nMAXCNT, bits [0:7] - Maximum number of bytes in transmit buffer"
    },
    "SPIM1.TXD.PTR": {
      "long_name": "SPIM1.TXD.PTR (at 0x40004544, read-write)",
      "purpose": "Data pointer\n\nPTR, bits [0:31] - Data pointer"
    },
    "SPIM2.CONFIG": {
      "long_name": "SPIM2.CONFIG (at 0x40023554, read-write)",
      "purpose": "Configuration register\n\nORDER, bit [0] - Bit order\nCPHA, bit [1]  - Serial clock (SCK) phase\nCPOL, bit [2]  - Serial clock (SCK) polarity"
    },
    "SPIM2.ENABLE": {
      "long_name": "SPIM2.ENABLE (at 0x40023500, read-write)",
      "purpose": "Enable SPIM\n\nENABLE, bits [0:3] - Enable or disable SPIM; 0 for Disabled (Disable SPIM), 7\n                     for Enabled (Enable SPIM)"
    },
    "SPIM2.EVENTS_END": {
      "long_name": "SPIM2.EVENTS_END (at 0x40023118, read-write)",
      "purpose": "End of RXD buffer and TXD buffer reached"
    },
    "SPIM2.EVENTS_ENDRX": {
      "long_name": "SPIM2.EVENTS_ENDRX (at 0x40023110, read-write)",
      "purpose": "End of RXD buffer reached"
    },
    "SPIM2.EVENTS_ENDTX": {
      "long_name": "SPIM2.EVENTS_ENDTX (at 0x40023120, read-write)",
      "purpose": "End of TXD buffer reached"
    },
    "SPIM2.EVENTS_STARTED": {
      "long_name": "SPIM2.EVENTS_STARTED (at 0x4002314c, read-write)",
      "purpose": "Transaction started"
    },
    "SPIM2.EVENTS_STOPPED": {
      "long_name": "SPIM2.EVENTS_STOPPED (at 0x40023104, read-write)",
      "purpose": "SPI transaction has stopped"
    },
    "SPIM2.FREQUENCY": {
      "long_name": "SPIM2.FREQUENCY (at 0x40023524, read-write)",
      "purpose": "SPI frequency. Accuracy depends on the HFCLK source selected.\n\nFREQUENCY, bits [0:31] - SPI master data rate; 0x02000000 for K125 (125 kbps),\n                         0x04000000 for K250 (250 kbps), 0x08000000 for K500\n                         (500 kbps), 0x10000000 for M1 (1 Mbps), 0x20000000 for\n                         M2 (2 Mbps), 0x40000000 for M4 (4 Mbps), 0x80000000 for\n                         M8 (8 Mbps)"
    },
    "SPIM2.INTENCLR": {
      "long_name": "SPIM2.INTENCLR (at 0x40023308, read-write)",
      "purpose": "Disable interrupt\n\nSTOPPED, bit [1]  - Write '1' to Disable interrupt for STOPPED event\nENDRX, bit [4]    - Write '1' to Disable interrupt for ENDRX event\nEND, bit [6]      - Write '1' to Disable interrupt for END event\nENDTX, bit [8]    - Write '1' to Disable interrupt for ENDTX event\nSTARTED, bit [19] - Write '1' to Disable interrupt for STARTED event"
    },
    "SPIM2.INTENSET": {
      "long_name": "SPIM2.INTENSET (at 0x40023304, read-write)",
      "purpose": "Enable interrupt\n\nSTOPPED, bit [1]  - Write '1' to Enable interrupt for STOPPED event\nENDRX, bit [4]    - Write '1' to Enable interrupt for ENDRX event\nEND, bit [6]      - Write '1' to Enable interrupt for END event\nENDTX, bit [8]    - Write '1' to Enable interrupt for ENDTX event\nSTARTED, bit [19] - Write '1' to Enable interrupt for STARTED event"
    },
    "SPIM2.ORC": {
      "long_name": "SPIM2.ORC (at 0x400235c0, read-write)",
      "purpose": "Over-read character. Character clocked out in case and over-read of the TXD\nbuffer.\n\nORC, bits [0:7] - Over-read character. Character clocked out in case and over-\n                  read of the TXD buffer."
    },
    "SPIM2.PSEL.MISO": {
      "long_name": "SPIM2.PSEL.MISO (at 0x40023510, read-write)",
      "purpose": "Pin select for MISO signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "SPIM2.PSEL.MOSI": {
      "long_name": "SPIM2.PSEL.MOSI (at 0x4002350c, read-write)",
      "purpose": "Pin select for MOSI signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "SPIM2.PSEL.SCK": {
      "long_name": "SPIM2.PSEL.SCK (at 0x40023508, read-write)",
      "purpose": "Pin select for SCK\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "SPIM2.RXD.AMOUNT": {
      "long_name": "SPIM2.RXD.AMOUNT (at 0x4002353c, read-only)",
      "purpose": "Number of bytes transferred in the last transaction\n\nAMOUNT, bits [0:7] - Number of bytes transferred in the last transaction"
    },
    "SPIM2.RXD.LIST": {
      "long_name": "SPIM2.RXD.LIST (at 0x40023540, read-write)",
      "purpose": "EasyDMA list type\n\nLIST, bits [0:2] - List type"
    },
    "SPIM2.RXD.MAXCNT": {
      "long_name": "SPIM2.RXD.MAXCNT (at 0x40023538, read-write)",
      "purpose": "Maximum number of bytes in receive buffer\n\nMAXCNT, bits [0:7] - Maximum number of bytes in receive buffer"
    },
    "SPIM2.RXD.PTR": {
      "long_name": "SPIM2.RXD.PTR (at 0x40023534, read-write)",
      "purpose": "Data pointer\n\nPTR, bits [0:31] - Data pointer"
    },
    "SPIM2.SHORTS": {
      "long_name": "SPIM2.SHORTS (at 0x40023200, read-write)",
      "purpose": "Shortcut register\n\nEND_START, bit [17] - Shortcut between END event and START task"
    },
    "SPIM2.TASKS_RESUME": {
      "long_name": "SPIM2.TASKS_RESUME (at 0x40023020, write-only)",
      "purpose": "Resume SPI transaction"
    },
    "SPIM2.TASKS_START": {
      "long_name": "SPIM2.TASKS_START (at 0x40023010, write-only)",
      "purpose": "Start SPI transaction"
    },
    "SPIM2.TASKS_STOP": {
      "long_name": "SPIM2.TASKS_STOP (at 0x40023014, write-only)",
      "purpose": "Stop SPI transaction"
    },
    "SPIM2.TASKS_SUSPEND": {
      "long_name": "SPIM2.TASKS_SUSPEND (at 0x4002301c, write-only)",
      "purpose": "Suspend SPI transaction"
    },
    "SPIM2.TXD.AMOUNT": {
      "long_name": "SPIM2.TXD.AMOUNT (at 0x4002354c, read-only)",
      "purpose": "Number of bytes transferred in the last transaction\n\nAMOUNT, bits [0:7] - Number of bytes transferred in the last transaction"
    },
    "SPIM2.TXD.LIST": {
      "long_name": "SPIM2.TXD.LIST (at 0x40023550, read-write)",
      "purpose": "EasyDMA list type\n\nLIST, bits [0:2] - List type"
    },
    "SPIM2.TXD.MAXCNT": {
      "long_name": "SPIM2.TXD.MAXCNT (at 0x40023548, read-write)",
      "purpose": "Maximum number of bytes in transmit buffer\n\nMAXCNT, bits [0:7] - Maximum number of bytes in transmit buffer"
    },
    "SPIM2.TXD.PTR": {
      "long_name": "SPIM2.TXD.PTR (at 0x40023544, read-write)",
      "purpose": "Data pointer\n\nPTR, bits [0:31] - Data pointer"
    },
    "SPIS0.CONFIG": {
      "long_name": "SPIS0.CONFIG (at 0x40003554, read-write)",
      "purpose": "Configuration register\n\nORDER, bit [0] - Bit order\nCPHA, bit [1]  - Serial clock (SCK) phase\nCPOL, bit [2]  - Serial clock (SCK) polarity"
    },
    "SPIS0.DEF": {
      "long_name": "SPIS0.DEF (at 0x4000355c, read-write)",
      "purpose": "Default character. Character clocked out in case of an ignored transaction.\n\nDEF, bits [0:7] - Default character. Character clocked out in case of an ignored\n                  transaction."
    },
    "SPIS0.ENABLE": {
      "long_name": "SPIS0.ENABLE (at 0x40003500, read-write)",
      "purpose": "Enable SPI slave\n\nENABLE, bits [0:3] - Enable or disable SPI slave; 0 for Disabled (Disable SPI\n                     slave), 2 for Enabled (Enable SPI slave)"
    },
    "SPIS0.EVENTS_ACQUIRED": {
      "long_name": "SPIS0.EVENTS_ACQUIRED (at 0x40003128, read-write)",
      "purpose": "Semaphore acquired"
    },
    "SPIS0.EVENTS_END": {
      "long_name": "SPIS0.EVENTS_END (at 0x40003104, read-write)",
      "purpose": "Granted transaction completed"
    },
    "SPIS0.EVENTS_ENDRX": {
      "long_name": "SPIS0.EVENTS_ENDRX (at 0x40003110, read-write)",
      "purpose": "End of RXD buffer reached"
    },
    "SPIS0.INTENCLR": {
      "long_name": "SPIS0.INTENCLR (at 0x40003308, read-write)",
      "purpose": "Disable interrupt\n\nEND, bit [1]       - Write '1' to Disable interrupt for END event\nENDRX, bit [4]     - Write '1' to Disable interrupt for ENDRX event\nACQUIRED, bit [10] - Write '1' to Disable interrupt for ACQUIRED event"
    },
    "SPIS0.INTENSET": {
      "long_name": "SPIS0.INTENSET (at 0x40003304, read-write)",
      "purpose": "Enable interrupt\n\nEND, bit [1]       - Write '1' to Enable interrupt for END event\nENDRX, bit [4]     - Write '1' to Enable interrupt for ENDRX event\nACQUIRED, bit [10] - Write '1' to Enable interrupt for ACQUIRED event"
    },
    "SPIS0.ORC": {
      "long_name": "SPIS0.ORC (at 0x400035c0, read-write)",
      "purpose": "Over-read character\n\nORC, bits [0:7] - Over-read character. Character clocked out after an over-read\n                  of the transmit buffer."
    },
    "SPIS0.PSEL.CSN": {
      "long_name": "SPIS0.PSEL.CSN (at 0x40003514, read-write)",
      "purpose": "Pin select for CSN signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "SPIS0.PSEL.MISO": {
      "long_name": "SPIS0.PSEL.MISO (at 0x4000350c, read-write)",
      "purpose": "Pin select for MISO signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "SPIS0.PSEL.MOSI": {
      "long_name": "SPIS0.PSEL.MOSI (at 0x40003510, read-write)",
      "purpose": "Pin select for MOSI signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "SPIS0.PSEL.SCK": {
      "long_name": "SPIS0.PSEL.SCK (at 0x40003508, read-write)",
      "purpose": "Pin select for SCK\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "SPIS0.RXD.AMOUNT": {
      "long_name": "SPIS0.RXD.AMOUNT (at 0x4000353c, read-only)",
      "purpose": "Number of bytes received in last granted transaction\n\nAMOUNT, bits [0:7] - Number of bytes received in the last granted transaction"
    },
    "SPIS0.RXD.MAXCNT": {
      "long_name": "SPIS0.RXD.MAXCNT (at 0x40003538, read-write)",
      "purpose": "Maximum number of bytes in receive buffer\n\nMAXCNT, bits [0:7] - Maximum number of bytes in receive buffer"
    },
    "SPIS0.RXD.PTR": {
      "long_name": "SPIS0.RXD.PTR (at 0x40003534, read-write)",
      "purpose": "RXD data pointer\n\nPTR, bits [0:31] - RXD data pointer"
    },
    "SPIS0.SEMSTAT": {
      "long_name": "SPIS0.SEMSTAT (at 0x40003400, read-only)",
      "purpose": "Semaphore status register\n\nSEMSTAT, bits [0:1] - Semaphore status; 0 for Free (Semaphore is free), 1 for\n                      CPU (Semaphore is assigned to CPU), 2 for SPIS (Semaphore\n                      is assigned to SPI slave), 3 for CPUPending (Semaphore is\n                      assigned to SPI but a handover to the CPU is pending)"
    },
    "SPIS0.SHORTS": {
      "long_name": "SPIS0.SHORTS (at 0x40003200, read-write)",
      "purpose": "Shortcut register\n\nEND_ACQUIRE, bit [2] - Shortcut between END event and ACQUIRE task"
    },
    "SPIS0.STATUS": {
      "long_name": "SPIS0.STATUS (at 0x40003440, read-write)",
      "purpose": "Status from last transaction\n\nOVERREAD, bit [0] - TX buffer over-read detected, and prevented\nOVERFLOW, bit [1] - RX buffer overflow detected, and prevented"
    },
    "SPIS0.TASKS_ACQUIRE": {
      "long_name": "SPIS0.TASKS_ACQUIRE (at 0x40003024, write-only)",
      "purpose": "Acquire SPI semaphore"
    },
    "SPIS0.TASKS_RELEASE": {
      "long_name": "SPIS0.TASKS_RELEASE (at 0x40003028, write-only)",
      "purpose": "Release SPI semaphore, enabling the SPI slave to acquire it"
    },
    "SPIS0.TXD.AMOUNT": {
      "long_name": "SPIS0.TXD.AMOUNT (at 0x4000354c, read-only)",
      "purpose": "Number of bytes transmitted in last granted transaction\n\nAMOUNT, bits [0:7] - Number of bytes transmitted in last granted transaction"
    },
    "SPIS0.TXD.MAXCNT": {
      "long_name": "SPIS0.TXD.MAXCNT (at 0x40003548, read-write)",
      "purpose": "Maximum number of bytes in transmit buffer\n\nMAXCNT, bits [0:7] - Maximum number of bytes in transmit buffer"
    },
    "SPIS0.TXD.PTR": {
      "long_name": "SPIS0.TXD.PTR (at 0x40003544, read-write)",
      "purpose": "TXD data pointer\n\nPTR, bits [0:31] - TXD data pointer"
    },
    "SPIS1.CONFIG": {
      "long_name": "SPIS1.CONFIG (at 0x40004554, read-write)",
      "purpose": "Configuration register\n\nORDER, bit [0] - Bit order\nCPHA, bit [1]  - Serial clock (SCK) phase\nCPOL, bit [2]  - Serial clock (SCK) polarity"
    },
    "SPIS1.DEF": {
      "long_name": "SPIS1.DEF (at 0x4000455c, read-write)",
      "purpose": "Default character. Character clocked out in case of an ignored transaction.\n\nDEF, bits [0:7] - Default character. Character clocked out in case of an ignored\n                  transaction."
    },
    "SPIS1.ENABLE": {
      "long_name": "SPIS1.ENABLE (at 0x40004500, read-write)",
      "purpose": "Enable SPI slave\n\nENABLE, bits [0:3] - Enable or disable SPI slave; 0 for Disabled (Disable SPI\n                     slave), 2 for Enabled (Enable SPI slave)"
    },
    "SPIS1.EVENTS_ACQUIRED": {
      "long_name": "SPIS1.EVENTS_ACQUIRED (at 0x40004128, read-write)",
      "purpose": "Semaphore acquired"
    },
    "SPIS1.EVENTS_END": {
      "long_name": "SPIS1.EVENTS_END (at 0x40004104, read-write)",
      "purpose": "Granted transaction completed"
    },
    "SPIS1.EVENTS_ENDRX": {
      "long_name": "SPIS1.EVENTS_ENDRX (at 0x40004110, read-write)",
      "purpose": "End of RXD buffer reached"
    },
    "SPIS1.INTENCLR": {
      "long_name": "SPIS1.INTENCLR (at 0x40004308, read-write)",
      "purpose": "Disable interrupt\n\nEND, bit [1]       - Write '1' to Disable interrupt for END event\nENDRX, bit [4]     - Write '1' to Disable interrupt for ENDRX event\nACQUIRED, bit [10] - Write '1' to Disable interrupt for ACQUIRED event"
    },
    "SPIS1.INTENSET": {
      "long_name": "SPIS1.INTENSET (at 0x40004304, read-write)",
      "purpose": "Enable interrupt\n\nEND, bit [1]       - Write '1' to Enable interrupt for END event\nENDRX, bit [4]     - Write '1' to Enable interrupt for ENDRX event\nACQUIRED, bit [10] - Write '1' to Enable interrupt for ACQUIRED event"
    },
    "SPIS1.ORC": {
      "long_name": "SPIS1.ORC (at 0x400045c0, read-write)",
      "purpose": "Over-read character\n\nORC, bits [0:7] - Over-read character. Character clocked out after an over-read\n                  of the transmit buffer."
    },
    "SPIS1.PSEL.CSN": {
      "long_name": "SPIS1.PSEL.CSN (at 0x40004514, read-write)",
      "purpose": "Pin select for CSN signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "SPIS1.PSEL.MISO": {
      "long_name": "SPIS1.PSEL.MISO (at 0x4000450c, read-write)",
      "purpose": "Pin select for MISO signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "SPIS1.PSEL.MOSI": {
      "long_name": "SPIS1.PSEL.MOSI (at 0x40004510, read-write)",
      "purpose": "Pin select for MOSI signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "SPIS1.PSEL.SCK": {
      "long_name": "SPIS1.PSEL.SCK (at 0x40004508, read-write)",
      "purpose": "Pin select for SCK\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "SPIS1.RXD.AMOUNT": {
      "long_name": "SPIS1.RXD.AMOUNT (at 0x4000453c, read-only)",
      "purpose": "Number of bytes received in last granted transaction\n\nAMOUNT, bits [0:7] - Number of bytes received in the last granted transaction"
    },
    "SPIS1.RXD.MAXCNT": {
      "long_name": "SPIS1.RXD.MAXCNT (at 0x40004538, read-write)",
      "purpose": "Maximum number of bytes in receive buffer\n\nMAXCNT, bits [0:7] - Maximum number of bytes in receive buffer"
    },
    "SPIS1.RXD.PTR": {
      "long_name": "SPIS1.RXD.PTR (at 0x40004534, read-write)",
      "purpose": "RXD data pointer\n\nPTR, bits [0:31] - RXD data pointer"
    },
    "SPIS1.SEMSTAT": {
      "long_name": "SPIS1.SEMSTAT (at 0x40004400, read-only)",
      "purpose": "Semaphore status register\n\nSEMSTAT, bits [0:1] - Semaphore status; 0 for Free (Semaphore is free), 1 for\n                      CPU (Semaphore is assigned to CPU), 2 for SPIS (Semaphore\n                      is assigned to SPI slave), 3 for CPUPending (Semaphore is\n                      assigned to SPI but a handover to the CPU is pending)"
    },
    "SPIS1.SHORTS": {
      "long_name": "SPIS1.SHORTS (at 0x40004200, read-write)",
      "purpose": "Shortcut register\n\nEND_ACQUIRE, bit [2] - Shortcut between END event and ACQUIRE task"
    },
    "SPIS1.STATUS": {
      "long_name": "SPIS1.STATUS (at 0x40004440, read-write)",
      "purpose": "Status from last transaction\n\nOVERREAD, bit [0] - TX buffer over-read detected, and prevented\nOVERFLOW, bit [1] - RX buffer overflow detected, and prevented"
    },
    "SPIS1.TASKS_ACQUIRE": {
      "long_name": "SPIS1.TASKS_ACQUIRE (at 0x40004024, write-only)",
      "purpose": "Acquire SPI semaphore"
    },
    "SPIS1.TASKS_RELEASE": {
      "long_name": "SPIS1.TASKS_RELEASE (at 0x40004028, write-only)",
      "purpose": "Release SPI semaphore, enabling the SPI slave to acquire it"
    },
    "SPIS1.TXD.AMOUNT": {
      "long_name": "SPIS1.TXD.AMOUNT (at 0x4000454c, read-only)",
      "purpose": "Number of bytes transmitted in last granted transaction\n\nAMOUNT, bits [0:7] - Number of bytes transmitted in last granted transaction"
    },
    "SPIS1.TXD.MAXCNT": {
      "long_name": "SPIS1.TXD.MAXCNT (at 0x40004548, read-write)",
      "purpose": "Maximum number of bytes in transmit buffer\n\nMAXCNT, bits [0:7] - Maximum number of bytes in transmit buffer"
    },
    "SPIS1.TXD.PTR": {
      "long_name": "SPIS1.TXD.PTR (at 0x40004544, read-write)",
      "purpose": "TXD data pointer\n\nPTR, bits [0:31] - TXD data pointer"
    },
    "SPIS2.CONFIG": {
      "long_name": "SPIS2.CONFIG (at 0x40023554, read-write)",
      "purpose": "Configuration register\n\nORDER, bit [0] - Bit order\nCPHA, bit [1]  - Serial clock (SCK) phase\nCPOL, bit [2]  - Serial clock (SCK) polarity"
    },
    "SPIS2.DEF": {
      "long_name": "SPIS2.DEF (at 0x4002355c, read-write)",
      "purpose": "Default character. Character clocked out in case of an ignored transaction.\n\nDEF, bits [0:7] - Default character. Character clocked out in case of an ignored\n                  transaction."
    },
    "SPIS2.ENABLE": {
      "long_name": "SPIS2.ENABLE (at 0x40023500, read-write)",
      "purpose": "Enable SPI slave\n\nENABLE, bits [0:3] - Enable or disable SPI slave; 0 for Disabled (Disable SPI\n                     slave), 2 for Enabled (Enable SPI slave)"
    },
    "SPIS2.EVENTS_ACQUIRED": {
      "long_name": "SPIS2.EVENTS_ACQUIRED (at 0x40023128, read-write)",
      "purpose": "Semaphore acquired"
    },
    "SPIS2.EVENTS_END": {
      "long_name": "SPIS2.EVENTS_END (at 0x40023104, read-write)",
      "purpose": "Granted transaction completed"
    },
    "SPIS2.EVENTS_ENDRX": {
      "long_name": "SPIS2.EVENTS_ENDRX (at 0x40023110, read-write)",
      "purpose": "End of RXD buffer reached"
    },
    "SPIS2.INTENCLR": {
      "long_name": "SPIS2.INTENCLR (at 0x40023308, read-write)",
      "purpose": "Disable interrupt\n\nEND, bit [1]       - Write '1' to Disable interrupt for END event\nENDRX, bit [4]     - Write '1' to Disable interrupt for ENDRX event\nACQUIRED, bit [10] - Write '1' to Disable interrupt for ACQUIRED event"
    },
    "SPIS2.INTENSET": {
      "long_name": "SPIS2.INTENSET (at 0x40023304, read-write)",
      "purpose": "Enable interrupt\n\nEND, bit [1]       - Write '1' to Enable interrupt for END event\nENDRX, bit [4]     - Write '1' to Enable interrupt for ENDRX event\nACQUIRED, bit [10] - Write '1' to Enable interrupt for ACQUIRED event"
    },
    "SPIS2.ORC": {
      "long_name": "SPIS2.ORC (at 0x400235c0, read-write)",
      "purpose": "Over-read character\n\nORC, bits [0:7] - Over-read character. Character clocked out after an over-read\n                  of the transmit buffer."
    },
    "SPIS2.PSEL.CSN": {
      "long_name": "SPIS2.PSEL.CSN (at 0x40023514, read-write)",
      "purpose": "Pin select for CSN signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "SPIS2.PSEL.MISO": {
      "long_name": "SPIS2.PSEL.MISO (at 0x4002350c, read-write)",
      "purpose": "Pin select for MISO signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "SPIS2.PSEL.MOSI": {
      "long_name": "SPIS2.PSEL.MOSI (at 0x40023510, read-write)",
      "purpose": "Pin select for MOSI signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "SPIS2.PSEL.SCK": {
      "long_name": "SPIS2.PSEL.SCK (at 0x40023508, read-write)",
      "purpose": "Pin select for SCK\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "SPIS2.RXD.AMOUNT": {
      "long_name": "SPIS2.RXD.AMOUNT (at 0x4002353c, read-only)",
      "purpose": "Number of bytes received in last granted transaction\n\nAMOUNT, bits [0:7] - Number of bytes received in the last granted transaction"
    },
    "SPIS2.RXD.MAXCNT": {
      "long_name": "SPIS2.RXD.MAXCNT (at 0x40023538, read-write)",
      "purpose": "Maximum number of bytes in receive buffer\n\nMAXCNT, bits [0:7] - Maximum number of bytes in receive buffer"
    },
    "SPIS2.RXD.PTR": {
      "long_name": "SPIS2.RXD.PTR (at 0x40023534, read-write)",
      "purpose": "RXD data pointer\n\nPTR, bits [0:31] - RXD data pointer"
    },
    "SPIS2.SEMSTAT": {
      "long_name": "SPIS2.SEMSTAT (at 0x40023400, read-only)",
      "purpose": "Semaphore status register\n\nSEMSTAT, bits [0:1] - Semaphore status; 0 for Free (Semaphore is free), 1 for\n                      CPU (Semaphore is assigned to CPU), 2 for SPIS (Semaphore\n                      is assigned to SPI slave), 3 for CPUPending (Semaphore is\n                      assigned to SPI but a handover to the CPU is pending)"
    },
    "SPIS2.SHORTS": {
      "long_name": "SPIS2.SHORTS (at 0x40023200, read-write)",
      "purpose": "Shortcut register\n\nEND_ACQUIRE, bit [2] - Shortcut between END event and ACQUIRE task"
    },
    "SPIS2.STATUS": {
      "long_name": "SPIS2.STATUS (at 0x40023440, read-write)",
      "purpose": "Status from last transaction\n\nOVERREAD, bit [0] - TX buffer over-read detected, and prevented\nOVERFLOW, bit [1] - RX buffer overflow detected, and prevented"
    },
    "SPIS2.TASKS_ACQUIRE": {
      "long_name": "SPIS2.TASKS_ACQUIRE (at 0x40023024, write-only)",
      "purpose": "Acquire SPI semaphore"
    },
    "SPIS2.TASKS_RELEASE": {
      "long_name": "SPIS2.TASKS_RELEASE (at 0x40023028, write-only)",
      "purpose": "Release SPI semaphore, enabling the SPI slave to acquire it"
    },
    "SPIS2.TXD.AMOUNT": {
      "long_name": "SPIS2.TXD.AMOUNT (at 0x4002354c, read-only)",
      "purpose": "Number of bytes transmitted in last granted transaction\n\nAMOUNT, bits [0:7] - Number of bytes transmitted in last granted transaction"
    },
    "SPIS2.TXD.MAXCNT": {
      "long_name": "SPIS2.TXD.MAXCNT (at 0x40023548, read-write)",
      "purpose": "Maximum number of bytes in transmit buffer\n\nMAXCNT, bits [0:7] - Maximum number of bytes in transmit buffer"
    },
    "SPIS2.TXD.PTR": {
      "long_name": "SPIS2.TXD.PTR (at 0x40023544, read-write)",
      "purpose": "TXD data pointer\n\nPTR, bits [0:31] - TXD data pointer"
    },
    "SWI0.UNUSED": {
      "long_name": "SWI0.UNUSED (at 0x40014000, read-only)",
      "purpose": "Unused."
    },
    "SWI1.UNUSED": {
      "long_name": "SWI1.UNUSED (at 0x40015000, read-only)",
      "purpose": "Unused."
    },
    "SWI2.UNUSED": {
      "long_name": "SWI2.UNUSED (at 0x40016000, read-only)",
      "purpose": "Unused."
    },
    "SWI3.UNUSED": {
      "long_name": "SWI3.UNUSED (at 0x40017000, read-only)",
      "purpose": "Unused."
    },
    "SWI4.UNUSED": {
      "long_name": "SWI4.UNUSED (at 0x40018000, read-only)",
      "purpose": "Unused."
    },
    "SWI5.UNUSED": {
      "long_name": "SWI5.UNUSED (at 0x40019000, read-only)",
      "purpose": "Unused."
    },
    "SYSTICK.SYST_CALIB": {
      "long_name": "SysTick Calibration value Register (at 0xe000e01c, read-only)",
      "purpose": "Reads the calibration value and parameters for SysTick\n\nNOREF, bit [31]    - Indicates whether the IMPLEMENTATION DEFINED reference\n                     clock is implemented\nSKEW, bit [30]     - Indicates whether the 10ms calibration value is exact\nTENMS, bits [23:0] - Optionally, holds a reload value to be used for 10ms\n                     (100Hz) timing, subject to system clock skew errors"
    },
    "SYSTICK.SYST_CSR": {
      "long_name": "SysTick Control and Status Register (at 0xe000e010, read-write)",
      "purpose": "Controls the system timer and provides status data\n\nCOUNTFLAG, bit [16] - Indicates whether the counter has counted to 0 since the\n                      last read of this register\nCLKSOURCE, bit [2]  - Indicates the SysTick clock source\nTICKINT, bit [1]    - Indicates whether counting to 0 causes the status of the\n                      SysTick exception to change to pending\nENABLE, bit [0]     - Indicates the enabled status of the SysTick counter"
    },
    "SYSTICK.SYST_CVR": {
      "long_name": "SysTick Current Value Register (at 0xe000e018, read-write)",
      "purpose": "Reads or clears the current counter value\n\nCURRENT, bits [31:0] - Current counter value"
    },
    "SYSTICK.SYST_RVR": {
      "long_name": "SysTick Reload Value Register (at 0xe000e014, read-write)",
      "purpose": "Holds the reload value of the SYST_CVR\n\nRELOAD, bits [23:0] - The value to load into the SYST_CVR when the counter\n                      reaches 0"
    },
    "TEMP.A0": {
      "long_name": "TEMP.A0 (at 0x4000c520, read-write)",
      "purpose": "Slope of 1st piece wise linear function\n\nA0, bits [0:11] - Slope of 1st piece wise linear function"
    },
    "TEMP.A1": {
      "long_name": "TEMP.A1 (at 0x4000c524, read-write)",
      "purpose": "Slope of 2nd piece wise linear function\n\nA1, bits [0:11] - Slope of 2nd piece wise linear function"
    },
    "TEMP.A2": {
      "long_name": "TEMP.A2 (at 0x4000c528, read-write)",
      "purpose": "Slope of 3rd piece wise linear function\n\nA2, bits [0:11] - Slope of 3rd piece wise linear function"
    },
    "TEMP.A3": {
      "long_name": "TEMP.A3 (at 0x4000c52c, read-write)",
      "purpose": "Slope of 4th piece wise linear function\n\nA3, bits [0:11] - Slope of 4th piece wise linear function"
    },
    "TEMP.A4": {
      "long_name": "TEMP.A4 (at 0x4000c530, read-write)",
      "purpose": "Slope of 5th piece wise linear function\n\nA4, bits [0:11] - Slope of 5th piece wise linear function"
    },
    "TEMP.A5": {
      "long_name": "TEMP.A5 (at 0x4000c534, read-write)",
      "purpose": "Slope of 6th piece wise linear function\n\nA5, bits [0:11] - Slope of 6th piece wise linear function"
    },
    "TEMP.B0": {
      "long_name": "TEMP.B0 (at 0x4000c540, read-write)",
      "purpose": "y-intercept of 1st piece wise linear function\n\nB0, bits [0:13] - y-intercept of 1st piece wise linear function"
    },
    "TEMP.B1": {
      "long_name": "TEMP.B1 (at 0x4000c544, read-write)",
      "purpose": "y-intercept of 2nd piece wise linear function\n\nB1, bits [0:13] - y-intercept of 2nd piece wise linear function"
    },
    "TEMP.B2": {
      "long_name": "TEMP.B2 (at 0x4000c548, read-write)",
      "purpose": "y-intercept of 3rd piece wise linear function\n\nB2, bits [0:13] - y-intercept of 3rd piece wise linear function"
    },
    "TEMP.B3": {
      "long_name": "TEMP.B3 (at 0x4000c54c, read-write)",
      "purpose": "y-intercept of 4th piece wise linear function\n\nB3, bits [0:13] - y-intercept of 4th piece wise linear function"
    },
    "TEMP.B4": {
      "long_name": "TEMP.B4 (at 0x4000c550, read-write)",
      "purpose": "y-intercept of 5th piece wise linear function\n\nB4, bits [0:13] - y-intercept of 5th piece wise linear function"
    },
    "TEMP.B5": {
      "long_name": "TEMP.B5 (at 0x4000c554, read-write)",
      "purpose": "y-intercept of 6th piece wise linear function\n\nB5, bits [0:13] - y-intercept of 6th piece wise linear function"
    },
    "TEMP.EVENTS_DATARDY": {
      "long_name": "TEMP.EVENTS_DATARDY (at 0x4000c100, read-write)",
      "purpose": "Temperature measurement complete, data ready"
    },
    "TEMP.INTENCLR": {
      "long_name": "TEMP.INTENCLR (at 0x4000c308, read-write)",
      "purpose": "Disable interrupt\n\nDATARDY, bit [0] - Write '1' to Disable interrupt for DATARDY event"
    },
    "TEMP.INTENSET": {
      "long_name": "TEMP.INTENSET (at 0x4000c304, read-write)",
      "purpose": "Enable interrupt\n\nDATARDY, bit [0] - Write '1' to Enable interrupt for DATARDY event"
    },
    "TEMP.T0": {
      "long_name": "TEMP.T0 (at 0x4000c560, read-write)",
      "purpose": "End point of 1st piece wise linear function\n\nT0, bits [0:7] - End point of 1st piece wise linear function"
    },
    "TEMP.T1": {
      "long_name": "TEMP.T1 (at 0x4000c564, read-write)",
      "purpose": "End point of 2nd piece wise linear function\n\nT1, bits [0:7] - End point of 2nd piece wise linear function"
    },
    "TEMP.T2": {
      "long_name": "TEMP.T2 (at 0x4000c568, read-write)",
      "purpose": "End point of 3rd piece wise linear function\n\nT2, bits [0:7] - End point of 3rd piece wise linear function"
    },
    "TEMP.T3": {
      "long_name": "TEMP.T3 (at 0x4000c56c, read-write)",
      "purpose": "End point of 4th piece wise linear function\n\nT3, bits [0:7] - End point of 4th piece wise linear function"
    },
    "TEMP.T4": {
      "long_name": "TEMP.T4 (at 0x4000c570, read-write)",
      "purpose": "End point of 5th piece wise linear function\n\nT4, bits [0:7] - End point of 5th piece wise linear function"
    },
    "TEMP.TASKS_START": {
      "long_name": "TEMP.TASKS_START (at 0x4000c000, write-only)",
      "purpose": "Start temperature measurement"
    },
    "TEMP.TASKS_STOP": {
      "long_name": "TEMP.TASKS_STOP (at 0x4000c004, write-only)",
      "purpose": "Stop temperature measurement"
    },
    "TEMP.TEMP": {
      "long_name": "TEMP.TEMP (at 0x4000c508, read-only)",
      "purpose": "Temperature in degC (0.25deg steps)\n\nTEMP, bits [0:31] - Temperature in degC (0.25deg steps)"
    },
    "TIMER0.BITMODE": {
      "long_name": "TIMER0.BITMODE (at 0x40008508, read-write)",
      "purpose": "Configure the number of bits used by the TIMER\n\nBITMODE, bits [0:1] - Timer bit width; 0 for 16Bit (16 bit timer bit width), 1\n                      for 08Bit (8 bit timer bit width), 2 for 24Bit (24 bit\n                      timer bit width), 3 for 32Bit (32 bit timer bit width)"
    },
    "TIMER0.CC<n>": {
      "long_name": "TIMER0.CC<n> (at 0x40008540, read-write)",
      "purpose": "Capture/Compare register <n>\n\nCC, bits [0:31] - Capture/Compare value"
    },
    "TIMER0.EVENTS_COMPARE<n>": {
      "long_name": "TIMER0.EVENTS_COMPARE<n> (at 0x40008140, read-write)",
      "purpose": "Compare event on CC<n> match"
    },
    "TIMER0.INTENCLR": {
      "long_name": "TIMER0.INTENCLR (at 0x40008308, read-write)",
      "purpose": "Disable interrupt\n\nCOMPARE0, bit [16] - Write '1' to Disable interrupt for COMPARE[0] event\nCOMPARE1, bit [17] - Write '1' to Disable interrupt for COMPARE[1] event\nCOMPARE2, bit [18] - Write '1' to Disable interrupt for COMPARE[2] event\nCOMPARE3, bit [19] - Write '1' to Disable interrupt for COMPARE[3] event\nCOMPARE4, bit [20] - Write '1' to Disable interrupt for COMPARE[4] event\nCOMPARE5, bit [21] - Write '1' to Disable interrupt for COMPARE[5] event"
    },
    "TIMER0.INTENSET": {
      "long_name": "TIMER0.INTENSET (at 0x40008304, read-write)",
      "purpose": "Enable interrupt\n\nCOMPARE0, bit [16] - Write '1' to Enable interrupt for COMPARE[0] event\nCOMPARE1, bit [17] - Write '1' to Enable interrupt for COMPARE[1] event\nCOMPARE2, bit [18] - Write '1' to Enable interrupt for COMPARE[2] event\nCOMPARE3, bit [19] - Write '1' to Enable interrupt for COMPARE[3] event\nCOMPARE4, bit [20] - Write '1' to Enable interrupt for COMPARE[4] event\nCOMPARE5, bit [21] - Write '1' to Enable interrupt for COMPARE[5] event"
    },
    "TIMER0.MODE": {
      "long_name": "TIMER0.MODE (at 0x40008504, read-write)",
      "purpose": "Timer mode selection\n\nMODE, bits [0:1] - Timer mode; 0 for Timer (Select Timer mode), 1 for Counter\n                   (Deprecated enumerator -  Select Counter mode), 2 for\n                   LowPowerCounter (Select Low Power Counter mode)"
    },
    "TIMER0.PRESCALER": {
      "long_name": "TIMER0.PRESCALER (at 0x40008510, read-write)",
      "purpose": "Timer prescaler register\n\nPRESCALER, bits [0:3] - Prescaler value"
    },
    "TIMER0.SHORTS": {
      "long_name": "TIMER0.SHORTS (at 0x40008200, read-write)",
      "purpose": "Shortcut register\n\nCOMPARE0_CLEAR, bit [0] - Shortcut between COMPARE[0] event and CLEAR task\nCOMPARE1_CLEAR, bit [1] - Shortcut between COMPARE[1] event and CLEAR task\nCOMPARE2_CLEAR, bit [2] - Shortcut between COMPARE[2] event and CLEAR task\nCOMPARE3_CLEAR, bit [3] - Shortcut between COMPARE[3] event and CLEAR task\nCOMPARE4_CLEAR, bit [4] - Shortcut between COMPARE[4] event and CLEAR task\nCOMPARE5_CLEAR, bit [5] - Shortcut between COMPARE[5] event and CLEAR task\nCOMPARE0_STOP, bit [8]  - Shortcut between COMPARE[0] event and STOP task\nCOMPARE1_STOP, bit [9]  - Shortcut between COMPARE[1] event and STOP task\nCOMPARE2_STOP, bit [10] - Shortcut between COMPARE[2] event and STOP task\nCOMPARE3_STOP, bit [11] - Shortcut between COMPARE[3] event and STOP task\nCOMPARE4_STOP, bit [12] - Shortcut between COMPARE[4] event and STOP task\nCOMPARE5_STOP, bit [13] - Shortcut between COMPARE[5] event and STOP task"
    },
    "TIMER0.TASKS_CAPTURE<n>": {
      "long_name": "TIMER0.TASKS_CAPTURE<n> (at 0x40008040, write-only)",
      "purpose": "Capture Timer value to CC<n> register"
    },
    "TIMER0.TASKS_CLEAR": {
      "long_name": "TIMER0.TASKS_CLEAR (at 0x4000800c, write-only)",
      "purpose": "Clear time"
    },
    "TIMER0.TASKS_COUNT": {
      "long_name": "TIMER0.TASKS_COUNT (at 0x40008008, write-only)",
      "purpose": "Increment Timer (Counter mode only)"
    },
    "TIMER0.TASKS_SHUTDOWN": {
      "long_name": "TIMER0.TASKS_SHUTDOWN (at 0x40008010, write-only)",
      "purpose": "Deprecated register -  Shut down timer"
    },
    "TIMER0.TASKS_START": {
      "long_name": "TIMER0.TASKS_START (at 0x40008000, write-only)",
      "purpose": "Start Timer"
    },
    "TIMER0.TASKS_STOP": {
      "long_name": "TIMER0.TASKS_STOP (at 0x40008004, write-only)",
      "purpose": "Stop Timer"
    },
    "TIMER1.BITMODE": {
      "long_name": "TIMER1.BITMODE (at 0x40009508, read-write)",
      "purpose": "Configure the number of bits used by the TIMER\n\nBITMODE, bits [0:1] - Timer bit width; 0 for 16Bit (16 bit timer bit width), 1\n                      for 08Bit (8 bit timer bit width), 2 for 24Bit (24 bit\n                      timer bit width), 3 for 32Bit (32 bit timer bit width)"
    },
    "TIMER1.CC<n>": {
      "long_name": "TIMER1.CC<n> (at 0x40009540, read-write)",
      "purpose": "Capture/Compare register <n>\n\nCC, bits [0:31] - Capture/Compare value"
    },
    "TIMER1.EVENTS_COMPARE<n>": {
      "long_name": "TIMER1.EVENTS_COMPARE<n> (at 0x40009140, read-write)",
      "purpose": "Compare event on CC<n> match"
    },
    "TIMER1.INTENCLR": {
      "long_name": "TIMER1.INTENCLR (at 0x40009308, read-write)",
      "purpose": "Disable interrupt\n\nCOMPARE0, bit [16] - Write '1' to Disable interrupt for COMPARE[0] event\nCOMPARE1, bit [17] - Write '1' to Disable interrupt for COMPARE[1] event\nCOMPARE2, bit [18] - Write '1' to Disable interrupt for COMPARE[2] event\nCOMPARE3, bit [19] - Write '1' to Disable interrupt for COMPARE[3] event\nCOMPARE4, bit [20] - Write '1' to Disable interrupt for COMPARE[4] event\nCOMPARE5, bit [21] - Write '1' to Disable interrupt for COMPARE[5] event"
    },
    "TIMER1.INTENSET": {
      "long_name": "TIMER1.INTENSET (at 0x40009304, read-write)",
      "purpose": "Enable interrupt\n\nCOMPARE0, bit [16] - Write '1' to Enable interrupt for COMPARE[0] event\nCOMPARE1, bit [17] - Write '1' to Enable interrupt for COMPARE[1] event\nCOMPARE2, bit [18] - Write '1' to Enable interrupt for COMPARE[2] event\nCOMPARE3, bit [19] - Write '1' to Enable interrupt for COMPARE[3] event\nCOMPARE4, bit [20] - Write '1' to Enable interrupt for COMPARE[4] event\nCOMPARE5, bit [21] - Write '1' to Enable interrupt for COMPARE[5] event"
    },
    "TIMER1.MODE": {
      "long_name": "TIMER1.MODE (at 0x40009504, read-write)",
      "purpose": "Timer mode selection\n\nMODE, bits [0:1] - Timer mode; 0 for Timer (Select Timer mode), 1 for Counter\n                   (Deprecated enumerator -  Select Counter mode), 2 for\n                   LowPowerCounter (Select Low Power Counter mode)"
    },
    "TIMER1.PRESCALER": {
      "long_name": "TIMER1.PRESCALER (at 0x40009510, read-write)",
      "purpose": "Timer prescaler register\n\nPRESCALER, bits [0:3] - Prescaler value"
    },
    "TIMER1.SHORTS": {
      "long_name": "TIMER1.SHORTS (at 0x40009200, read-write)",
      "purpose": "Shortcut register\n\nCOMPARE0_CLEAR, bit [0] - Shortcut between COMPARE[0] event and CLEAR task\nCOMPARE1_CLEAR, bit [1] - Shortcut between COMPARE[1] event and CLEAR task\nCOMPARE2_CLEAR, bit [2] - Shortcut between COMPARE[2] event and CLEAR task\nCOMPARE3_CLEAR, bit [3] - Shortcut between COMPARE[3] event and CLEAR task\nCOMPARE4_CLEAR, bit [4] - Shortcut between COMPARE[4] event and CLEAR task\nCOMPARE5_CLEAR, bit [5] - Shortcut between COMPARE[5] event and CLEAR task\nCOMPARE0_STOP, bit [8]  - Shortcut between COMPARE[0] event and STOP task\nCOMPARE1_STOP, bit [9]  - Shortcut between COMPARE[1] event and STOP task\nCOMPARE2_STOP, bit [10] - Shortcut between COMPARE[2] event and STOP task\nCOMPARE3_STOP, bit [11] - Shortcut between COMPARE[3] event and STOP task\nCOMPARE4_STOP, bit [12] - Shortcut between COMPARE[4] event and STOP task\nCOMPARE5_STOP, bit [13] - Shortcut between COMPARE[5] event and STOP task"
    },
    "TIMER1.TASKS_CAPTURE<n>": {
      "long_name": "TIMER1.TASKS_CAPTURE<n> (at 0x40009040, write-only)",
      "purpose": "Capture Timer value to CC<n> register"
    },
    "TIMER1.TASKS_CLEAR": {
      "long_name": "TIMER1.TASKS_CLEAR (at 0x4000900c, write-only)",
      "purpose": "Clear time"
    },
    "TIMER1.TASKS_COUNT": {
      "long_name": "TIMER1.TASKS_COUNT (at 0x40009008, write-only)",
      "purpose": "Increment Timer (Counter mode only)"
    },
    "TIMER1.TASKS_SHUTDOWN": {
      "long_name": "TIMER1.TASKS_SHUTDOWN (at 0x40009010, write-only)",
      "purpose": "Deprecated register -  Shut down timer"
    },
    "TIMER1.TASKS_START": {
      "long_name": "TIMER1.TASKS_START (at 0x40009000, write-only)",
      "purpose": "Start Timer"
    },
    "TIMER1.TASKS_STOP": {
      "long_name": "TIMER1.TASKS_STOP (at 0x40009004, write-only)",
      "purpose": "Stop Timer"
    },
    "TIMER2.BITMODE": {
      "long_name": "TIMER2.BITMODE (at 0x4000a508, read-write)",
      "purpose": "Configure the number of bits used by the TIMER\n\nBITMODE, bits [0:1] - Timer bit width; 0 for 16Bit (16 bit timer bit width), 1\n                      for 08Bit (8 bit timer bit width), 2 for 24Bit (24 bit\n                      timer bit width), 3 for 32Bit (32 bit timer bit width)"
    },
    "TIMER2.CC<n>": {
      "long_name": "TIMER2.CC<n> (at 0x4000a540, read-write)",
      "purpose": "Capture/Compare register <n>\n\nCC, bits [0:31] - Capture/Compare value"
    },
    "TIMER2.EVENTS_COMPARE<n>": {
      "long_name": "TIMER2.EVENTS_COMPARE<n> (at 0x4000a140, read-write)",
      "purpose": "Compare event on CC<n> match"
    },
    "TIMER2.INTENCLR": {
      "long_name": "TIMER2.INTENCLR (at 0x4000a308, read-write)",
      "purpose": "Disable interrupt\n\nCOMPARE0, bit [16] - Write '1' to Disable interrupt for COMPARE[0] event\nCOMPARE1, bit [17] - Write '1' to Disable interrupt for COMPARE[1] event\nCOMPARE2, bit [18] - Write '1' to Disable interrupt for COMPARE[2] event\nCOMPARE3, bit [19] - Write '1' to Disable interrupt for COMPARE[3] event\nCOMPARE4, bit [20] - Write '1' to Disable interrupt for COMPARE[4] event\nCOMPARE5, bit [21] - Write '1' to Disable interrupt for COMPARE[5] event"
    },
    "TIMER2.INTENSET": {
      "long_name": "TIMER2.INTENSET (at 0x4000a304, read-write)",
      "purpose": "Enable interrupt\n\nCOMPARE0, bit [16] - Write '1' to Enable interrupt for COMPARE[0] event\nCOMPARE1, bit [17] - Write '1' to Enable interrupt for COMPARE[1] event\nCOMPARE2, bit [18] - Write '1' to Enable interrupt for COMPARE[2] event\nCOMPARE3, bit [19] - Write '1' to Enable interrupt for COMPARE[3] event\nCOMPARE4, bit [20] - Write '1' to Enable interrupt for COMPARE[4] event\nCOMPARE5, bit [21] - Write '1' to Enable interrupt for COMPARE[5] event"
    },
    "TIMER2.MODE": {
      "long_name": "TIMER2.MODE (at 0x4000a504, read-write)",
      "purpose": "Timer mode selection\n\nMODE, bits [0:1] - Timer mode; 0 for Timer (Select Timer mode), 1 for Counter\n                   (Deprecated enumerator -  Select Counter mode), 2 for\n                   LowPowerCounter (Select Low Power Counter mode)"
    },
    "TIMER2.PRESCALER": {
      "long_name": "TIMER2.PRESCALER (at 0x4000a510, read-write)",
      "purpose": "Timer prescaler register\n\nPRESCALER, bits [0:3] - Prescaler value"
    },
    "TIMER2.SHORTS": {
      "long_name": "TIMER2.SHORTS (at 0x4000a200, read-write)",
      "purpose": "Shortcut register\n\nCOMPARE0_CLEAR, bit [0] - Shortcut between COMPARE[0] event and CLEAR task\nCOMPARE1_CLEAR, bit [1] - Shortcut between COMPARE[1] event and CLEAR task\nCOMPARE2_CLEAR, bit [2] - Shortcut between COMPARE[2] event and CLEAR task\nCOMPARE3_CLEAR, bit [3] - Shortcut between COMPARE[3] event and CLEAR task\nCOMPARE4_CLEAR, bit [4] - Shortcut between COMPARE[4] event and CLEAR task\nCOMPARE5_CLEAR, bit [5] - Shortcut between COMPARE[5] event and CLEAR task\nCOMPARE0_STOP, bit [8]  - Shortcut between COMPARE[0] event and STOP task\nCOMPARE1_STOP, bit [9]  - Shortcut between COMPARE[1] event and STOP task\nCOMPARE2_STOP, bit [10] - Shortcut between COMPARE[2] event and STOP task\nCOMPARE3_STOP, bit [11] - Shortcut between COMPARE[3] event and STOP task\nCOMPARE4_STOP, bit [12] - Shortcut between COMPARE[4] event and STOP task\nCOMPARE5_STOP, bit [13] - Shortcut between COMPARE[5] event and STOP task"
    },
    "TIMER2.TASKS_CAPTURE<n>": {
      "long_name": "TIMER2.TASKS_CAPTURE<n> (at 0x4000a040, write-only)",
      "purpose": "Capture Timer value to CC<n> register"
    },
    "TIMER2.TASKS_CLEAR": {
      "long_name": "TIMER2.TASKS_CLEAR (at 0x4000a00c, write-only)",
      "purpose": "Clear time"
    },
    "TIMER2.TASKS_COUNT": {
      "long_name": "TIMER2.TASKS_COUNT (at 0x4000a008, write-only)",
      "purpose": "Increment Timer (Counter mode only)"
    },
    "TIMER2.TASKS_SHUTDOWN": {
      "long_name": "TIMER2.TASKS_SHUTDOWN (at 0x4000a010, write-only)",
      "purpose": "Deprecated register -  Shut down timer"
    },
    "TIMER2.TASKS_START": {
      "long_name": "TIMER2.TASKS_START (at 0x4000a000, write-only)",
      "purpose": "Start Timer"
    },
    "TIMER2.TASKS_STOP": {
      "long_name": "TIMER2.TASKS_STOP (at 0x4000a004, write-only)",
      "purpose": "Stop Timer"
    },
    "TIMER3.BITMODE": {
      "long_name": "TIMER3.BITMODE (at 0x4001a508, read-write)",
      "purpose": "Configure the number of bits used by the TIMER\n\nBITMODE, bits [0:1] - Timer bit width; 0 for 16Bit (16 bit timer bit width), 1\n                      for 08Bit (8 bit timer bit width), 2 for 24Bit (24 bit\n                      timer bit width), 3 for 32Bit (32 bit timer bit width)"
    },
    "TIMER3.CC<n>": {
      "long_name": "TIMER3.CC<n> (at 0x4001a540, read-write)",
      "purpose": "Capture/Compare register <n>\n\nCC, bits [0:31] - Capture/Compare value"
    },
    "TIMER3.EVENTS_COMPARE<n>": {
      "long_name": "TIMER3.EVENTS_COMPARE<n> (at 0x4001a140, read-write)",
      "purpose": "Compare event on CC<n> match"
    },
    "TIMER3.INTENCLR": {
      "long_name": "TIMER3.INTENCLR (at 0x4001a308, read-write)",
      "purpose": "Disable interrupt\n\nCOMPARE0, bit [16] - Write '1' to Disable interrupt for COMPARE[0] event\nCOMPARE1, bit [17] - Write '1' to Disable interrupt for COMPARE[1] event\nCOMPARE2, bit [18] - Write '1' to Disable interrupt for COMPARE[2] event\nCOMPARE3, bit [19] - Write '1' to Disable interrupt for COMPARE[3] event\nCOMPARE4, bit [20] - Write '1' to Disable interrupt for COMPARE[4] event\nCOMPARE5, bit [21] - Write '1' to Disable interrupt for COMPARE[5] event"
    },
    "TIMER3.INTENSET": {
      "long_name": "TIMER3.INTENSET (at 0x4001a304, read-write)",
      "purpose": "Enable interrupt\n\nCOMPARE0, bit [16] - Write '1' to Enable interrupt for COMPARE[0] event\nCOMPARE1, bit [17] - Write '1' to Enable interrupt for COMPARE[1] event\nCOMPARE2, bit [18] - Write '1' to Enable interrupt for COMPARE[2] event\nCOMPARE3, bit [19] - Write '1' to Enable interrupt for COMPARE[3] event\nCOMPARE4, bit [20] - Write '1' to Enable interrupt for COMPARE[4] event\nCOMPARE5, bit [21] - Write '1' to Enable interrupt for COMPARE[5] event"
    },
    "TIMER3.MODE": {
      "long_name": "TIMER3.MODE (at 0x4001a504, read-write)",
      "purpose": "Timer mode selection\n\nMODE, bits [0:1] - Timer mode; 0 for Timer (Select Timer mode), 1 for Counter\n                   (Deprecated enumerator -  Select Counter mode), 2 for\n                   LowPowerCounter (Select Low Power Counter mode)"
    },
    "TIMER3.PRESCALER": {
      "long_name": "TIMER3.PRESCALER (at 0x4001a510, read-write)",
      "purpose": "Timer prescaler register\n\nPRESCALER, bits [0:3] - Prescaler value"
    },
    "TIMER3.SHORTS": {
      "long_name": "TIMER3.SHORTS (at 0x4001a200, read-write)",
      "purpose": "Shortcut register\n\nCOMPARE0_CLEAR, bit [0] - Shortcut between COMPARE[0] event and CLEAR task\nCOMPARE1_CLEAR, bit [1] - Shortcut between COMPARE[1] event and CLEAR task\nCOMPARE2_CLEAR, bit [2] - Shortcut between COMPARE[2] event and CLEAR task\nCOMPARE3_CLEAR, bit [3] - Shortcut between COMPARE[3] event and CLEAR task\nCOMPARE4_CLEAR, bit [4] - Shortcut between COMPARE[4] event and CLEAR task\nCOMPARE5_CLEAR, bit [5] - Shortcut between COMPARE[5] event and CLEAR task\nCOMPARE0_STOP, bit [8]  - Shortcut between COMPARE[0] event and STOP task\nCOMPARE1_STOP, bit [9]  - Shortcut between COMPARE[1] event and STOP task\nCOMPARE2_STOP, bit [10] - Shortcut between COMPARE[2] event and STOP task\nCOMPARE3_STOP, bit [11] - Shortcut between COMPARE[3] event and STOP task\nCOMPARE4_STOP, bit [12] - Shortcut between COMPARE[4] event and STOP task\nCOMPARE5_STOP, bit [13] - Shortcut between COMPARE[5] event and STOP task"
    },
    "TIMER3.TASKS_CAPTURE<n>": {
      "long_name": "TIMER3.TASKS_CAPTURE<n> (at 0x4001a040, write-only)",
      "purpose": "Capture Timer value to CC<n> register"
    },
    "TIMER3.TASKS_CLEAR": {
      "long_name": "TIMER3.TASKS_CLEAR (at 0x4001a00c, write-only)",
      "purpose": "Clear time"
    },
    "TIMER3.TASKS_COUNT": {
      "long_name": "TIMER3.TASKS_COUNT (at 0x4001a008, write-only)",
      "purpose": "Increment Timer (Counter mode only)"
    },
    "TIMER3.TASKS_SHUTDOWN": {
      "long_name": "TIMER3.TASKS_SHUTDOWN (at 0x4001a010, write-only)",
      "purpose": "Deprecated register -  Shut down timer"
    },
    "TIMER3.TASKS_START": {
      "long_name": "TIMER3.TASKS_START (at 0x4001a000, write-only)",
      "purpose": "Start Timer"
    },
    "TIMER3.TASKS_STOP": {
      "long_name": "TIMER3.TASKS_STOP (at 0x4001a004, write-only)",
      "purpose": "Stop Timer"
    },
    "TIMER4.BITMODE": {
      "long_name": "TIMER4.BITMODE (at 0x4001b508, read-write)",
      "purpose": "Configure the number of bits used by the TIMER\n\nBITMODE, bits [0:1] - Timer bit width; 0 for 16Bit (16 bit timer bit width), 1\n                      for 08Bit (8 bit timer bit width), 2 for 24Bit (24 bit\n                      timer bit width), 3 for 32Bit (32 bit timer bit width)"
    },
    "TIMER4.CC<n>": {
      "long_name": "TIMER4.CC<n> (at 0x4001b540, read-write)",
      "purpose": "Capture/Compare register <n>\n\nCC, bits [0:31] - Capture/Compare value"
    },
    "TIMER4.EVENTS_COMPARE<n>": {
      "long_name": "TIMER4.EVENTS_COMPARE<n> (at 0x4001b140, read-write)",
      "purpose": "Compare event on CC<n> match"
    },
    "TIMER4.INTENCLR": {
      "long_name": "TIMER4.INTENCLR (at 0x4001b308, read-write)",
      "purpose": "Disable interrupt\n\nCOMPARE0, bit [16] - Write '1' to Disable interrupt for COMPARE[0] event\nCOMPARE1, bit [17] - Write '1' to Disable interrupt for COMPARE[1] event\nCOMPARE2, bit [18] - Write '1' to Disable interrupt for COMPARE[2] event\nCOMPARE3, bit [19] - Write '1' to Disable interrupt for COMPARE[3] event\nCOMPARE4, bit [20] - Write '1' to Disable interrupt for COMPARE[4] event\nCOMPARE5, bit [21] - Write '1' to Disable interrupt for COMPARE[5] event"
    },
    "TIMER4.INTENSET": {
      "long_name": "TIMER4.INTENSET (at 0x4001b304, read-write)",
      "purpose": "Enable interrupt\n\nCOMPARE0, bit [16] - Write '1' to Enable interrupt for COMPARE[0] event\nCOMPARE1, bit [17] - Write '1' to Enable interrupt for COMPARE[1] event\nCOMPARE2, bit [18] - Write '1' to Enable interrupt for COMPARE[2] event\nCOMPARE3, bit [19] - Write '1' to Enable interrupt for COMPARE[3] event\nCOMPARE4, bit [20] - Write '1' to Enable interrupt for COMPARE[4] event\nCOMPARE5, bit [21] - Write '1' to Enable interrupt for COMPARE[5] event"
    },
    "TIMER4.MODE": {
      "long_name": "TIMER4.MODE (at 0x4001b504, read-write)",
      "purpose": "Timer mode selection\n\nMODE, bits [0:1] - Timer mode; 0 for Timer (Select Timer mode), 1 for Counter\n                   (Deprecated enumerator -  Select Counter mode), 2 for\n                   LowPowerCounter (Select Low Power Counter mode)"
    },
    "TIMER4.PRESCALER": {
      "long_name": "TIMER4.PRESCALER (at 0x4001b510, read-write)",
      "purpose": "Timer prescaler register\n\nPRESCALER, bits [0:3] - Prescaler value"
    },
    "TIMER4.SHORTS": {
      "long_name": "TIMER4.SHORTS (at 0x4001b200, read-write)",
      "purpose": "Shortcut register\n\nCOMPARE0_CLEAR, bit [0] - Shortcut between COMPARE[0] event and CLEAR task\nCOMPARE1_CLEAR, bit [1] - Shortcut between COMPARE[1] event and CLEAR task\nCOMPARE2_CLEAR, bit [2] - Shortcut between COMPARE[2] event and CLEAR task\nCOMPARE3_CLEAR, bit [3] - Shortcut between COMPARE[3] event and CLEAR task\nCOMPARE4_CLEAR, bit [4] - Shortcut between COMPARE[4] event and CLEAR task\nCOMPARE5_CLEAR, bit [5] - Shortcut between COMPARE[5] event and CLEAR task\nCOMPARE0_STOP, bit [8]  - Shortcut between COMPARE[0] event and STOP task\nCOMPARE1_STOP, bit [9]  - Shortcut between COMPARE[1] event and STOP task\nCOMPARE2_STOP, bit [10] - Shortcut between COMPARE[2] event and STOP task\nCOMPARE3_STOP, bit [11] - Shortcut between COMPARE[3] event and STOP task\nCOMPARE4_STOP, bit [12] - Shortcut between COMPARE[4] event and STOP task\nCOMPARE5_STOP, bit [13] - Shortcut between COMPARE[5] event and STOP task"
    },
    "TIMER4.TASKS_CAPTURE<n>": {
      "long_name": "TIMER4.TASKS_CAPTURE<n> (at 0x4001b040, write-only)",
      "purpose": "Capture Timer value to CC<n> register"
    },
    "TIMER4.TASKS_CLEAR": {
      "long_name": "TIMER4.TASKS_CLEAR (at 0x4001b00c, write-only)",
      "purpose": "Clear time"
    },
    "TIMER4.TASKS_COUNT": {
      "long_name": "TIMER4.TASKS_COUNT (at 0x4001b008, write-only)",
      "purpose": "Increment Timer (Counter mode only)"
    },
    "TIMER4.TASKS_SHUTDOWN": {
      "long_name": "TIMER4.TASKS_SHUTDOWN (at 0x4001b010, write-only)",
      "purpose": "Deprecated register -  Shut down timer"
    },
    "TIMER4.TASKS_START": {
      "long_name": "TIMER4.TASKS_START (at 0x4001b000, write-only)",
      "purpose": "Start Timer"
    },
    "TIMER4.TASKS_STOP": {
      "long_name": "TIMER4.TASKS_STOP (at 0x4001b004, write-only)",
      "purpose": "Stop Timer"
    },
    "TPIU.TPIU_ACPR": {
      "long_name": "Asynchronous Clock Prescaler Register (at 0xe0040010, read-write)",
      "purpose": "Defines a prescaler value for the baud rate of the Serial Wire Output (SWO)\n\nSWOSCALER, bits [15:0] - SWO baud rate prescaler value"
    },
    "TPIU.TPIU_CSPSR": {
      "long_name": "Current Parallel Port Size Register (at 0xe0040004, read-write)",
      "purpose": "Defines the width of the current parallel trace port\n\nCWIDTH[31:0], bits [31:0] - CWIDTH[N] represents a trace port width of (N+1)"
    },
    "TPIU.TPIU_SPPR": {
      "long_name": "Selected Pin Protocol Register (at 0xe00400f0, read-write)",
      "purpose": "Selects the protocol used for trace output\n\nTXMODE, bits [1:0] - Specifies the protocol for trace output from the TPIU; 0\n                     for None (Parallel trace port mode), 1 for None\n                     (Asynchronous SWO, using Manchester encoding), 10 for None\n                     (Asynchronous SWO, using NRZ encoding)"
    },
    "TPIU.TPIU_SSPSR": {
      "long_name": "Supported Parallel Port Sizes Register (at 0xe0040000, read-only)",
      "purpose": "Indicates the supported parallel trace port sizes\n\nSWIDTH[31:0], bits [31:0] - SWIDTH[N] represents a trace port width of (N+1)"
    },
    "TPIU.TPIU_TYPE": {
      "long_name": "TPIU Type register (at 0xe0040f00, read-only)",
      "purpose": "Defines the SWO options supported by the TPIU\n\nNRZVALID, bit [11]  - Indicates support for SWO using UART/NRZ encoding\nMANCVALID, bit [10] - Indicates support for SWO using Manchester encoding\nPTINVALID, bit [9]  - Indicates support for parallel trace port operation\nFIFOSZ, bits [8:6]  - Indicates the minimum implemented size of the TPIU output\n                      FIFO for trace data"
    },
    "TWI0.ADDRESS": {
      "long_name": "TWI0.ADDRESS (at 0x40003588, read-write)",
      "purpose": "Address used in the TWI transfer\n\nADDRESS, bits [0:6] - Address used in the TWI transfer"
    },
    "TWI0.ENABLE": {
      "long_name": "TWI0.ENABLE (at 0x40003500, read-write)",
      "purpose": "Enable TWI\n\nENABLE, bits [0:3] - Enable or disable TWI; 0 for Disabled (Disable TWI), 5 for\n                     Enabled (Enable TWI)"
    },
    "TWI0.ERRORSRC": {
      "long_name": "TWI0.ERRORSRC (at 0x400034c4, read-write)",
      "purpose": "Error source\n\nOVERRUN, bit [0] - Overrun error\nANACK, bit [1]   - NACK received after sending the address (write '1' to clear)\nDNACK, bit [2]   - NACK received after sending a data byte (write '1' to clear)"
    },
    "TWI0.EVENTS_BB": {
      "long_name": "TWI0.EVENTS_BB (at 0x40003138, read-write)",
      "purpose": "TWI byte boundary, generated before each byte that is sent or received"
    },
    "TWI0.EVENTS_ERROR": {
      "long_name": "TWI0.EVENTS_ERROR (at 0x40003124, read-write)",
      "purpose": "TWI error"
    },
    "TWI0.EVENTS_RXDREADY": {
      "long_name": "TWI0.EVENTS_RXDREADY (at 0x40003108, read-write)",
      "purpose": "TWI RXD byte received"
    },
    "TWI0.EVENTS_STOPPED": {
      "long_name": "TWI0.EVENTS_STOPPED (at 0x40003104, read-write)",
      "purpose": "TWI stopped"
    },
    "TWI0.EVENTS_SUSPENDED": {
      "long_name": "TWI0.EVENTS_SUSPENDED (at 0x40003148, read-write)",
      "purpose": "TWI entered the suspended state"
    },
    "TWI0.EVENTS_TXDSENT": {
      "long_name": "TWI0.EVENTS_TXDSENT (at 0x4000311c, read-write)",
      "purpose": "TWI TXD byte sent"
    },
    "TWI0.FREQUENCY": {
      "long_name": "TWI0.FREQUENCY (at 0x40003524, read-write)",
      "purpose": "TWI frequency\n\nFREQUENCY, bits [0:31] - TWI master clock frequency; 0x01980000 for K100 (100\n                         kbps), 0x04000000 for K250 (250 kbps), 0x06680000 for\n                         K400 (400 kbps (actual rate 410.256 kbps))"
    },
    "TWI0.INTENCLR": {
      "long_name": "TWI0.INTENCLR (at 0x40003308, read-write)",
      "purpose": "Disable interrupt\n\nSTOPPED, bit [1]    - Write '1' to Disable interrupt for STOPPED event\nRXDREADY, bit [2]   - Write '1' to Disable interrupt for RXDREADY event\nTXDSENT, bit [7]    - Write '1' to Disable interrupt for TXDSENT event\nERROR, bit [9]      - Write '1' to Disable interrupt for ERROR event\nBB, bit [14]        - Write '1' to Disable interrupt for BB event\nSUSPENDED, bit [18] - Write '1' to Disable interrupt for SUSPENDED event"
    },
    "TWI0.INTENSET": {
      "long_name": "TWI0.INTENSET (at 0x40003304, read-write)",
      "purpose": "Enable interrupt\n\nSTOPPED, bit [1]    - Write '1' to Enable interrupt for STOPPED event\nRXDREADY, bit [2]   - Write '1' to Enable interrupt for RXDREADY event\nTXDSENT, bit [7]    - Write '1' to Enable interrupt for TXDSENT event\nERROR, bit [9]      - Write '1' to Enable interrupt for ERROR event\nBB, bit [14]        - Write '1' to Enable interrupt for BB event\nSUSPENDED, bit [18] - Write '1' to Enable interrupt for SUSPENDED event"
    },
    "TWI0.PSELSCL": {
      "long_name": "TWI0.PSELSCL (at 0x40003508, read-write)",
      "purpose": "Pin select for SCL\n\nPSELSCL, bits [0:31] - Pin number configuration for TWI SCL signal; 0xFFFFFFFF\n                       for Disconnected (Disconnect)"
    },
    "TWI0.PSELSDA": {
      "long_name": "TWI0.PSELSDA (at 0x4000350c, read-write)",
      "purpose": "Pin select for SDA\n\nPSELSDA, bits [0:31] - Pin number configuration for TWI SDA signal; 0xFFFFFFFF\n                       for Disconnected (Disconnect)"
    },
    "TWI0.RXD": {
      "long_name": "TWI0.RXD (at 0x40003518, read-only)",
      "purpose": "RXD register\n\nRXD, bits [0:7] - RXD register"
    },
    "TWI0.SHORTS": {
      "long_name": "TWI0.SHORTS (at 0x40003200, read-write)",
      "purpose": "Shortcut register\n\nBB_SUSPEND, bit [0] - Shortcut between BB event and SUSPEND task\nBB_STOP, bit [1]    - Shortcut between BB event and STOP task"
    },
    "TWI0.TASKS_RESUME": {
      "long_name": "TWI0.TASKS_RESUME (at 0x40003020, write-only)",
      "purpose": "Resume TWI transaction"
    },
    "TWI0.TASKS_STARTRX": {
      "long_name": "TWI0.TASKS_STARTRX (at 0x40003000, write-only)",
      "purpose": "Start TWI receive sequence"
    },
    "TWI0.TASKS_STARTTX": {
      "long_name": "TWI0.TASKS_STARTTX (at 0x40003008, write-only)",
      "purpose": "Start TWI transmit sequence"
    },
    "TWI0.TASKS_STOP": {
      "long_name": "TWI0.TASKS_STOP (at 0x40003014, write-only)",
      "purpose": "Stop TWI transaction"
    },
    "TWI0.TASKS_SUSPEND": {
      "long_name": "TWI0.TASKS_SUSPEND (at 0x4000301c, write-only)",
      "purpose": "Suspend TWI transaction"
    },
    "TWI0.TXD": {
      "long_name": "TWI0.TXD (at 0x4000351c, read-write)",
      "purpose": "TXD register\n\nTXD, bits [0:7] - TXD register"
    },
    "TWI1.ADDRESS": {
      "long_name": "TWI1.ADDRESS (at 0x40004588, read-write)",
      "purpose": "Address used in the TWI transfer\n\nADDRESS, bits [0:6] - Address used in the TWI transfer"
    },
    "TWI1.ENABLE": {
      "long_name": "TWI1.ENABLE (at 0x40004500, read-write)",
      "purpose": "Enable TWI\n\nENABLE, bits [0:3] - Enable or disable TWI; 0 for Disabled (Disable TWI), 5 for\n                     Enabled (Enable TWI)"
    },
    "TWI1.ERRORSRC": {
      "long_name": "TWI1.ERRORSRC (at 0x400044c4, read-write)",
      "purpose": "Error source\n\nOVERRUN, bit [0] - Overrun error\nANACK, bit [1]   - NACK received after sending the address (write '1' to clear)\nDNACK, bit [2]   - NACK received after sending a data byte (write '1' to clear)"
    },
    "TWI1.EVENTS_BB": {
      "long_name": "TWI1.EVENTS_BB (at 0x40004138, read-write)",
      "purpose": "TWI byte boundary, generated before each byte that is sent or received"
    },
    "TWI1.EVENTS_ERROR": {
      "long_name": "TWI1.EVENTS_ERROR (at 0x40004124, read-write)",
      "purpose": "TWI error"
    },
    "TWI1.EVENTS_RXDREADY": {
      "long_name": "TWI1.EVENTS_RXDREADY (at 0x40004108, read-write)",
      "purpose": "TWI RXD byte received"
    },
    "TWI1.EVENTS_STOPPED": {
      "long_name": "TWI1.EVENTS_STOPPED (at 0x40004104, read-write)",
      "purpose": "TWI stopped"
    },
    "TWI1.EVENTS_SUSPENDED": {
      "long_name": "TWI1.EVENTS_SUSPENDED (at 0x40004148, read-write)",
      "purpose": "TWI entered the suspended state"
    },
    "TWI1.EVENTS_TXDSENT": {
      "long_name": "TWI1.EVENTS_TXDSENT (at 0x4000411c, read-write)",
      "purpose": "TWI TXD byte sent"
    },
    "TWI1.FREQUENCY": {
      "long_name": "TWI1.FREQUENCY (at 0x40004524, read-write)",
      "purpose": "TWI frequency\n\nFREQUENCY, bits [0:31] - TWI master clock frequency; 0x01980000 for K100 (100\n                         kbps), 0x04000000 for K250 (250 kbps), 0x06680000 for\n                         K400 (400 kbps (actual rate 410.256 kbps))"
    },
    "TWI1.INTENCLR": {
      "long_name": "TWI1.INTENCLR (at 0x40004308, read-write)",
      "purpose": "Disable interrupt\n\nSTOPPED, bit [1]    - Write '1' to Disable interrupt for STOPPED event\nRXDREADY, bit [2]   - Write '1' to Disable interrupt for RXDREADY event\nTXDSENT, bit [7]    - Write '1' to Disable interrupt for TXDSENT event\nERROR, bit [9]      - Write '1' to Disable interrupt for ERROR event\nBB, bit [14]        - Write '1' to Disable interrupt for BB event\nSUSPENDED, bit [18] - Write '1' to Disable interrupt for SUSPENDED event"
    },
    "TWI1.INTENSET": {
      "long_name": "TWI1.INTENSET (at 0x40004304, read-write)",
      "purpose": "Enable interrupt\n\nSTOPPED, bit [1]    - Write '1' to Enable interrupt for STOPPED event\nRXDREADY, bit [2]   - Write '1' to Enable interrupt for RXDREADY event\nTXDSENT, bit [7]    - Write '1' to Enable interrupt for TXDSENT event\nERROR, bit [9]      - Write '1' to Enable interrupt for ERROR event\nBB, bit [14]        - Write '1' to Enable interrupt for BB event\nSUSPENDED, bit [18] - Write '1' to Enable interrupt for SUSPENDED event"
    },
    "TWI1.PSELSCL": {
      "long_name": "TWI1.PSELSCL (at 0x40004508, read-write)",
      "purpose": "Pin select for SCL\n\nPSELSCL, bits [0:31] - Pin number configuration for TWI SCL signal; 0xFFFFFFFF\n                       for Disconnected (Disconnect)"
    },
    "TWI1.PSELSDA": {
      "long_name": "TWI1.PSELSDA (at 0x4000450c, read-write)",
      "purpose": "Pin select for SDA\n\nPSELSDA, bits [0:31] - Pin number configuration for TWI SDA signal; 0xFFFFFFFF\n                       for Disconnected (Disconnect)"
    },
    "TWI1.RXD": {
      "long_name": "TWI1.RXD (at 0x40004518, read-only)",
      "purpose": "RXD register\n\nRXD, bits [0:7] - RXD register"
    },
    "TWI1.SHORTS": {
      "long_name": "TWI1.SHORTS (at 0x40004200, read-write)",
      "purpose": "Shortcut register\n\nBB_SUSPEND, bit [0] - Shortcut between BB event and SUSPEND task\nBB_STOP, bit [1]    - Shortcut between BB event and STOP task"
    },
    "TWI1.TASKS_RESUME": {
      "long_name": "TWI1.TASKS_RESUME (at 0x40004020, write-only)",
      "purpose": "Resume TWI transaction"
    },
    "TWI1.TASKS_STARTRX": {
      "long_name": "TWI1.TASKS_STARTRX (at 0x40004000, write-only)",
      "purpose": "Start TWI receive sequence"
    },
    "TWI1.TASKS_STARTTX": {
      "long_name": "TWI1.TASKS_STARTTX (at 0x40004008, write-only)",
      "purpose": "Start TWI transmit sequence"
    },
    "TWI1.TASKS_STOP": {
      "long_name": "TWI1.TASKS_STOP (at 0x40004014, write-only)",
      "purpose": "Stop TWI transaction"
    },
    "TWI1.TASKS_SUSPEND": {
      "long_name": "TWI1.TASKS_SUSPEND (at 0x4000401c, write-only)",
      "purpose": "Suspend TWI transaction"
    },
    "TWI1.TXD": {
      "long_name": "TWI1.TXD (at 0x4000451c, read-write)",
      "purpose": "TXD register\n\nTXD, bits [0:7] - TXD register"
    },
    "TWIM0.ADDRESS": {
      "long_name": "TWIM0.ADDRESS (at 0x40003588, read-write)",
      "purpose": "Address used in the TWI transfer\n\nADDRESS, bits [0:6] - Address used in the TWI transfer"
    },
    "TWIM0.ENABLE": {
      "long_name": "TWIM0.ENABLE (at 0x40003500, read-write)",
      "purpose": "Enable TWIM\n\nENABLE, bits [0:3] - Enable or disable TWIM; 0 for Disabled (Disable TWIM), 6\n                     for Enabled (Enable TWIM)"
    },
    "TWIM0.ERRORSRC": {
      "long_name": "TWIM0.ERRORSRC (at 0x400034c4, read-write)",
      "purpose": "Error source\n\nOVERRUN, bit [0] - Overrun error\nANACK, bit [1]   - NACK received after sending the address (write '1' to clear)\nDNACK, bit [2]   - NACK received after sending a data byte (write '1' to clear)"
    },
    "TWIM0.EVENTS_ERROR": {
      "long_name": "TWIM0.EVENTS_ERROR (at 0x40003124, read-write)",
      "purpose": "TWI error"
    },
    "TWIM0.EVENTS_LASTRX": {
      "long_name": "TWIM0.EVENTS_LASTRX (at 0x4000315c, read-write)",
      "purpose": "Byte boundary, starting to receive the last byte"
    },
    "TWIM0.EVENTS_LASTTX": {
      "long_name": "TWIM0.EVENTS_LASTTX (at 0x40003160, read-write)",
      "purpose": "Byte boundary, starting to transmit the last byte"
    },
    "TWIM0.EVENTS_RXSTARTED": {
      "long_name": "TWIM0.EVENTS_RXSTARTED (at 0x4000314c, read-write)",
      "purpose": "Receive sequence started"
    },
    "TWIM0.EVENTS_STOPPED": {
      "long_name": "TWIM0.EVENTS_STOPPED (at 0x40003104, read-write)",
      "purpose": "TWI stopped"
    },
    "TWIM0.EVENTS_SUSPENDED": {
      "long_name": "TWIM0.EVENTS_SUSPENDED (at 0x40003148, read-write)",
      "purpose": "Last byte has been sent out after the SUSPEND task has been issued, TWI traffic\nis now suspended."
    },
    "TWIM0.EVENTS_TXSTARTED": {
      "long_name": "TWIM0.EVENTS_TXSTARTED (at 0x40003150, read-write)",
      "purpose": "Transmit sequence started"
    },
    "TWIM0.FREQUENCY": {
      "long_name": "TWIM0.FREQUENCY (at 0x40003524, read-write)",
      "purpose": "TWI frequency\n\nFREQUENCY, bits [0:31] - TWI master clock frequency; 0x01980000 for K100 (100\n                         kbps), 0x04000000 for K250 (250 kbps), 0x06400000 for\n                         K400 (400 kbps)"
    },
    "TWIM0.INTEN": {
      "long_name": "TWIM0.INTEN (at 0x40003300, read-write)",
      "purpose": "Enable or disable interrupt\n\nSTOPPED, bit [1]    - Enable or disable interrupt for STOPPED event\nERROR, bit [9]      - Enable or disable interrupt for ERROR event\nSUSPENDED, bit [18] - Enable or disable interrupt for SUSPENDED event\nRXSTARTED, bit [19] - Enable or disable interrupt for RXSTARTED event\nTXSTARTED, bit [20] - Enable or disable interrupt for TXSTARTED event\nLASTRX, bit [23]    - Enable or disable interrupt for LASTRX event\nLASTTX, bit [24]    - Enable or disable interrupt for LASTTX event"
    },
    "TWIM0.INTENCLR": {
      "long_name": "TWIM0.INTENCLR (at 0x40003308, read-write)",
      "purpose": "Disable interrupt\n\nSTOPPED, bit [1]    - Write '1' to Disable interrupt for STOPPED event\nERROR, bit [9]      - Write '1' to Disable interrupt for ERROR event\nSUSPENDED, bit [18] - Write '1' to Disable interrupt for SUSPENDED event\nRXSTARTED, bit [19] - Write '1' to Disable interrupt for RXSTARTED event\nTXSTARTED, bit [20] - Write '1' to Disable interrupt for TXSTARTED event\nLASTRX, bit [23]    - Write '1' to Disable interrupt for LASTRX event\nLASTTX, bit [24]    - Write '1' to Disable interrupt for LASTTX event"
    },
    "TWIM0.INTENSET": {
      "long_name": "TWIM0.INTENSET (at 0x40003304, read-write)",
      "purpose": "Enable interrupt\n\nSTOPPED, bit [1]    - Write '1' to Enable interrupt for STOPPED event\nERROR, bit [9]      - Write '1' to Enable interrupt for ERROR event\nSUSPENDED, bit [18] - Write '1' to Enable interrupt for SUSPENDED event\nRXSTARTED, bit [19] - Write '1' to Enable interrupt for RXSTARTED event\nTXSTARTED, bit [20] - Write '1' to Enable interrupt for TXSTARTED event\nLASTRX, bit [23]    - Write '1' to Enable interrupt for LASTRX event\nLASTTX, bit [24]    - Write '1' to Enable interrupt for LASTTX event"
    },
    "TWIM0.PSEL.SCL": {
      "long_name": "TWIM0.PSEL.SCL (at 0x40003508, read-write)",
      "purpose": "Pin select for SCL signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "TWIM0.PSEL.SDA": {
      "long_name": "TWIM0.PSEL.SDA (at 0x4000350c, read-write)",
      "purpose": "Pin select for SDA signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "TWIM0.RXD.AMOUNT": {
      "long_name": "TWIM0.RXD.AMOUNT (at 0x4000353c, read-only)",
      "purpose": "Number of bytes transferred in the last transaction\n\nAMOUNT, bits [0:7] - Number of bytes transferred in the last transaction. In\n                     case of NACK error, includes the NACK'ed byte."
    },
    "TWIM0.RXD.LIST": {
      "long_name": "TWIM0.RXD.LIST (at 0x40003540, read-write)",
      "purpose": "EasyDMA list type\n\nLIST, bits [0:2] - List type"
    },
    "TWIM0.RXD.MAXCNT": {
      "long_name": "TWIM0.RXD.MAXCNT (at 0x40003538, read-write)",
      "purpose": "Maximum number of bytes in receive buffer\n\nMAXCNT, bits [0:7] - Maximum number of bytes in receive buffer"
    },
    "TWIM0.RXD.PTR": {
      "long_name": "TWIM0.RXD.PTR (at 0x40003534, read-write)",
      "purpose": "Data pointer\n\nPTR, bits [0:31] - Data pointer"
    },
    "TWIM0.SHORTS": {
      "long_name": "TWIM0.SHORTS (at 0x40003200, read-write)",
      "purpose": "Shortcut register\n\nLASTTX_STARTRX, bit [7]  - Shortcut between LASTTX event and STARTRX task\nLASTTX_SUSPEND, bit [8]  - Shortcut between LASTTX event and SUSPEND task\nLASTTX_STOP, bit [9]     - Shortcut between LASTTX event and STOP task\nLASTRX_STARTTX, bit [10] - Shortcut between LASTRX event and STARTTX task\nLASTRX_STOP, bit [12]    - Shortcut between LASTRX event and STOP task"
    },
    "TWIM0.TASKS_RESUME": {
      "long_name": "TWIM0.TASKS_RESUME (at 0x40003020, write-only)",
      "purpose": "Resume TWI transaction"
    },
    "TWIM0.TASKS_STARTRX": {
      "long_name": "TWIM0.TASKS_STARTRX (at 0x40003000, write-only)",
      "purpose": "Start TWI receive sequence"
    },
    "TWIM0.TASKS_STARTTX": {
      "long_name": "TWIM0.TASKS_STARTTX (at 0x40003008, write-only)",
      "purpose": "Start TWI transmit sequence"
    },
    "TWIM0.TASKS_STOP": {
      "long_name": "TWIM0.TASKS_STOP (at 0x40003014, write-only)",
      "purpose": "Stop TWI transaction. Must be issued while the TWI master is not suspended."
    },
    "TWIM0.TASKS_SUSPEND": {
      "long_name": "TWIM0.TASKS_SUSPEND (at 0x4000301c, write-only)",
      "purpose": "Suspend TWI transaction"
    },
    "TWIM0.TXD.AMOUNT": {
      "long_name": "TWIM0.TXD.AMOUNT (at 0x4000354c, read-only)",
      "purpose": "Number of bytes transferred in the last transaction\n\nAMOUNT, bits [0:7] - Number of bytes transferred in the last transaction. In\n                     case of NACK error, includes the NACK'ed byte."
    },
    "TWIM0.TXD.LIST": {
      "long_name": "TWIM0.TXD.LIST (at 0x40003550, read-write)",
      "purpose": "EasyDMA list type\n\nLIST, bits [0:2] - List type"
    },
    "TWIM0.TXD.MAXCNT": {
      "long_name": "TWIM0.TXD.MAXCNT (at 0x40003548, read-write)",
      "purpose": "Maximum number of bytes in transmit buffer\n\nMAXCNT, bits [0:7] - Maximum number of bytes in transmit buffer"
    },
    "TWIM0.TXD.PTR": {
      "long_name": "TWIM0.TXD.PTR (at 0x40003544, read-write)",
      "purpose": "Data pointer\n\nPTR, bits [0:31] - Data pointer"
    },
    "TWIM1.ADDRESS": {
      "long_name": "TWIM1.ADDRESS (at 0x40004588, read-write)",
      "purpose": "Address used in the TWI transfer\n\nADDRESS, bits [0:6] - Address used in the TWI transfer"
    },
    "TWIM1.ENABLE": {
      "long_name": "TWIM1.ENABLE (at 0x40004500, read-write)",
      "purpose": "Enable TWIM\n\nENABLE, bits [0:3] - Enable or disable TWIM; 0 for Disabled (Disable TWIM), 6\n                     for Enabled (Enable TWIM)"
    },
    "TWIM1.ERRORSRC": {
      "long_name": "TWIM1.ERRORSRC (at 0x400044c4, read-write)",
      "purpose": "Error source\n\nOVERRUN, bit [0] - Overrun error\nANACK, bit [1]   - NACK received after sending the address (write '1' to clear)\nDNACK, bit [2]   - NACK received after sending a data byte (write '1' to clear)"
    },
    "TWIM1.EVENTS_ERROR": {
      "long_name": "TWIM1.EVENTS_ERROR (at 0x40004124, read-write)",
      "purpose": "TWI error"
    },
    "TWIM1.EVENTS_LASTRX": {
      "long_name": "TWIM1.EVENTS_LASTRX (at 0x4000415c, read-write)",
      "purpose": "Byte boundary, starting to receive the last byte"
    },
    "TWIM1.EVENTS_LASTTX": {
      "long_name": "TWIM1.EVENTS_LASTTX (at 0x40004160, read-write)",
      "purpose": "Byte boundary, starting to transmit the last byte"
    },
    "TWIM1.EVENTS_RXSTARTED": {
      "long_name": "TWIM1.EVENTS_RXSTARTED (at 0x4000414c, read-write)",
      "purpose": "Receive sequence started"
    },
    "TWIM1.EVENTS_STOPPED": {
      "long_name": "TWIM1.EVENTS_STOPPED (at 0x40004104, read-write)",
      "purpose": "TWI stopped"
    },
    "TWIM1.EVENTS_SUSPENDED": {
      "long_name": "TWIM1.EVENTS_SUSPENDED (at 0x40004148, read-write)",
      "purpose": "Last byte has been sent out after the SUSPEND task has been issued, TWI traffic\nis now suspended."
    },
    "TWIM1.EVENTS_TXSTARTED": {
      "long_name": "TWIM1.EVENTS_TXSTARTED (at 0x40004150, read-write)",
      "purpose": "Transmit sequence started"
    },
    "TWIM1.FREQUENCY": {
      "long_name": "TWIM1.FREQUENCY (at 0x40004524, read-write)",
      "purpose": "TWI frequency\n\nFREQUENCY, bits [0:31] - TWI master clock frequency; 0x01980000 for K100 (100\n                         kbps), 0x04000000 for K250 (250 kbps), 0x06400000 for\n                         K400 (400 kbps)"
    },
    "TWIM1.INTEN": {
      "long_name": "TWIM1.INTEN (at 0x40004300, read-write)",
      "purpose": "Enable or disable interrupt\n\nSTOPPED, bit [1]    - Enable or disable interrupt for STOPPED event\nERROR, bit [9]      - Enable or disable interrupt for ERROR event\nSUSPENDED, bit [18] - Enable or disable interrupt for SUSPENDED event\nRXSTARTED, bit [19] - Enable or disable interrupt for RXSTARTED event\nTXSTARTED, bit [20] - Enable or disable interrupt for TXSTARTED event\nLASTRX, bit [23]    - Enable or disable interrupt for LASTRX event\nLASTTX, bit [24]    - Enable or disable interrupt for LASTTX event"
    },
    "TWIM1.INTENCLR": {
      "long_name": "TWIM1.INTENCLR (at 0x40004308, read-write)",
      "purpose": "Disable interrupt\n\nSTOPPED, bit [1]    - Write '1' to Disable interrupt for STOPPED event\nERROR, bit [9]      - Write '1' to Disable interrupt for ERROR event\nSUSPENDED, bit [18] - Write '1' to Disable interrupt for SUSPENDED event\nRXSTARTED, bit [19] - Write '1' to Disable interrupt for RXSTARTED event\nTXSTARTED, bit [20] - Write '1' to Disable interrupt for TXSTARTED event\nLASTRX, bit [23]    - Write '1' to Disable interrupt for LASTRX event\nLASTTX, bit [24]    - Write '1' to Disable interrupt for LASTTX event"
    },
    "TWIM1.INTENSET": {
      "long_name": "TWIM1.INTENSET (at 0x40004304, read-write)",
      "purpose": "Enable interrupt\n\nSTOPPED, bit [1]    - Write '1' to Enable interrupt for STOPPED event\nERROR, bit [9]      - Write '1' to Enable interrupt for ERROR event\nSUSPENDED, bit [18] - Write '1' to Enable interrupt for SUSPENDED event\nRXSTARTED, bit [19] - Write '1' to Enable interrupt for RXSTARTED event\nTXSTARTED, bit [20] - Write '1' to Enable interrupt for TXSTARTED event\nLASTRX, bit [23]    - Write '1' to Enable interrupt for LASTRX event\nLASTTX, bit [24]    - Write '1' to Enable interrupt for LASTTX event"
    },
    "TWIM1.PSEL.SCL": {
      "long_name": "TWIM1.PSEL.SCL (at 0x40004508, read-write)",
      "purpose": "Pin select for SCL signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "TWIM1.PSEL.SDA": {
      "long_name": "TWIM1.PSEL.SDA (at 0x4000450c, read-write)",
      "purpose": "Pin select for SDA signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "TWIM1.RXD.AMOUNT": {
      "long_name": "TWIM1.RXD.AMOUNT (at 0x4000453c, read-only)",
      "purpose": "Number of bytes transferred in the last transaction\n\nAMOUNT, bits [0:7] - Number of bytes transferred in the last transaction. In\n                     case of NACK error, includes the NACK'ed byte."
    },
    "TWIM1.RXD.LIST": {
      "long_name": "TWIM1.RXD.LIST (at 0x40004540, read-write)",
      "purpose": "EasyDMA list type\n\nLIST, bits [0:2] - List type"
    },
    "TWIM1.RXD.MAXCNT": {
      "long_name": "TWIM1.RXD.MAXCNT (at 0x40004538, read-write)",
      "purpose": "Maximum number of bytes in receive buffer\n\nMAXCNT, bits [0:7] - Maximum number of bytes in receive buffer"
    },
    "TWIM1.RXD.PTR": {
      "long_name": "TWIM1.RXD.PTR (at 0x40004534, read-write)",
      "purpose": "Data pointer\n\nPTR, bits [0:31] - Data pointer"
    },
    "TWIM1.SHORTS": {
      "long_name": "TWIM1.SHORTS (at 0x40004200, read-write)",
      "purpose": "Shortcut register\n\nLASTTX_STARTRX, bit [7]  - Shortcut between LASTTX event and STARTRX task\nLASTTX_SUSPEND, bit [8]  - Shortcut between LASTTX event and SUSPEND task\nLASTTX_STOP, bit [9]     - Shortcut between LASTTX event and STOP task\nLASTRX_STARTTX, bit [10] - Shortcut between LASTRX event and STARTTX task\nLASTRX_STOP, bit [12]    - Shortcut between LASTRX event and STOP task"
    },
    "TWIM1.TASKS_RESUME": {
      "long_name": "TWIM1.TASKS_RESUME (at 0x40004020, write-only)",
      "purpose": "Resume TWI transaction"
    },
    "TWIM1.TASKS_STARTRX": {
      "long_name": "TWIM1.TASKS_STARTRX (at 0x40004000, write-only)",
      "purpose": "Start TWI receive sequence"
    },
    "TWIM1.TASKS_STARTTX": {
      "long_name": "TWIM1.TASKS_STARTTX (at 0x40004008, write-only)",
      "purpose": "Start TWI transmit sequence"
    },
    "TWIM1.TASKS_STOP": {
      "long_name": "TWIM1.TASKS_STOP (at 0x40004014, write-only)",
      "purpose": "Stop TWI transaction. Must be issued while the TWI master is not suspended."
    },
    "TWIM1.TASKS_SUSPEND": {
      "long_name": "TWIM1.TASKS_SUSPEND (at 0x4000401c, write-only)",
      "purpose": "Suspend TWI transaction"
    },
    "TWIM1.TXD.AMOUNT": {
      "long_name": "TWIM1.TXD.AMOUNT (at 0x4000454c, read-only)",
      "purpose": "Number of bytes transferred in the last transaction\n\nAMOUNT, bits [0:7] - Number of bytes transferred in the last transaction. In\n                     case of NACK error, includes the NACK'ed byte."
    },
    "TWIM1.TXD.LIST": {
      "long_name": "TWIM1.TXD.LIST (at 0x40004550, read-write)",
      "purpose": "EasyDMA list type\n\nLIST, bits [0:2] - List type"
    },
    "TWIM1.TXD.MAXCNT": {
      "long_name": "TWIM1.TXD.MAXCNT (at 0x40004548, read-write)",
      "purpose": "Maximum number of bytes in transmit buffer\n\nMAXCNT, bits [0:7] - Maximum number of bytes in transmit buffer"
    },
    "TWIM1.TXD.PTR": {
      "long_name": "TWIM1.TXD.PTR (at 0x40004544, read-write)",
      "purpose": "Data pointer\n\nPTR, bits [0:31] - Data pointer"
    },
    "TWIS0.ADDRESS<n>": {
      "long_name": "TWIS0.ADDRESS<n> (at 0x40003588, read-write)",
      "purpose": "TWI slave address <n>\n\nADDRESS, bits [0:6] - TWI slave address"
    },
    "TWIS0.CONFIG": {
      "long_name": "TWIS0.CONFIG (at 0x40003594, read-write)",
      "purpose": "Configuration register for the address match mechanism\n\nADDRESS0, bit [0] - Enable or disable address matching on ADDRESS[0]\nADDRESS1, bit [1] - Enable or disable address matching on ADDRESS[1]"
    },
    "TWIS0.ENABLE": {
      "long_name": "TWIS0.ENABLE (at 0x40003500, read-write)",
      "purpose": "Enable TWIS\n\nENABLE, bits [0:3] - Enable or disable TWIS; 0 for Disabled (Disable TWIS), 9\n                     for Enabled (Enable TWIS)"
    },
    "TWIS0.ERRORSRC": {
      "long_name": "TWIS0.ERRORSRC (at 0x400034d0, read-write)",
      "purpose": "Error source\n\nOVERFLOW, bit [0] - RX buffer overflow detected, and prevented\nDNACK, bit [2]    - NACK sent after receiving a data byte\nOVERREAD, bit [3] - TX buffer over-read detected, and prevented"
    },
    "TWIS0.EVENTS_ERROR": {
      "long_name": "TWIS0.EVENTS_ERROR (at 0x40003124, read-write)",
      "purpose": "TWI error"
    },
    "TWIS0.EVENTS_READ": {
      "long_name": "TWIS0.EVENTS_READ (at 0x40003168, read-write)",
      "purpose": "Read command received"
    },
    "TWIS0.EVENTS_RXSTARTED": {
      "long_name": "TWIS0.EVENTS_RXSTARTED (at 0x4000314c, read-write)",
      "purpose": "Receive sequence started"
    },
    "TWIS0.EVENTS_STOPPED": {
      "long_name": "TWIS0.EVENTS_STOPPED (at 0x40003104, read-write)",
      "purpose": "TWI stopped"
    },
    "TWIS0.EVENTS_TXSTARTED": {
      "long_name": "TWIS0.EVENTS_TXSTARTED (at 0x40003150, read-write)",
      "purpose": "Transmit sequence started"
    },
    "TWIS0.EVENTS_WRITE": {
      "long_name": "TWIS0.EVENTS_WRITE (at 0x40003164, read-write)",
      "purpose": "Write command received"
    },
    "TWIS0.INTEN": {
      "long_name": "TWIS0.INTEN (at 0x40003300, read-write)",
      "purpose": "Enable or disable interrupt\n\nSTOPPED, bit [1]    - Enable or disable interrupt for STOPPED event\nERROR, bit [9]      - Enable or disable interrupt for ERROR event\nRXSTARTED, bit [19] - Enable or disable interrupt for RXSTARTED event\nTXSTARTED, bit [20] - Enable or disable interrupt for TXSTARTED event\nWRITE, bit [25]     - Enable or disable interrupt for WRITE event\nREAD, bit [26]      - Enable or disable interrupt for READ event"
    },
    "TWIS0.INTENCLR": {
      "long_name": "TWIS0.INTENCLR (at 0x40003308, read-write)",
      "purpose": "Disable interrupt\n\nSTOPPED, bit [1]    - Write '1' to Disable interrupt for STOPPED event\nERROR, bit [9]      - Write '1' to Disable interrupt for ERROR event\nRXSTARTED, bit [19] - Write '1' to Disable interrupt for RXSTARTED event\nTXSTARTED, bit [20] - Write '1' to Disable interrupt for TXSTARTED event\nWRITE, bit [25]     - Write '1' to Disable interrupt for WRITE event\nREAD, bit [26]      - Write '1' to Disable interrupt for READ event"
    },
    "TWIS0.INTENSET": {
      "long_name": "TWIS0.INTENSET (at 0x40003304, read-write)",
      "purpose": "Enable interrupt\n\nSTOPPED, bit [1]    - Write '1' to Enable interrupt for STOPPED event\nERROR, bit [9]      - Write '1' to Enable interrupt for ERROR event\nRXSTARTED, bit [19] - Write '1' to Enable interrupt for RXSTARTED event\nTXSTARTED, bit [20] - Write '1' to Enable interrupt for TXSTARTED event\nWRITE, bit [25]     - Write '1' to Enable interrupt for WRITE event\nREAD, bit [26]      - Write '1' to Enable interrupt for READ event"
    },
    "TWIS0.MATCH": {
      "long_name": "TWIS0.MATCH (at 0x400034d4, read-only)",
      "purpose": "Status register indicating which address had a match\n\nMATCH, bit [0] - Which of the addresses in {ADDRESS} matched the incoming\n                 address"
    },
    "TWIS0.ORC": {
      "long_name": "TWIS0.ORC (at 0x400035c0, read-write)",
      "purpose": "Over-read character. Character sent out in case of an over-read of the transmit\nbuffer.\n\nORC, bits [0:7] - Over-read character. Character sent out in case of an over-\n                  read of the transmit buffer."
    },
    "TWIS0.PSEL.SCL": {
      "long_name": "TWIS0.PSEL.SCL (at 0x40003508, read-write)",
      "purpose": "Pin select for SCL signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "TWIS0.PSEL.SDA": {
      "long_name": "TWIS0.PSEL.SDA (at 0x4000350c, read-write)",
      "purpose": "Pin select for SDA signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "TWIS0.RXD.AMOUNT": {
      "long_name": "TWIS0.RXD.AMOUNT (at 0x4000353c, read-only)",
      "purpose": "Number of bytes transferred in the last RXD transaction\n\nAMOUNT, bits [0:7] - Number of bytes transferred in the last RXD transaction"
    },
    "TWIS0.RXD.MAXCNT": {
      "long_name": "TWIS0.RXD.MAXCNT (at 0x40003538, read-write)",
      "purpose": "Maximum number of bytes in RXD buffer\n\nMAXCNT, bits [0:7] - Maximum number of bytes in RXD buffer"
    },
    "TWIS0.RXD.PTR": {
      "long_name": "TWIS0.RXD.PTR (at 0x40003534, read-write)",
      "purpose": "RXD Data pointer\n\nPTR, bits [0:31] - RXD Data pointer"
    },
    "TWIS0.SHORTS": {
      "long_name": "TWIS0.SHORTS (at 0x40003200, read-write)",
      "purpose": "Shortcut register\n\nWRITE_SUSPEND, bit [13] - Shortcut between WRITE event and SUSPEND task\nREAD_SUSPEND, bit [14]  - Shortcut between READ event and SUSPEND task"
    },
    "TWIS0.TASKS_PREPARERX": {
      "long_name": "TWIS0.TASKS_PREPARERX (at 0x40003030, write-only)",
      "purpose": "Prepare the TWI slave to respond to a write command"
    },
    "TWIS0.TASKS_PREPARETX": {
      "long_name": "TWIS0.TASKS_PREPARETX (at 0x40003034, write-only)",
      "purpose": "Prepare the TWI slave to respond to a read command"
    },
    "TWIS0.TASKS_RESUME": {
      "long_name": "TWIS0.TASKS_RESUME (at 0x40003020, write-only)",
      "purpose": "Resume TWI transaction"
    },
    "TWIS0.TASKS_STOP": {
      "long_name": "TWIS0.TASKS_STOP (at 0x40003014, write-only)",
      "purpose": "Stop TWI transaction"
    },
    "TWIS0.TASKS_SUSPEND": {
      "long_name": "TWIS0.TASKS_SUSPEND (at 0x4000301c, write-only)",
      "purpose": "Suspend TWI transaction"
    },
    "TWIS0.TXD.AMOUNT": {
      "long_name": "TWIS0.TXD.AMOUNT (at 0x4000354c, read-only)",
      "purpose": "Number of bytes transferred in the last TXD transaction\n\nAMOUNT, bits [0:7] - Number of bytes transferred in the last TXD transaction"
    },
    "TWIS0.TXD.MAXCNT": {
      "long_name": "TWIS0.TXD.MAXCNT (at 0x40003548, read-write)",
      "purpose": "Maximum number of bytes in TXD buffer\n\nMAXCNT, bits [0:7] - Maximum number of bytes in TXD buffer"
    },
    "TWIS0.TXD.PTR": {
      "long_name": "TWIS0.TXD.PTR (at 0x40003544, read-write)",
      "purpose": "TXD Data pointer\n\nPTR, bits [0:31] - TXD Data pointer"
    },
    "TWIS1.ADDRESS<n>": {
      "long_name": "TWIS1.ADDRESS<n> (at 0x40004588, read-write)",
      "purpose": "TWI slave address <n>\n\nADDRESS, bits [0:6] - TWI slave address"
    },
    "TWIS1.CONFIG": {
      "long_name": "TWIS1.CONFIG (at 0x40004594, read-write)",
      "purpose": "Configuration register for the address match mechanism\n\nADDRESS0, bit [0] - Enable or disable address matching on ADDRESS[0]\nADDRESS1, bit [1] - Enable or disable address matching on ADDRESS[1]"
    },
    "TWIS1.ENABLE": {
      "long_name": "TWIS1.ENABLE (at 0x40004500, read-write)",
      "purpose": "Enable TWIS\n\nENABLE, bits [0:3] - Enable or disable TWIS; 0 for Disabled (Disable TWIS), 9\n                     for Enabled (Enable TWIS)"
    },
    "TWIS1.ERRORSRC": {
      "long_name": "TWIS1.ERRORSRC (at 0x400044d0, read-write)",
      "purpose": "Error source\n\nOVERFLOW, bit [0] - RX buffer overflow detected, and prevented\nDNACK, bit [2]    - NACK sent after receiving a data byte\nOVERREAD, bit [3] - TX buffer over-read detected, and prevented"
    },
    "TWIS1.EVENTS_ERROR": {
      "long_name": "TWIS1.EVENTS_ERROR (at 0x40004124, read-write)",
      "purpose": "TWI error"
    },
    "TWIS1.EVENTS_READ": {
      "long_name": "TWIS1.EVENTS_READ (at 0x40004168, read-write)",
      "purpose": "Read command received"
    },
    "TWIS1.EVENTS_RXSTARTED": {
      "long_name": "TWIS1.EVENTS_RXSTARTED (at 0x4000414c, read-write)",
      "purpose": "Receive sequence started"
    },
    "TWIS1.EVENTS_STOPPED": {
      "long_name": "TWIS1.EVENTS_STOPPED (at 0x40004104, read-write)",
      "purpose": "TWI stopped"
    },
    "TWIS1.EVENTS_TXSTARTED": {
      "long_name": "TWIS1.EVENTS_TXSTARTED (at 0x40004150, read-write)",
      "purpose": "Transmit sequence started"
    },
    "TWIS1.EVENTS_WRITE": {
      "long_name": "TWIS1.EVENTS_WRITE (at 0x40004164, read-write)",
      "purpose": "Write command received"
    },
    "TWIS1.INTEN": {
      "long_name": "TWIS1.INTEN (at 0x40004300, read-write)",
      "purpose": "Enable or disable interrupt\n\nSTOPPED, bit [1]    - Enable or disable interrupt for STOPPED event\nERROR, bit [9]      - Enable or disable interrupt for ERROR event\nRXSTARTED, bit [19] - Enable or disable interrupt for RXSTARTED event\nTXSTARTED, bit [20] - Enable or disable interrupt for TXSTARTED event\nWRITE, bit [25]     - Enable or disable interrupt for WRITE event\nREAD, bit [26]      - Enable or disable interrupt for READ event"
    },
    "TWIS1.INTENCLR": {
      "long_name": "TWIS1.INTENCLR (at 0x40004308, read-write)",
      "purpose": "Disable interrupt\n\nSTOPPED, bit [1]    - Write '1' to Disable interrupt for STOPPED event\nERROR, bit [9]      - Write '1' to Disable interrupt for ERROR event\nRXSTARTED, bit [19] - Write '1' to Disable interrupt for RXSTARTED event\nTXSTARTED, bit [20] - Write '1' to Disable interrupt for TXSTARTED event\nWRITE, bit [25]     - Write '1' to Disable interrupt for WRITE event\nREAD, bit [26]      - Write '1' to Disable interrupt for READ event"
    },
    "TWIS1.INTENSET": {
      "long_name": "TWIS1.INTENSET (at 0x40004304, read-write)",
      "purpose": "Enable interrupt\n\nSTOPPED, bit [1]    - Write '1' to Enable interrupt for STOPPED event\nERROR, bit [9]      - Write '1' to Enable interrupt for ERROR event\nRXSTARTED, bit [19] - Write '1' to Enable interrupt for RXSTARTED event\nTXSTARTED, bit [20] - Write '1' to Enable interrupt for TXSTARTED event\nWRITE, bit [25]     - Write '1' to Enable interrupt for WRITE event\nREAD, bit [26]      - Write '1' to Enable interrupt for READ event"
    },
    "TWIS1.MATCH": {
      "long_name": "TWIS1.MATCH (at 0x400044d4, read-only)",
      "purpose": "Status register indicating which address had a match\n\nMATCH, bit [0] - Which of the addresses in {ADDRESS} matched the incoming\n                 address"
    },
    "TWIS1.ORC": {
      "long_name": "TWIS1.ORC (at 0x400045c0, read-write)",
      "purpose": "Over-read character. Character sent out in case of an over-read of the transmit\nbuffer.\n\nORC, bits [0:7] - Over-read character. Character sent out in case of an over-\n                  read of the transmit buffer."
    },
    "TWIS1.PSEL.SCL": {
      "long_name": "TWIS1.PSEL.SCL (at 0x40004508, read-write)",
      "purpose": "Pin select for SCL signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "TWIS1.PSEL.SDA": {
      "long_name": "TWIS1.PSEL.SDA (at 0x4000450c, read-write)",
      "purpose": "Pin select for SDA signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "TWIS1.RXD.AMOUNT": {
      "long_name": "TWIS1.RXD.AMOUNT (at 0x4000453c, read-only)",
      "purpose": "Number of bytes transferred in the last RXD transaction\n\nAMOUNT, bits [0:7] - Number of bytes transferred in the last RXD transaction"
    },
    "TWIS1.RXD.MAXCNT": {
      "long_name": "TWIS1.RXD.MAXCNT (at 0x40004538, read-write)",
      "purpose": "Maximum number of bytes in RXD buffer\n\nMAXCNT, bits [0:7] - Maximum number of bytes in RXD buffer"
    },
    "TWIS1.RXD.PTR": {
      "long_name": "TWIS1.RXD.PTR (at 0x40004534, read-write)",
      "purpose": "RXD Data pointer\n\nPTR, bits [0:31] - RXD Data pointer"
    },
    "TWIS1.SHORTS": {
      "long_name": "TWIS1.SHORTS (at 0x40004200, read-write)",
      "purpose": "Shortcut register\n\nWRITE_SUSPEND, bit [13] - Shortcut between WRITE event and SUSPEND task\nREAD_SUSPEND, bit [14]  - Shortcut between READ event and SUSPEND task"
    },
    "TWIS1.TASKS_PREPARERX": {
      "long_name": "TWIS1.TASKS_PREPARERX (at 0x40004030, write-only)",
      "purpose": "Prepare the TWI slave to respond to a write command"
    },
    "TWIS1.TASKS_PREPARETX": {
      "long_name": "TWIS1.TASKS_PREPARETX (at 0x40004034, write-only)",
      "purpose": "Prepare the TWI slave to respond to a read command"
    },
    "TWIS1.TASKS_RESUME": {
      "long_name": "TWIS1.TASKS_RESUME (at 0x40004020, write-only)",
      "purpose": "Resume TWI transaction"
    },
    "TWIS1.TASKS_STOP": {
      "long_name": "TWIS1.TASKS_STOP (at 0x40004014, write-only)",
      "purpose": "Stop TWI transaction"
    },
    "TWIS1.TASKS_SUSPEND": {
      "long_name": "TWIS1.TASKS_SUSPEND (at 0x4000401c, write-only)",
      "purpose": "Suspend TWI transaction"
    },
    "TWIS1.TXD.AMOUNT": {
      "long_name": "TWIS1.TXD.AMOUNT (at 0x4000454c, read-only)",
      "purpose": "Number of bytes transferred in the last TXD transaction\n\nAMOUNT, bits [0:7] - Number of bytes transferred in the last TXD transaction"
    },
    "TWIS1.TXD.MAXCNT": {
      "long_name": "TWIS1.TXD.MAXCNT (at 0x40004548, read-write)",
      "purpose": "Maximum number of bytes in TXD buffer\n\nMAXCNT, bits [0:7] - Maximum number of bytes in TXD buffer"
    },
    "TWIS1.TXD.PTR": {
      "long_name": "TWIS1.TXD.PTR (at 0x40004544, read-write)",
      "purpose": "TXD Data pointer\n\nPTR, bits [0:31] - TXD Data pointer"
    },
    "UART0.BAUDRATE": {
      "long_name": "UART0.BAUDRATE (at 0x40002524, read-write)",
      "purpose": "Baud rate\n\nBAUDRATE, bits [0:31] - Baud rate; 0x0004F000 for Baud1200 (1200 baud (actual\n                        rate: 1205)), 0x0009D000 for Baud2400 (2400 baud (actual\n                        rate: 2396)), 0x0013B000 for Baud4800 (4800 baud (actual\n                        rate: 4808)), 0x00275000 for Baud9600 (9600 baud (actual\n                        rate: 9598)), 0x003B0000 for Baud14400 (14400 baud\n                        (actual rate: 14414)), 0x004EA000 for Baud19200 (19200\n                        baud (actual rate: 19208)), 0x0075F000 for Baud28800\n                        (28800 baud (actual rate: 28829)), 0x00800000 for\n                        Baud31250 (31250 baud), 0x009D5000 for Baud38400 (38400\n                        baud (actual rate: 38462)), 0x00E50000 for Baud56000\n                        (56000 baud (actual rate: 55944)), 0x00EBF000 for\n                        Baud57600 (57600 baud (actual rate: 57762)), 0x013A9000\n                        for Baud76800 (76800 baud (actual rate: 76923)),\n                        0x01D7E000 for Baud115200 (115200 baud (actual rate:\n                        115942)), 0x03AFB000 for Baud230400 (230400 baud (actual\n                        rate: 231884)), 0x04000000 for Baud250000 (250000 baud),\n                        0x075F7000 for Baud460800 (460800 baud (actual rate:\n                        470588)), 0x0EBED000 for Baud921600 (921600 baud (actual\n                        rate: 941176)), 0x10000000 for Baud1M (1Mega baud)"
    },
    "UART0.CONFIG": {
      "long_name": "UART0.CONFIG (at 0x4000256c, read-write)",
      "purpose": "Configuration of parity and hardware flow control\n\nHWFC, bit [0]      - Hardware flow control\nPARITY, bits [1:3] - Parity; 0x0 for Excluded (Exclude parity bit), 0x7 for\n                     Included (Include parity bit)"
    },
    "UART0.ENABLE": {
      "long_name": "UART0.ENABLE (at 0x40002500, read-write)",
      "purpose": "Enable UART\n\nENABLE, bits [0:3] - Enable or disable UART; 0 for Disabled (Disable UART), 4\n                     for Enabled (Enable UART)"
    },
    "UART0.ERRORSRC": {
      "long_name": "UART0.ERRORSRC (at 0x40002480, read-write)",
      "purpose": "Error source\n\nOVERRUN, bit [0] - Overrun error\nPARITY, bit [1]  - Parity error\nFRAMING, bit [2] - Framing error occurred\nBREAK, bit [3]   - Break condition"
    },
    "UART0.EVENTS_CTS": {
      "long_name": "UART0.EVENTS_CTS (at 0x40002100, read-write)",
      "purpose": "CTS is activated (set low). Clear To Send."
    },
    "UART0.EVENTS_ERROR": {
      "long_name": "UART0.EVENTS_ERROR (at 0x40002124, read-write)",
      "purpose": "Error detected"
    },
    "UART0.EVENTS_NCTS": {
      "long_name": "UART0.EVENTS_NCTS (at 0x40002104, read-write)",
      "purpose": "CTS is deactivated (set high). Not Clear To Send."
    },
    "UART0.EVENTS_RXDRDY": {
      "long_name": "UART0.EVENTS_RXDRDY (at 0x40002108, read-write)",
      "purpose": "Data received in RXD"
    },
    "UART0.EVENTS_RXTO": {
      "long_name": "UART0.EVENTS_RXTO (at 0x40002144, read-write)",
      "purpose": "Receiver timeout"
    },
    "UART0.EVENTS_TXDRDY": {
      "long_name": "UART0.EVENTS_TXDRDY (at 0x4000211c, read-write)",
      "purpose": "Data sent from TXD"
    },
    "UART0.INTENCLR": {
      "long_name": "UART0.INTENCLR (at 0x40002308, read-write)",
      "purpose": "Disable interrupt\n\nCTS, bit [0]    - Write '1' to Disable interrupt for CTS event\nNCTS, bit [1]   - Write '1' to Disable interrupt for NCTS event\nRXDRDY, bit [2] - Write '1' to Disable interrupt for RXDRDY event\nTXDRDY, bit [7] - Write '1' to Disable interrupt for TXDRDY event\nERROR, bit [9]  - Write '1' to Disable interrupt for ERROR event\nRXTO, bit [17]  - Write '1' to Disable interrupt for RXTO event"
    },
    "UART0.INTENSET": {
      "long_name": "UART0.INTENSET (at 0x40002304, read-write)",
      "purpose": "Enable interrupt\n\nCTS, bit [0]    - Write '1' to Enable interrupt for CTS event\nNCTS, bit [1]   - Write '1' to Enable interrupt for NCTS event\nRXDRDY, bit [2] - Write '1' to Enable interrupt for RXDRDY event\nTXDRDY, bit [7] - Write '1' to Enable interrupt for TXDRDY event\nERROR, bit [9]  - Write '1' to Enable interrupt for ERROR event\nRXTO, bit [17]  - Write '1' to Enable interrupt for RXTO event"
    },
    "UART0.PSELCTS": {
      "long_name": "UART0.PSELCTS (at 0x40002510, read-write)",
      "purpose": "Pin select for CTS\n\nPSELCTS, bits [0:31] - Pin number configuration for UART CTS signal; 0xFFFFFFFF\n                       for Disconnected (Disconnect)"
    },
    "UART0.PSELRTS": {
      "long_name": "UART0.PSELRTS (at 0x40002508, read-write)",
      "purpose": "Pin select for RTS\n\nPSELRTS, bits [0:31] - Pin number configuration for UART RTS signal; 0xFFFFFFFF\n                       for Disconnected (Disconnect)"
    },
    "UART0.PSELRXD": {
      "long_name": "UART0.PSELRXD (at 0x40002514, read-write)",
      "purpose": "Pin select for RXD\n\nPSELRXD, bits [0:31] - Pin number configuration for UART RXD signal; 0xFFFFFFFF\n                       for Disconnected (Disconnect)"
    },
    "UART0.PSELTXD": {
      "long_name": "UART0.PSELTXD (at 0x4000250c, read-write)",
      "purpose": "Pin select for TXD\n\nPSELTXD, bits [0:31] - Pin number configuration for UART TXD signal; 0xFFFFFFFF\n                       for Disconnected (Disconnect)"
    },
    "UART0.RXD": {
      "long_name": "UART0.RXD (at 0x40002518, read-only)",
      "purpose": "RXD register\n\nRXD, bits [0:7] - RX data received in previous transfers, double buffered"
    },
    "UART0.SHORTS": {
      "long_name": "UART0.SHORTS (at 0x40002200, read-write)",
      "purpose": "Shortcut register\n\nCTS_STARTRX, bit [3] - Shortcut between CTS event and STARTRX task\nNCTS_STOPRX, bit [4] - Shortcut between NCTS event and STOPRX task"
    },
    "UART0.TASKS_STARTRX": {
      "long_name": "UART0.TASKS_STARTRX (at 0x40002000, write-only)",
      "purpose": "Start UART receiver"
    },
    "UART0.TASKS_STARTTX": {
      "long_name": "UART0.TASKS_STARTTX (at 0x40002008, write-only)",
      "purpose": "Start UART transmitter"
    },
    "UART0.TASKS_STOPRX": {
      "long_name": "UART0.TASKS_STOPRX (at 0x40002004, write-only)",
      "purpose": "Stop UART receiver"
    },
    "UART0.TASKS_STOPTX": {
      "long_name": "UART0.TASKS_STOPTX (at 0x4000200c, write-only)",
      "purpose": "Stop UART transmitter"
    },
    "UART0.TASKS_SUSPEND": {
      "long_name": "UART0.TASKS_SUSPEND (at 0x4000201c, write-only)",
      "purpose": "Suspend UART"
    },
    "UART0.TXD": {
      "long_name": "UART0.TXD (at 0x4000251c, write-only)",
      "purpose": "TXD register\n\nTXD, bits [0:7] - TX data to be transferred"
    },
    "UARTE0.BAUDRATE": {
      "long_name": "UARTE0.BAUDRATE (at 0x40002524, read-write)",
      "purpose": "Baud rate. Accuracy depends on the HFCLK source selected.\n\nBAUDRATE, bits [0:31] - Baud rate; 0x0004F000 for Baud1200 (1200 baud (actual\n                        rate: 1205)), 0x0009D000 for Baud2400 (2400 baud (actual\n                        rate: 2396)), 0x0013B000 for Baud4800 (4800 baud (actual\n                        rate: 4808)), 0x00275000 for Baud9600 (9600 baud (actual\n                        rate: 9598)), 0x003AF000 for Baud14400 (14400 baud\n                        (actual rate: 14401)), 0x004EA000 for Baud19200 (19200\n                        baud (actual rate: 19208)), 0x0075C000 for Baud28800\n                        (28800 baud (actual rate: 28777)), 0x00800000 for\n                        Baud31250 (31250 baud), 0x009D0000 for Baud38400 (38400\n                        baud (actual rate: 38369)), 0x00E50000 for Baud56000\n                        (56000 baud (actual rate: 55944)), 0x00EB0000 for\n                        Baud57600 (57600 baud (actual rate: 57554)), 0x013A9000\n                        for Baud76800 (76800 baud (actual rate: 76923)),\n                        0x01D60000 for Baud115200 (115200 baud (actual rate:\n                        115108)), 0x03B00000 for Baud230400 (230400 baud (actual\n                        rate: 231884)), 0x04000000 for Baud250000 (250000 baud),\n                        0x07400000 for Baud460800 (460800 baud (actual rate:\n                        457143)), 0x0F000000 for Baud921600 (921600 baud (actual\n                        rate: 941176)), 0x10000000 for Baud1M (1Mega baud)"
    },
    "UARTE0.CONFIG": {
      "long_name": "UARTE0.CONFIG (at 0x4000256c, read-write)",
      "purpose": "Configuration of parity and hardware flow control\n\nHWFC, bit [0]      - Hardware flow control\nPARITY, bits [1:3] - Parity; 0x0 for Excluded (Exclude parity bit), 0x7 for\n                     Included (Include parity bit)"
    },
    "UARTE0.ENABLE": {
      "long_name": "UARTE0.ENABLE (at 0x40002500, read-write)",
      "purpose": "Enable UART\n\nENABLE, bits [0:3] - Enable or disable UARTE; 0 for Disabled (Disable UARTE), 8\n                     for Enabled (Enable UARTE)"
    },
    "UARTE0.ERRORSRC": {
      "long_name": "UARTE0.ERRORSRC (at 0x40002480, read-write)",
      "purpose": "Error source\n\nOVERRUN, bit [0] - Overrun error\nPARITY, bit [1]  - Parity error\nFRAMING, bit [2] - Framing error occurred\nBREAK, bit [3]   - Break condition"
    },
    "UARTE0.EVENTS_CTS": {
      "long_name": "UARTE0.EVENTS_CTS (at 0x40002100, read-write)",
      "purpose": "CTS is activated (set low). Clear To Send."
    },
    "UARTE0.EVENTS_ENDRX": {
      "long_name": "UARTE0.EVENTS_ENDRX (at 0x40002110, read-write)",
      "purpose": "Receive buffer is filled up"
    },
    "UARTE0.EVENTS_ENDTX": {
      "long_name": "UARTE0.EVENTS_ENDTX (at 0x40002120, read-write)",
      "purpose": "Last TX byte transmitted"
    },
    "UARTE0.EVENTS_ERROR": {
      "long_name": "UARTE0.EVENTS_ERROR (at 0x40002124, read-write)",
      "purpose": "Error detected"
    },
    "UARTE0.EVENTS_NCTS": {
      "long_name": "UARTE0.EVENTS_NCTS (at 0x40002104, read-write)",
      "purpose": "CTS is deactivated (set high). Not Clear To Send."
    },
    "UARTE0.EVENTS_RXDRDY": {
      "long_name": "UARTE0.EVENTS_RXDRDY (at 0x40002108, read-write)",
      "purpose": "Data received in RXD (but potentially not yet transferred to Data RAM)"
    },
    "UARTE0.EVENTS_RXSTARTED": {
      "long_name": "UARTE0.EVENTS_RXSTARTED (at 0x4000214c, read-write)",
      "purpose": "UART receiver has started"
    },
    "UARTE0.EVENTS_RXTO": {
      "long_name": "UARTE0.EVENTS_RXTO (at 0x40002144, read-write)",
      "purpose": "Receiver timeout"
    },
    "UARTE0.EVENTS_TXDRDY": {
      "long_name": "UARTE0.EVENTS_TXDRDY (at 0x4000211c, read-write)",
      "purpose": "Data sent from TXD"
    },
    "UARTE0.EVENTS_TXSTARTED": {
      "long_name": "UARTE0.EVENTS_TXSTARTED (at 0x40002150, read-write)",
      "purpose": "UART transmitter has started"
    },
    "UARTE0.EVENTS_TXSTOPPED": {
      "long_name": "UARTE0.EVENTS_TXSTOPPED (at 0x40002158, read-write)",
      "purpose": "Transmitter stopped"
    },
    "UARTE0.INTEN": {
      "long_name": "UARTE0.INTEN (at 0x40002300, read-write)",
      "purpose": "Enable or disable interrupt\n\nCTS, bit [0]        - Enable or disable interrupt for CTS event\nNCTS, bit [1]       - Enable or disable interrupt for NCTS event\nRXDRDY, bit [2]     - Enable or disable interrupt for RXDRDY event\nENDRX, bit [4]      - Enable or disable interrupt for ENDRX event\nTXDRDY, bit [7]     - Enable or disable interrupt for TXDRDY event\nENDTX, bit [8]      - Enable or disable interrupt for ENDTX event\nERROR, bit [9]      - Enable or disable interrupt for ERROR event\nRXTO, bit [17]      - Enable or disable interrupt for RXTO event\nRXSTARTED, bit [19] - Enable or disable interrupt for RXSTARTED event\nTXSTARTED, bit [20] - Enable or disable interrupt for TXSTARTED event\nTXSTOPPED, bit [22] - Enable or disable interrupt for TXSTOPPED event"
    },
    "UARTE0.INTENCLR": {
      "long_name": "UARTE0.INTENCLR (at 0x40002308, read-write)",
      "purpose": "Disable interrupt\n\nCTS, bit [0]        - Write '1' to Disable interrupt for CTS event\nNCTS, bit [1]       - Write '1' to Disable interrupt for NCTS event\nRXDRDY, bit [2]     - Write '1' to Disable interrupt for RXDRDY event\nENDRX, bit [4]      - Write '1' to Disable interrupt for ENDRX event\nTXDRDY, bit [7]     - Write '1' to Disable interrupt for TXDRDY event\nENDTX, bit [8]      - Write '1' to Disable interrupt for ENDTX event\nERROR, bit [9]      - Write '1' to Disable interrupt for ERROR event\nRXTO, bit [17]      - Write '1' to Disable interrupt for RXTO event\nRXSTARTED, bit [19] - Write '1' to Disable interrupt for RXSTARTED event\nTXSTARTED, bit [20] - Write '1' to Disable interrupt for TXSTARTED event\nTXSTOPPED, bit [22] - Write '1' to Disable interrupt for TXSTOPPED event"
    },
    "UARTE0.INTENSET": {
      "long_name": "UARTE0.INTENSET (at 0x40002304, read-write)",
      "purpose": "Enable interrupt\n\nCTS, bit [0]        - Write '1' to Enable interrupt for CTS event\nNCTS, bit [1]       - Write '1' to Enable interrupt for NCTS event\nRXDRDY, bit [2]     - Write '1' to Enable interrupt for RXDRDY event\nENDRX, bit [4]      - Write '1' to Enable interrupt for ENDRX event\nTXDRDY, bit [7]     - Write '1' to Enable interrupt for TXDRDY event\nENDTX, bit [8]      - Write '1' to Enable interrupt for ENDTX event\nERROR, bit [9]      - Write '1' to Enable interrupt for ERROR event\nRXTO, bit [17]      - Write '1' to Enable interrupt for RXTO event\nRXSTARTED, bit [19] - Write '1' to Enable interrupt for RXSTARTED event\nTXSTARTED, bit [20] - Write '1' to Enable interrupt for TXSTARTED event\nTXSTOPPED, bit [22] - Write '1' to Enable interrupt for TXSTOPPED event"
    },
    "UARTE0.PSEL.CTS": {
      "long_name": "UARTE0.PSEL.CTS (at 0x40002510, read-write)",
      "purpose": "Pin select for CTS signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "UARTE0.PSEL.RTS": {
      "long_name": "UARTE0.PSEL.RTS (at 0x40002508, read-write)",
      "purpose": "Pin select for RTS signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "UARTE0.PSEL.RXD": {
      "long_name": "UARTE0.PSEL.RXD (at 0x40002514, read-write)",
      "purpose": "Pin select for RXD signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "UARTE0.PSEL.TXD": {
      "long_name": "UARTE0.PSEL.TXD (at 0x4000250c, read-write)",
      "purpose": "Pin select for TXD signal\n\nPIN, bits [0:4]   - Pin number\nCONNECT, bit [31] - Connection"
    },
    "UARTE0.RXD.AMOUNT": {
      "long_name": "UARTE0.RXD.AMOUNT (at 0x4000253c, read-only)",
      "purpose": "Number of bytes transferred in the last transaction\n\nAMOUNT, bits [0:7] - Number of bytes transferred in the last transaction"
    },
    "UARTE0.RXD.MAXCNT": {
      "long_name": "UARTE0.RXD.MAXCNT (at 0x40002538, read-write)",
      "purpose": "Maximum number of bytes in receive buffer\n\nMAXCNT, bits [0:7] - Maximum number of bytes in receive buffer"
    },
    "UARTE0.RXD.PTR": {
      "long_name": "UARTE0.RXD.PTR (at 0x40002534, read-write)",
      "purpose": "Data pointer\n\nPTR, bits [0:31] - Data pointer"
    },
    "UARTE0.SHORTS": {
      "long_name": "UARTE0.SHORTS (at 0x40002200, read-write)",
      "purpose": "Shortcut register\n\nENDRX_STARTRX, bit [5] - Shortcut between ENDRX event and STARTRX task\nENDRX_STOPRX, bit [6]  - Shortcut between ENDRX event and STOPRX task"
    },
    "UARTE0.TASKS_FLUSHRX": {
      "long_name": "UARTE0.TASKS_FLUSHRX (at 0x4000202c, write-only)",
      "purpose": "Flush RX FIFO into RX buffer"
    },
    "UARTE0.TASKS_STARTRX": {
      "long_name": "UARTE0.TASKS_STARTRX (at 0x40002000, write-only)",
      "purpose": "Start UART receiver"
    },
    "UARTE0.TASKS_STARTTX": {
      "long_name": "UARTE0.TASKS_STARTTX (at 0x40002008, write-only)",
      "purpose": "Start UART transmitter"
    },
    "UARTE0.TASKS_STOPRX": {
      "long_name": "UARTE0.TASKS_STOPRX (at 0x40002004, write-only)",
      "purpose": "Stop UART receiver"
    },
    "UARTE0.TASKS_STOPTX": {
      "long_name": "UARTE0.TASKS_STOPTX (at 0x4000200c, write-only)",
      "purpose": "Stop UART transmitter"
    },
    "UARTE0.TXD.AMOUNT": {
      "long_name": "UARTE0.TXD.AMOUNT (at 0x4000254c, read-only)",
      "purpose": "Number of bytes transferred in the last transaction\n\nAMOUNT, bits [0:7] - Number of bytes transferred in the last transaction"
    },
    "UARTE0.TXD.MAXCNT": {
      "long_name": "UARTE0.TXD.MAXCNT (at 0x40002548, read-write)",
      "purpose": "Maximum number of bytes in transmit buffer\n\nMAXCNT, bits [0:7] - Maximum number of bytes in transmit buffer"
    },
    "UARTE0.TXD.PTR": {
      "long_name": "UARTE0.TXD.PTR (at 0x40002544, read-write)",
      "purpose": "Data pointer\n\nPTR, bits [0:31] - Data pointer"
    },
    "UICR.APPROTECT": {
      "long_name": "UICR.APPROTECT (at 0x10001208, read-write)",
      "purpose": "Access Port protection\n\nPALL, bits [0:7] - Enable or disable Access Port protection. Any other value\n                   than 0xFF being written to this field will enable protection;\n                   0xFF for Disabled (Disable), 0x00 for Enabled (Enable)"
    },
    "UICR.CUSTOMER<n>": {
      "long_name": "UICR.CUSTOMER<n> (at 0x10001080, read-write)",
      "purpose": "Reserved for customer\n\nCUSTOMER, bits [0:31] - Reserved for customer"
    },
    "UICR.NFCPINS": {
      "long_name": "UICR.NFCPINS (at 0x1000120c, read-write)",
      "purpose": "Setting of pins dedicated to NFC functionality: NFC antenna or GPIO\n\nPROTECT, bit [0] - Setting of pins dedicated to NFC functionality"
    },
    "UICR.NRFFW<n>": {
      "long_name": "UICR.NRFFW<n> (at 0x10001014, read-write)",
      "purpose": "Reserved for Nordic firmware design\n\nNRFFW, bits [0:31] - Reserved for Nordic firmware design"
    },
    "UICR.NRFHW<n>": {
      "long_name": "UICR.NRFHW<n> (at 0x10001050, read-write)",
      "purpose": "Reserved for Nordic hardware design\n\nNRFHW, bits [0:31] - Reserved for Nordic hardware design"
    },
    "UICR.PSELRESET<n>": {
      "long_name": "UICR.PSELRESET<n> (at 0x10001200, read-write)",
      "purpose": "Mapping of the nRESET function (see POWER chapter for details)\n\nPIN, bits [0:5]   - GPIO number P0.n onto which Reset is exposed\nCONNECT, bit [31] - Connection"
    },
    "UICR.UNUSED0": {
      "long_name": "UICR.UNUSED0 (at 0x10001000, read-write)",
      "purpose": "Unspecified"
    },
    "UICR.UNUSED1": {
      "long_name": "UICR.UNUSED1 (at 0x10001004, read-write)",
      "purpose": "Unspecified"
    },
    "UICR.UNUSED2": {
      "long_name": "UICR.UNUSED2 (at 0x10001008, read-write)",
      "purpose": "Unspecified"
    },
    "UICR.UNUSED3": {
      "long_name": "UICR.UNUSED3 (at 0x10001010, read-write)",
      "purpose": "Unspecified"
    },
    "WDT.CONFIG": {
      "long_name": "WDT.CONFIG (at 0x4001050c, read-write)",
      "purpose": "Configuration register\n\nSLEEP, bit [0] - Configure the watchdog to either be paused, or kept running,\n                 while the CPU is sleeping\nHALT, bit [3]  - Configure the watchdog to either be paused, or kept running,\n                 while the CPU is halted by the debugger"
    },
    "WDT.CRV": {
      "long_name": "WDT.CRV (at 0x40010504, read-write)",
      "purpose": "Counter reload value\n\nCRV, bits [0:31] - Counter reload value in number of cycles of the 32.768 kHz\n                   clock"
    },
    "WDT.EVENTS_TIMEOUT": {
      "long_name": "WDT.EVENTS_TIMEOUT (at 0x40010100, read-write)",
      "purpose": "Watchdog timeout"
    },
    "WDT.INTENCLR": {
      "long_name": "WDT.INTENCLR (at 0x40010308, read-write)",
      "purpose": "Disable interrupt\n\nTIMEOUT, bit [0] - Write '1' to Disable interrupt for TIMEOUT event"
    },
    "WDT.INTENSET": {
      "long_name": "WDT.INTENSET (at 0x40010304, read-write)",
      "purpose": "Enable interrupt\n\nTIMEOUT, bit [0] - Write '1' to Enable interrupt for TIMEOUT event"
    },
    "WDT.REQSTATUS": {
      "long_name": "WDT.REQSTATUS (at 0x40010404, read-only)",
      "purpose": "Request status\n\nRR0, bit [0] - Request status for RR[0] register\nRR1, bit [1] - Request status for RR[1] register\nRR2, bit [2] - Request status for RR[2] register\nRR3, bit [3] - Request status for RR[3] register\nRR4, bit [4] - Request status for RR[4] register\nRR5, bit [5] - Request status for RR[5] register\nRR6, bit [6] - Request status for RR[6] register\nRR7, bit [7] - Request status for RR[7] register"
    },
    "WDT.RR<n>": {
      "long_name": "WDT.RR<n> (at 0x40010600, write-only)",
      "purpose": "Reload request <n>\n\nRR, bits [0:31] - Reload request register; 0x6E524635 for Reload (Value to\n                  request a reload of the watchdog timer)"
    },
    "WDT.RREN": {
      "long_name": "WDT.RREN (at 0x40010508, read-write)",
      "purpose": "Enable register for reload request registers\n\nRR0, bit [0] - Enable or disable RR[0] register\nRR1, bit [1] - Enable or disable RR[1] register\nRR2, bit [2] - Enable or disable RR[2] register\nRR3, bit [3] - Enable or disable RR[3] register\nRR4, bit [4] - Enable or disable RR[4] register\nRR5, bit [5] - Enable or disable RR[5] register\nRR6, bit [6] - Enable or disable RR[6] register\nRR7, bit [7] - Enable or disable RR[7] register"
    },
    "WDT.RUNSTATUS": {
      "long_name": "WDT.RUNSTATUS (at 0x40010400, read-only)",
      "purpose": "Run status\n\nRUNSTATUS, bit [0] - Indicates whether or not the watchdog is running"
    },
    "WDT.TASKS_START": {
      "long_name": "WDT.TASKS_START (at 0x40010000, write-only)",
      "purpose": "Start the watchdog"
    },
    "XPSR": {
      "long_name": "Program status register (XPSR)",
      "purpose": "N, bit [31]                   - Negative flag\nZ, bit [30]                   - Zero flag\nC, bit [29]                   - Carry flag\nV, bit [28]                   - Overflow flag\nQ, bit [27]                   - DSP overflow and saturation flag\nT, bit [24]                   - Thumb state bit\nICI/IT HighBits, bits [25:26] - Interruptible-continuable instruction bits (high\n                                bits)\nICI/IT LowBits, bits [10:15]  - Interruptible-continuable instruction bits (low\n                                bits)\nISR Number, bits [0:8]        - Interrupt service routine number"
    }
  }
}